#import "wsdd10.h"
#import "wsse.h"
/* gen/onvif.h
   Generated by wsdl2h 2.8.91 from wsdl/b-2.xsd wsdl/r-2.xsd wsdl/display.wsdl wsdl/bw-2.wsdl wsdl/ptz.wsdl wsdl/replay.wsdl wsdl/devicemgmt.wsdl wsdl/deviceio.wsdl wsdl/event.wsdl wsdl/rw-2.wsdl wsdl/receiver.wsdl wsdl/t-1.xsd wsdl/include wsdl/recording.wsdl wsdl/common.xsd wsdl/media.wsdl wsdl/onvif.xsd wsdl/search.wsdl wsdl/imaging.wsdl wsdl/bf-2.xsd and typemap.dat
   2024-07-01 07:07:45 GMT

   DO NOT INCLUDE THIS FILE DIRECTLY INTO YOUR PROJECT BUILDS
   USE THE soapcpp2-GENERATED SOURCE CODE FILES FOR YOUR PROJECT BUILDS

gSOAP XML Web services tools
Copyright (C) 2000-2018, Robert van Engelen, Genivia Inc. All Rights Reserved.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

/**

@copyright LICENSE:
@verbatim
--------------------------------------------------------------------------------
gSOAP XML Web services tools
Copyright (C) 2000-2019, Robert van Engelen, Genivia Inc. All Rights Reserved.
The wsdl2h tool and its generated software are released under the GPL.
This software is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
GPL license.

This program is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free Software
Foundation; either version 2 of the License, or (at your option) any later
version.

This program is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE. See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with
this program; if not, write to the Free Software Foundation, Inc., 59 Temple
Place, Suite 330, Boston, MA 02111-1307 USA

Author contact information:
engelen@genivia.com / engelen@acm.org

This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial-use license is available from Genivia, Inc., contact@genivia.com
--------------------------------------------------------------------------------
@endverbatim

*/


//gsoapopt c++,w

/******************************************************************************\
 *                                                                            *
 * Definitions                                                                *
 *                                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * $CONTAINER                                                                 *
 *   std::vector                                                              *
 *                                                                            *
\******************************************************************************/

#include <vector>
template <class T> class std::vector;

/******************************************************************************\
 *                                                                            *
 * Import                                                                     *
 *                                                                            *
\******************************************************************************/


// dom.h declares the DOM xsd__anyType object (compiler and link with dom.cpp)
#import "dom.h"
#import "tt.h"	// tt = <http://www.onvif.org/ver10/schema>
#import "wsa5.h"	// wsa5 = <http://www.w3.org/2005/08/addressing>

/******************************************************************************\
 *                                                                            *
 * Schema Namespaces                                                          *
 *                                                                            *
\******************************************************************************/


#define SOAP_NAMESPACE_OF_wsnt	"http://docs.oasis-open.org/wsn/b-2"
//gsoap wsnt  schema namespace:	http://docs.oasis-open.org/wsn/b-2
//gsoap wsnt  schema elementForm:	qualified
//gsoap wsnt  schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_wsrfr	"http://docs.oasis-open.org/wsrf/r-2"
//gsoap wsrfr schema namespace:	http://docs.oasis-open.org/wsrf/r-2
//gsoap wsrfr schema elementForm:	qualified
//gsoap wsrfr schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_tls	"http://www.onvif.org/ver10/display/wsdl"
//gsoap tls   schema namespace:	http://www.onvif.org/ver10/display/wsdl
//gsoap tls   schema elementForm:	qualified
//gsoap tls   schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_wsrfrw	"http://docs.oasis-open.org/wsrf/rw-2"
//gsoap wsrfrw schema namespace:	http://docs.oasis-open.org/wsrf/rw-2
//gsoap wsrfrw schema elementForm:	qualified
//gsoap wsrfrw schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_tptz	"http://www.onvif.org/ver20/ptz/wsdl"
//gsoap tptz  schema namespace:	http://www.onvif.org/ver20/ptz/wsdl
//gsoap tptz  schema elementForm:	qualified
//gsoap tptz  schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_trp	"http://www.onvif.org/ver10/replay/wsdl"
//gsoap trp   schema namespace:	http://www.onvif.org/ver10/replay/wsdl
//gsoap trp   schema elementForm:	qualified
//gsoap trp   schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_tds	"http://www.onvif.org/ver10/device/wsdl"
//gsoap tds   schema namespace:	http://www.onvif.org/ver10/device/wsdl
//gsoap tds   schema elementForm:	qualified
//gsoap tds   schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_tmd	"http://www.onvif.org/ver10/deviceIO/wsdl"
//gsoap tmd   schema namespace:	http://www.onvif.org/ver10/deviceIO/wsdl
//gsoap tmd   schema elementForm:	qualified
//gsoap tmd   schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_tev	"http://www.onvif.org/ver10/events/wsdl"
//gsoap tev   schema namespace:	http://www.onvif.org/ver10/events/wsdl
//gsoap tev   schema elementForm:	qualified
//gsoap tev   schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_trv	"http://www.onvif.org/ver10/receiver/wsdl"
//gsoap trv   schema namespace:	http://www.onvif.org/ver10/receiver/wsdl
//gsoap trv   schema elementForm:	qualified
//gsoap trv   schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_wstop	"http://docs.oasis-open.org/wsn/t-1"
//gsoap wstop schema namespace:	http://docs.oasis-open.org/wsn/t-1
//gsoap wstop schema elementForm:	qualified
//gsoap wstop schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_xop	"http://www.w3.org/2004/08/xop/include"
//gsoap xop   schema namespace:	http://www.w3.org/2004/08/xop/include
//gsoap xop   schema form:	unqualified

#define SOAP_NAMESPACE_OF_trc	"http://www.onvif.org/ver10/recording/wsdl"
//gsoap trc   schema namespace:	http://www.onvif.org/ver10/recording/wsdl
//gsoap trc   schema elementForm:	qualified
//gsoap trc   schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_tt	"http://www.onvif.org/ver10/schema"
//gsoap tt    schema namespace:	http://www.onvif.org/ver10/schema
//gsoap tt    schema elementForm:	qualified
//gsoap tt    schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_trt	"http://www.onvif.org/ver10/media/wsdl"
//gsoap trt   schema namespace:	http://www.onvif.org/ver10/media/wsdl
//gsoap trt   schema elementForm:	qualified
//gsoap trt   schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_tse	"http://www.onvif.org/ver10/search/wsdl"
//gsoap tse   schema namespace:	http://www.onvif.org/ver10/search/wsdl
//gsoap tse   schema elementForm:	qualified
//gsoap tse   schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_timg	"http://www.onvif.org/ver20/imaging/wsdl"
//gsoap timg  schema namespace:	http://www.onvif.org/ver20/imaging/wsdl
//gsoap timg  schema elementForm:	qualified
//gsoap timg  schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_wsrfbf	"http://docs.oasis-open.org/wsrf/bf-2"
//gsoap wsrfbf schema namespace:	http://docs.oasis-open.org/wsrf/bf-2
//gsoap wsrfbf schema elementForm:	qualified
//gsoap wsrfbf schema attributeForm:	unqualified

/******************************************************************************\
 *                                                                            *
 * Built-in Schema Types and Top-Level Elements and Attributes                *
 *                                                                            *
\******************************************************************************/

/// Built-in type "xs:QName".
typedef std::string xsd__QName;

/// Built-in type "xs:base64Binary".
class xsd__base64Binary
{ public:
    unsigned char *__ptr;
    int __size;
    char *id, *type, *options; // NOTE: non-NULL for DIME/MIME/MTOM XOP attachments only
};

/// Built-in type "xs:dateTime".
#import "custom/struct_timeval.h"

/// Built-in type "xs:hexBinary".
class xsd__hexBinary
{ public:
    unsigned char *__ptr;
    int __size;
};

// Imported type ""http://www.onvif.org/ver10/schema":FloatList" defined by tt__FloatList.

/// Class wrapper tt__FloatList__ for built-in type ""http://www.onvif.org/ver10/schema":FloatList" extends xsd__anyType.
class tt__FloatList__ : public xsd__anyType
{ public:
    tt__FloatList                        __item                        ;
};

// Imported type ""http://www.onvif.org/ver10/schema":IntList" defined by tt__IntList.

/// Class wrapper tt__IntList__ for built-in type ""http://www.onvif.org/ver10/schema":IntList" extends xsd__anyType.
class tt__IntList__ : public xsd__anyType
{ public:
    tt__IntList                          __item                        ;
};

// Imported type ""http://www.w3.org/2005/08/addressing":EndpointReferenceType" defined by wsa5__EndpointReferenceType.

/// Class wrapper wsa5__EndpointReferenceType__ for built-in type ""http://www.w3.org/2005/08/addressing":EndpointReferenceType" extends xsd__anyType.
class wsa5__EndpointReferenceType__ : public xsd__anyType
{ public:
    wsa5__EndpointReferenceType          __item                        ;
};

/// Primitive built-in type "SOAP-ENV:Envelope".
typedef std::string SOAP_ENV__Envelope;

/// Class wrapper SOAP_ENV__Envelope__ for built-in type "SOAP-ENV:Envelope" extends xsd__anyType.
class SOAP_ENV__Envelope__ : public xsd__anyType
{ public:
    SOAP_ENV__Envelope                   __item                        ;
};

/// Class wrapper SOAP_ENV__Fault_ for built-in type "SOAP-ENV:Fault" extends xsd__anyType.
class SOAP_ENV__Fault_ : public xsd__anyType
{ public:
    struct SOAP_ENV__Fault               __item                        ;
};

/// Primitive built-in type "xs:NCName".
typedef std::string xsd__NCName;

/// Class wrapper xsd__NCName__ for built-in type "xs:NCName" extends xsd__anyType.
class xsd__NCName__ : public xsd__anyType
{ public:
    xsd__NCName                          __item                        ;
};

/// Class wrapper xsd__QName__ for built-in type "xs:QName" extends xsd__anyType.
class xsd__QName__ : public xsd__anyType
{ public:
    xsd__QName                           __item                        ;
};

/// Primitive built-in type "xs:anySimpleType".
typedef std::string xsd__anySimpleType;

/// Class wrapper xsd__anySimpleType__ for built-in type "xs:anySimpleType" extends xsd__anyType.
class xsd__anySimpleType__ : public xsd__anyType
{ public:
    xsd__anySimpleType                   __item                        ;
};

/// Primitive built-in type "xs:anyURI".
typedef std::string xsd__anyURI;

/// Class wrapper xsd__anyURI__ for built-in type "xs:anyURI" extends xsd__anyType.
class xsd__anyURI__ : public xsd__anyType
{ public:
    xsd__anyURI                          __item                        ;
};

/// Class wrapper xsd__base64Binary__ for built-in type "xs:base64Binary" extends xsd__anyType.
class xsd__base64Binary__ : public xsd__anyType
{ public:
    xsd__base64Binary                    __item                        ;
};

/// Class wrapper xsd__boolean_ for built-in type "xs:boolean" extends xsd__anyType.
class xsd__boolean_ : public xsd__anyType
{ public:
    bool                                 __item                        ;
};

/// Class wrapper xsd__dateTime__ for built-in type "xs:dateTime" extends xsd__anyType.
class xsd__dateTime__ : public xsd__anyType
{ public:
    xsd__dateTime                        __item                        ;
};

/// Class wrapper xsd__double_ for built-in type "xs:double" extends xsd__anyType.
class xsd__double_ : public xsd__anyType
{ public:
    double                               __item                        ;
};

/// Primitive built-in type "xs:duration".
typedef std::string xsd__duration;

/// Class wrapper xsd__duration__ for built-in type "xs:duration" extends xsd__anyType.
class xsd__duration__ : public xsd__anyType
{ public:
    xsd__duration                        __item                        ;
};

/// Class wrapper xsd__float_ for built-in type "xs:float" extends xsd__anyType.
class xsd__float_ : public xsd__anyType
{ public:
    float                                __item                        ;
};

/// Class wrapper xsd__hexBinary__ for built-in type "xs:hexBinary" extends xsd__anyType.
class xsd__hexBinary__ : public xsd__anyType
{ public:
    xsd__hexBinary                       __item                        ;
};

/// Class wrapper xsd__int_ for built-in type "xs:int" extends xsd__anyType.
class xsd__int_ : public xsd__anyType
{ public:
    int                                  __item                        ;
};

/// Primitive built-in type "xs:integer".
typedef std::string xsd__integer;

/// Class wrapper xsd__integer__ for built-in type "xs:integer" extends xsd__anyType.
class xsd__integer__ : public xsd__anyType
{ public:
    xsd__integer                         __item                        ;
};

/// Primitive built-in type "xs:nonNegativeInteger".
typedef std::string xsd__nonNegativeInteger;

/// Class wrapper xsd__nonNegativeInteger__ for built-in type "xs:nonNegativeInteger" extends xsd__anyType.
class xsd__nonNegativeInteger__ : public xsd__anyType
{ public:
    xsd__nonNegativeInteger              __item                        ;
};

/// Class wrapper xsd__string_ for built-in type "xs:string" extends xsd__anyType.
class xsd__string_ : public xsd__anyType
{ public:
    std::string                          __item                        ;
};

/// Primitive built-in type "xs:token".
typedef std::string xsd__token;

/// Class wrapper xsd__token__ for built-in type "xs:token" extends xsd__anyType.
class xsd__token__ : public xsd__anyType
{ public:
    xsd__token                           __item                        ;
};

/// Built-in attribute "xmime:contentType".
typedef std::string _xmime__contentType;

//gsoap xmime schema namespace:	http://www.w3.org/2005/05/xmlmime

/// Built-in attribute "xml:lang".
typedef std::string _xml__lang;


/******************************************************************************\
 *                                                                            *
 * Forward Declarations                                                       *
 *                                                                            *
\******************************************************************************/


class wsnt__QueryExpressionType;

class wsnt__TopicExpressionType;

class wsnt__FilterType;

class wsnt__SubscriptionPolicyType;

class wsnt__NotificationMessageHolderType;

class wsnt__SubscribeCreationFailedFaultType;

class wsnt__InvalidFilterFaultType;

class wsnt__TopicExpressionDialectUnknownFaultType;

class wsnt__InvalidTopicExpressionFaultType;

class wsnt__TopicNotSupportedFaultType;

class wsnt__MultipleTopicsSpecifiedFaultType;

class wsnt__InvalidProducerPropertiesExpressionFaultType;

class wsnt__InvalidMessageContentExpressionFaultType;

class wsnt__UnrecognizedPolicyRequestFaultType;

class wsnt__UnsupportedPolicyRequestFaultType;

class wsnt__NotifyMessageNotSupportedFaultType;

class wsnt__UnacceptableInitialTerminationTimeFaultType;

class wsnt__NoCurrentMessageOnTopicFaultType;

class wsnt__UnableToGetMessagesFaultType;

class wsnt__UnableToDestroyPullPointFaultType;

class wsnt__UnableToCreatePullPointFaultType;

class wsnt__UnacceptableTerminationTimeFaultType;

class wsnt__UnableToDestroySubscriptionFaultType;

class wsnt__PauseFailedFaultType;

class wsnt__ResumeFailedFaultType;

class _wsnt__NotificationProducerRP;

class _wsnt__SubscriptionManagerRP;

class _wsnt__Notify;

class _wsnt__UseRaw;

class _wsnt__Subscribe;

class _wsnt__SubscribeResponse;

class _wsnt__GetCurrentMessage;

class _wsnt__GetCurrentMessageResponse;

class _wsnt__GetMessages;

class _wsnt__GetMessagesResponse;

class _wsnt__DestroyPullPoint;

class _wsnt__DestroyPullPointResponse;

class _wsnt__CreatePullPoint;

class _wsnt__CreatePullPointResponse;

class _wsnt__Renew;

class _wsnt__RenewResponse;

class _wsnt__Unsubscribe;

class _wsnt__UnsubscribeResponse;

class _wsnt__PauseSubscription;

class _wsnt__PauseSubscriptionResponse;

class _wsnt__ResumeSubscription;

class _wsnt__ResumeSubscriptionResponse;

class wsrfr__ResourceUnknownFaultType;

class wsrfr__ResourceUnavailableFaultType;

class tls__Capabilities;

class _tls__GetServiceCapabilities;

class _tls__GetServiceCapabilitiesResponse;

class _tls__GetLayout;

class _tls__GetLayoutResponse;

class _tls__SetLayout;

class _tls__SetLayoutResponse;

class _tls__GetDisplayOptions;

class _tls__GetDisplayOptionsResponse;

class _tls__GetPaneConfigurations;

class _tls__GetPaneConfigurationsResponse;

class _tls__GetPaneConfiguration;

class _tls__GetPaneConfigurationResponse;

class _tls__SetPaneConfigurations;

class _tls__SetPaneConfigurationsResponse;

class _tls__SetPaneConfiguration;

class _tls__SetPaneConfigurationResponse;

class _tls__CreatePaneConfiguration;

class _tls__CreatePaneConfigurationResponse;

class _tls__DeletePaneConfiguration;

class _tls__DeletePaneConfigurationResponse;

class tptz__Capabilities;

class _tptz__GetServiceCapabilities;

class _tptz__GetServiceCapabilitiesResponse;

class _tptz__GetNodes;

class _tptz__GetNodesResponse;

class _tptz__GetNode;

class _tptz__GetNodeResponse;

class _tptz__GetConfigurations;

class _tptz__GetConfigurationsResponse;

class _tptz__GetConfiguration;

class _tptz__GetConfigurationResponse;

class _tptz__SetConfiguration;

class _tptz__SetConfigurationResponse;

class _tptz__GetConfigurationOptions;

class _tptz__GetConfigurationOptionsResponse;

class _tptz__SendAuxiliaryCommand;

class _tptz__SendAuxiliaryCommandResponse;

class _tptz__GetPresets;

class _tptz__GetPresetsResponse;

class _tptz__SetPreset;

class _tptz__SetPresetResponse;

class _tptz__RemovePreset;

class _tptz__RemovePresetResponse;

class _tptz__GotoPreset;

class _tptz__GotoPresetResponse;

class _tptz__GetStatus;

class _tptz__GetStatusResponse;

class _tptz__GotoHomePosition;

class _tptz__GotoHomePositionResponse;

class _tptz__SetHomePosition;

class _tptz__SetHomePositionResponse;

class _tptz__ContinuousMove;

class _tptz__ContinuousMoveResponse;

class _tptz__RelativeMove;

class _tptz__RelativeMoveResponse;

class _tptz__AbsoluteMove;

class _tptz__AbsoluteMoveResponse;

class _tptz__Stop;

class _tptz__StopResponse;

class _tptz__GetPresetTours;

class _tptz__GetPresetToursResponse;

class _tptz__GetPresetTour;

class _tptz__GetPresetTourResponse;

class _tptz__GetPresetTourOptions;

class _tptz__GetPresetTourOptionsResponse;

class _tptz__CreatePresetTour;

class _tptz__CreatePresetTourResponse;

class _tptz__ModifyPresetTour;

class _tptz__ModifyPresetTourResponse;

class _tptz__OperatePresetTour;

class _tptz__OperatePresetTourResponse;

class _tptz__RemovePresetTour;

class _tptz__RemovePresetTourResponse;

class _tptz__GetCompatibleConfigurations;

class _tptz__GetCompatibleConfigurationsResponse;

class trp__Capabilities;

class _trp__GetServiceCapabilities;

class _trp__GetServiceCapabilitiesResponse;

class _trp__GetReplayUri;

class _trp__GetReplayUriResponse;

class _trp__SetReplayConfiguration;

class _trp__SetReplayConfigurationResponse;

class _trp__GetReplayConfiguration;

class _trp__GetReplayConfigurationResponse;

class tds__Service;

class tds__DeviceServiceCapabilities;

class tds__NetworkCapabilities;

class tds__SecurityCapabilities;

class tds__SystemCapabilities;

class tds__MiscCapabilities;

class tds__UserCredential;

class tds__StorageConfigurationData;

class tds__StorageConfiguration;

class _tds__GetServices;

class _tds__GetServicesResponse;

class _tds__GetServiceCapabilities;

class _tds__GetServiceCapabilitiesResponse;

class _tds__GetDeviceInformation;

class _tds__GetDeviceInformationResponse;

class _tds__SetSystemDateAndTime;

class _tds__SetSystemDateAndTimeResponse;

class _tds__GetSystemDateAndTime;

class _tds__GetSystemDateAndTimeResponse;

class _tds__SetSystemFactoryDefault;

class _tds__SetSystemFactoryDefaultResponse;

class _tds__UpgradeSystemFirmware;

class _tds__UpgradeSystemFirmwareResponse;

class _tds__SystemReboot;

class _tds__SystemRebootResponse;

class _tds__RestoreSystem;

class _tds__RestoreSystemResponse;

class _tds__GetSystemBackup;

class _tds__GetSystemBackupResponse;

class _tds__GetSystemSupportInformation;

class _tds__GetSystemSupportInformationResponse;

class _tds__GetSystemLog;

class _tds__GetSystemLogResponse;

class _tds__GetScopes;

class _tds__GetScopesResponse;

class _tds__SetScopes;

class _tds__SetScopesResponse;

class _tds__AddScopes;

class _tds__AddScopesResponse;

class _tds__RemoveScopes;

class _tds__RemoveScopesResponse;

class _tds__GetDiscoveryMode;

class _tds__GetDiscoveryModeResponse;

class _tds__SetDiscoveryMode;

class _tds__SetDiscoveryModeResponse;

class _tds__GetRemoteDiscoveryMode;

class _tds__GetRemoteDiscoveryModeResponse;

class _tds__SetRemoteDiscoveryMode;

class _tds__SetRemoteDiscoveryModeResponse;

class _tds__GetDPAddresses;

class _tds__GetDPAddressesResponse;

class _tds__SetDPAddresses;

class _tds__SetDPAddressesResponse;

class _tds__GetEndpointReference;

class _tds__GetEndpointReferenceResponse;

class _tds__GetRemoteUser;

class _tds__GetRemoteUserResponse;

class _tds__SetRemoteUser;

class _tds__SetRemoteUserResponse;

class _tds__GetUsers;

class _tds__GetUsersResponse;

class _tds__CreateUsers;

class _tds__CreateUsersResponse;

class _tds__DeleteUsers;

class _tds__DeleteUsersResponse;

class _tds__SetUser;

class _tds__SetUserResponse;

class _tds__GetWsdlUrl;

class _tds__GetWsdlUrlResponse;

class _tds__GetCapabilities;

class _tds__GetCapabilitiesResponse;

class _tds__GetHostname;

class _tds__GetHostnameResponse;

class _tds__SetHostname;

class _tds__SetHostnameResponse;

class _tds__SetHostnameFromDHCP;

class _tds__SetHostnameFromDHCPResponse;

class _tds__GetDNS;

class _tds__GetDNSResponse;

class _tds__SetDNS;

class _tds__SetDNSResponse;

class _tds__GetNTP;

class _tds__GetNTPResponse;

class _tds__SetNTP;

class _tds__SetNTPResponse;

class _tds__GetDynamicDNS;

class _tds__GetDynamicDNSResponse;

class _tds__SetDynamicDNS;

class _tds__SetDynamicDNSResponse;

class _tds__GetNetworkInterfaces;

class _tds__GetNetworkInterfacesResponse;

class _tds__SetNetworkInterfaces;

class _tds__SetNetworkInterfacesResponse;

class _tds__GetNetworkProtocols;

class _tds__GetNetworkProtocolsResponse;

class _tds__SetNetworkProtocols;

class _tds__SetNetworkProtocolsResponse;

class _tds__GetNetworkDefaultGateway;

class _tds__GetNetworkDefaultGatewayResponse;

class _tds__SetNetworkDefaultGateway;

class _tds__SetNetworkDefaultGatewayResponse;

class _tds__GetZeroConfiguration;

class _tds__GetZeroConfigurationResponse;

class _tds__SetZeroConfiguration;

class _tds__SetZeroConfigurationResponse;

class _tds__GetIPAddressFilter;

class _tds__GetIPAddressFilterResponse;

class _tds__SetIPAddressFilter;

class _tds__SetIPAddressFilterResponse;

class _tds__AddIPAddressFilter;

class _tds__AddIPAddressFilterResponse;

class _tds__RemoveIPAddressFilter;

class _tds__RemoveIPAddressFilterResponse;

class _tds__GetAccessPolicy;

class _tds__GetAccessPolicyResponse;

class _tds__SetAccessPolicy;

class _tds__SetAccessPolicyResponse;

class _tds__CreateCertificate;

class _tds__CreateCertificateResponse;

class _tds__GetCertificates;

class _tds__GetCertificatesResponse;

class _tds__GetCertificatesStatus;

class _tds__GetCertificatesStatusResponse;

class _tds__SetCertificatesStatus;

class _tds__SetCertificatesStatusResponse;

class _tds__DeleteCertificates;

class _tds__DeleteCertificatesResponse;

class _tds__GetPkcs10Request;

class _tds__GetPkcs10RequestResponse;

class _tds__LoadCertificates;

class _tds__LoadCertificatesResponse;

class _tds__GetClientCertificateMode;

class _tds__GetClientCertificateModeResponse;

class _tds__SetClientCertificateMode;

class _tds__SetClientCertificateModeResponse;

class _tds__GetCACertificates;

class _tds__GetCACertificatesResponse;

class _tds__LoadCertificateWithPrivateKey;

class _tds__LoadCertificateWithPrivateKeyResponse;

class _tds__GetCertificateInformation;

class _tds__GetCertificateInformationResponse;

class _tds__LoadCACertificates;

class _tds__LoadCACertificatesResponse;

class _tds__CreateDot1XConfiguration;

class _tds__CreateDot1XConfigurationResponse;

class _tds__SetDot1XConfiguration;

class _tds__SetDot1XConfigurationResponse;

class _tds__GetDot1XConfiguration;

class _tds__GetDot1XConfigurationResponse;

class _tds__GetDot1XConfigurations;

class _tds__GetDot1XConfigurationsResponse;

class _tds__DeleteDot1XConfiguration;

class _tds__DeleteDot1XConfigurationResponse;

class _tds__GetRelayOutputs;

class _tds__GetRelayOutputsResponse;

class _tds__SetRelayOutputSettings;

class _tds__SetRelayOutputSettingsResponse;

class _tds__SetRelayOutputState;

class _tds__SetRelayOutputStateResponse;

class _tds__SendAuxiliaryCommand;

class _tds__SendAuxiliaryCommandResponse;

class _tds__GetDot11Capabilities;

class _tds__GetDot11CapabilitiesResponse;

class _tds__GetDot11Status;

class _tds__GetDot11StatusResponse;

class _tds__ScanAvailableDot11Networks;

class _tds__ScanAvailableDot11NetworksResponse;

class _tds__GetSystemUris;

class _tds__GetSystemUrisResponse;

class _tds__StartFirmwareUpgrade;

class _tds__StartFirmwareUpgradeResponse;

class _tds__StartSystemRestore;

class _tds__StartSystemRestoreResponse;

class _tds__GetStorageConfigurations;

class _tds__GetStorageConfigurationsResponse;

class _tds__CreateStorageConfiguration;

class _tds__CreateStorageConfigurationResponse;

class _tds__GetStorageConfiguration;

class _tds__GetStorageConfigurationResponse;

class _tds__SetStorageConfiguration;

class _tds__SetStorageConfigurationResponse;

class _tds__DeleteStorageConfiguration;

class _tds__DeleteStorageConfigurationResponse;

class _tds__GetGeoLocation;

class _tds__GetGeoLocationResponse;

class _tds__SetGeoLocation;

class _tds__SetGeoLocationResponse;

class _tds__DeleteGeoLocation;

class _tds__DeleteGeoLocationResponse;

class tmd__Capabilities;

class tmd__RelayOutputOptions;

class tmd__RelayOutputOptionsExtension;

class tmd__Get;

class tmd__GetResponse;

class tmd__DigitalInputConfigurationInputOptions;

class tmd__SerialData;

class tmd__SerialPort;

class tmd__SerialPortConfiguration;

class tmd__SerialPortConfigurationOptions;

class tmd__ParityBitList;

class _tmd__GetServiceCapabilities;

class _tmd__GetServiceCapabilitiesResponse;

class _tmd__GetRelayOutputOptions;

class _tmd__GetRelayOutputOptionsResponse;

class _tmd__GetVideoOutputs;

class _tmd__GetVideoOutputsResponse;

class _tmd__GetAudioSourceConfiguration;

class _tmd__GetAudioSourceConfigurationResponse;

class _tmd__GetAudioOutputConfiguration;

class _tmd__GetAudioOutputConfigurationResponse;

class _tmd__GetVideoSourceConfiguration;

class _tmd__GetVideoSourceConfigurationResponse;

class _tmd__GetVideoOutputConfiguration;

class _tmd__GetVideoOutputConfigurationResponse;

class _tmd__SetAudioSourceConfiguration;

class _tmd__SetAudioSourceConfigurationResponse;

class _tmd__SetAudioOutputConfiguration;

class _tmd__SetAudioOutputConfigurationResponse;

class _tmd__SetVideoSourceConfiguration;

class _tmd__SetVideoSourceConfigurationResponse;

class _tmd__SetVideoOutputConfiguration;

class _tmd__SetVideoOutputConfigurationResponse;

class _tmd__GetVideoSourceConfigurationOptions;

class _tmd__GetVideoSourceConfigurationOptionsResponse;

class _tmd__GetVideoOutputConfigurationOptions;

class _tmd__GetVideoOutputConfigurationOptionsResponse;

class _tmd__GetAudioSourceConfigurationOptions;

class _tmd__GetAudioSourceConfigurationOptionsResponse;

class _tmd__GetAudioOutputConfigurationOptions;

class _tmd__GetAudioOutputConfigurationOptionsResponse;

class _tmd__SetRelayOutputSettings;

class _tmd__SetRelayOutputSettingsResponse;

class _tmd__GetDigitalInputs;

class _tmd__GetDigitalInputsResponse;

class _tmd__GetDigitalInputConfigurationOptions;

class _tmd__GetDigitalInputConfigurationOptionsResponse;

class _tmd__SetDigitalInputConfigurations;

class _tmd__SetDigitalInputConfigurationsResponse;

class _tmd__GetSerialPorts;

class _tmd__GetSerialPortsResponse;

class _tmd__GetSerialPortConfiguration;

class _tmd__GetSerialPortConfigurationResponse;

class _tmd__SetSerialPortConfiguration;

class _tmd__SetSerialPortConfigurationResponse;

class _tmd__GetSerialPortConfigurationOptions;

class _tmd__GetSerialPortConfigurationOptionsResponse;

class _tmd__SendReceiveSerialCommand;

class _tmd__SendReceiveSerialCommandResponse;

class tev__Capabilities;

class tev__SubscriptionPolicy;

class _tev__GetServiceCapabilities;

class _tev__GetServiceCapabilitiesResponse;

class _tev__CreatePullPointSubscription;

class _tev__CreatePullPointSubscriptionResponse;

class _tev__PullMessages;

class _tev__PullMessagesResponse;

class _tev__PullMessagesFaultResponse;

class _tev__Seek;

class _tev__SeekResponse;

class _tev__SetSynchronizationPoint;

class _tev__SetSynchronizationPointResponse;

class _tev__GetEventProperties;

class _tev__GetEventPropertiesResponse;

class trv__Capabilities;

class _trv__GetServiceCapabilities;

class _trv__GetServiceCapabilitiesResponse;

class _trv__GetReceivers;

class _trv__GetReceiversResponse;

class _trv__GetReceiver;

class _trv__GetReceiverResponse;

class _trv__CreateReceiver;

class _trv__CreateReceiverResponse;

class _trv__DeleteReceiver;

class _trv__DeleteReceiverResponse;

class _trv__ConfigureReceiver;

class _trv__ConfigureReceiverResponse;

class _trv__SetReceiverMode;

class _trv__SetReceiverModeResponse;

class _trv__GetReceiverState;

class _trv__GetReceiverStateResponse;

class wstop__Documentation;

class wstop__ExtensibleDocumented;

class wstop__QueryExpressionType;

class wstop__TopicNamespaceType;

class wstop__TopicType;

class wstop__TopicSetType;

class xop__Include;

class trc__Capabilities;

class trc__RecordingOptions;

class trc__JobOptions;

class trc__TrackOptions;

class _trc__GetServiceCapabilities;

class _trc__GetServiceCapabilitiesResponse;

class _trc__CreateRecording;

class _trc__CreateRecordingResponse;

class _trc__DeleteRecording;

class _trc__DeleteRecordingResponse;

class _trc__GetRecordings;

class _trc__GetRecordingsResponse;

class _trc__SetRecordingConfiguration;

class _trc__SetRecordingConfigurationResponse;

class _trc__GetRecordingConfiguration;

class _trc__GetRecordingConfigurationResponse;

class _trc__CreateTrack;

class _trc__CreateTrackResponse;

class _trc__DeleteTrack;

class _trc__DeleteTrackResponse;

class _trc__GetTrackConfiguration;

class _trc__GetTrackConfigurationResponse;

class _trc__SetTrackConfiguration;

class _trc__SetTrackConfigurationResponse;

class _trc__CreateRecordingJob;

class _trc__CreateRecordingJobResponse;

class _trc__DeleteRecordingJob;

class _trc__DeleteRecordingJobResponse;

class _trc__GetRecordingJobs;

class _trc__GetRecordingJobsResponse;

class _trc__SetRecordingJobConfiguration;

class _trc__SetRecordingJobConfigurationResponse;

class _trc__GetRecordingJobConfiguration;

class _trc__GetRecordingJobConfigurationResponse;

class _trc__SetRecordingJobMode;

class _trc__SetRecordingJobModeResponse;

class _trc__GetRecordingJobState;

class _trc__GetRecordingJobStateResponse;

class _trc__GetRecordingOptions;

class _trc__GetRecordingOptionsResponse;

class _trc__ExportRecordedData;

class _trc__ExportRecordedDataResponse;

class _trc__StopExportRecordedData;

class _trc__StopExportRecordedDataResponse;

class _trc__GetExportRecordedDataState;

class _trc__GetExportRecordedDataStateResponse;

class tt__IntRange;

class tt__Vector2D;

class tt__Vector1D;

class tt__PTZVector;

class tt__PTZStatus;

class tt__PTZMoveStatus;

class tt__Vector;

class tt__Rectangle;

class tt__Polygon;

class tt__Color;

class tt__ColorCovariance;

class tt__ColorDescriptor;

class tt__Transformation;

class tt__TransformationExtension;

class tt__GeoLocation;

class tt__GeoOrientation;

class tt__LocalLocation;

class tt__LocalOrientation;

class tt__LocationEntity;

class tt__DeviceEntity;

class tt__IntRectangle;

class tt__IntRectangleRange;

class tt__FloatRange;

class tt__DurationRange;

class tt__IntItems;

class tt__FloatItems;

class tt__AnyHolder;

class tt__VideoSource;

class tt__VideoSourceExtension;

class tt__VideoSourceExtension2;

class tt__AudioSource;

class tt__Profile;

class tt__ProfileExtension;

class tt__ProfileExtension2;

class tt__ConfigurationEntity;

class tt__VideoSourceConfiguration;

class tt__VideoSourceConfigurationExtension;

class tt__VideoSourceConfigurationExtension2;

class tt__Rotate;

class tt__RotateExtension;

class tt__LensProjection;

class tt__LensOffset;

class tt__LensDescription;

class tt__VideoSourceConfigurationOptions;

class tt__VideoSourceConfigurationOptionsExtension;

class tt__VideoSourceConfigurationOptionsExtension2;

class tt__RotateOptions;

class tt__RotateOptionsExtension;

class tt__SceneOrientation;

class tt__VideoEncoderConfiguration;

class tt__VideoResolution;

class tt__VideoRateControl;

class tt__Mpeg4Configuration;

class tt__H264Configuration;

class tt__VideoEncoderConfigurationOptions;

class tt__VideoEncoderOptionsExtension;

class tt__VideoEncoderOptionsExtension2;

class tt__JpegOptions;

class tt__JpegOptions2;

class tt__Mpeg4Options;

class tt__Mpeg4Options2;

class tt__H264Options;

class tt__H264Options2;

class tt__VideoEncoder2Configuration;

class tt__VideoResolution2;

class tt__VideoRateControl2;

class tt__VideoEncoder2ConfigurationOptions;

class tt__AudioSourceConfiguration;

class tt__AudioSourceConfigurationOptions;

class tt__AudioSourceOptionsExtension;

class tt__AudioEncoderConfiguration;

class tt__AudioEncoderConfigurationOptions;

class tt__AudioEncoderConfigurationOption;

class tt__AudioEncoder2Configuration;

class tt__AudioEncoder2ConfigurationOptions;

class tt__VideoAnalyticsConfiguration;

class tt__MetadataConfiguration;

class tt__MetadataConfigurationExtension;

class tt__PTZFilter;

class tt__EventSubscription;

class tt__MetadataConfigurationOptions;

class tt__MetadataConfigurationOptionsExtension;

class tt__MetadataConfigurationOptionsExtension2;

class tt__PTZStatusFilterOptions;

class tt__PTZStatusFilterOptionsExtension;

class tt__VideoOutput;

class tt__VideoOutputExtension;

class tt__VideoOutputConfiguration;

class tt__VideoOutputConfigurationOptions;

class tt__VideoDecoderConfigurationOptions;

class tt__H264DecOptions;

class tt__JpegDecOptions;

class tt__Mpeg4DecOptions;

class tt__VideoDecoderConfigurationOptionsExtension;

class tt__AudioOutput;

class tt__AudioOutputConfiguration;

class tt__AudioOutputConfigurationOptions;

class tt__AudioDecoderConfiguration;

class tt__AudioDecoderConfigurationOptions;

class tt__G711DecOptions;

class tt__AACDecOptions;

class tt__G726DecOptions;

class tt__AudioDecoderConfigurationOptionsExtension;

class tt__MulticastConfiguration;

class tt__StreamSetup;

class tt__Transport;

class tt__MediaUri;

class tt__Scope;

class tt__NetworkInterface;

class tt__NetworkInterfaceExtension;

class tt__Dot3Configuration;

class tt__NetworkInterfaceExtension2;

class tt__NetworkInterfaceLink;

class tt__NetworkInterfaceConnectionSetting;

class tt__NetworkInterfaceInfo;

class tt__IPv6NetworkInterface;

class tt__IPv4NetworkInterface;

class tt__IPv4Configuration;

class tt__IPv6Configuration;

class tt__IPv6ConfigurationExtension;

class tt__NetworkProtocol;

class tt__NetworkProtocolExtension;

class tt__NetworkHost;

class tt__NetworkHostExtension;

class tt__IPAddress;

class tt__PrefixedIPv4Address;

class tt__PrefixedIPv6Address;

class tt__HostnameInformation;

class tt__HostnameInformationExtension;

class tt__DNSInformation;

class tt__DNSInformationExtension;

class tt__NTPInformation;

class tt__NTPInformationExtension;

class tt__DynamicDNSInformation;

class tt__DynamicDNSInformationExtension;

class tt__NetworkInterfaceSetConfiguration;

class tt__NetworkInterfaceSetConfigurationExtension;

class tt__IPv6NetworkInterfaceSetConfiguration;

class tt__IPv4NetworkInterfaceSetConfiguration;

class tt__NetworkGateway;

class tt__NetworkZeroConfiguration;

class tt__NetworkZeroConfigurationExtension;

class tt__NetworkZeroConfigurationExtension2;

class tt__IPAddressFilter;

class tt__IPAddressFilterExtension;

class tt__Dot11Configuration;

class tt__Dot11SecurityConfiguration;

class tt__Dot11SecurityConfigurationExtension;

class tt__Dot11PSKSet;

class tt__Dot11PSKSetExtension;

class tt__NetworkInterfaceSetConfigurationExtension2;

class tt__Dot11Capabilities;

class tt__Dot11Status;

class tt__Dot11AvailableNetworks;

class tt__Dot11AvailableNetworksExtension;

class tt__Capabilities;

class tt__CapabilitiesExtension;

class tt__CapabilitiesExtension2;

class tt__AnalyticsCapabilities;

class tt__DeviceCapabilities;

class tt__DeviceCapabilitiesExtension;

class tt__EventCapabilities;

class tt__IOCapabilities;

class tt__IOCapabilitiesExtension;

class tt__IOCapabilitiesExtension2;

class tt__MediaCapabilities;

class tt__MediaCapabilitiesExtension;

class tt__RealTimeStreamingCapabilities;

class tt__RealTimeStreamingCapabilitiesExtension;

class tt__ProfileCapabilities;

class tt__NetworkCapabilities;

class tt__NetworkCapabilitiesExtension;

class tt__NetworkCapabilitiesExtension2;

class tt__SecurityCapabilities;

class tt__SecurityCapabilitiesExtension;

class tt__SecurityCapabilitiesExtension2;

class tt__SystemCapabilities;

class tt__SystemCapabilitiesExtension;

class tt__SystemCapabilitiesExtension2;

class tt__OnvifVersion;

class tt__ImagingCapabilities;

class tt__PTZCapabilities;

class tt__DeviceIOCapabilities;

class tt__DisplayCapabilities;

class tt__RecordingCapabilities;

class tt__SearchCapabilities;

class tt__ReplayCapabilities;

class tt__ReceiverCapabilities;

class tt__AnalyticsDeviceCapabilities;

class tt__AnalyticsDeviceExtension;

class tt__SystemLog;

class tt__SupportInformation;

class tt__BinaryData;

class tt__AttachmentData;

class tt__BackupFile;

class tt__SystemLogUriList;

class tt__SystemLogUri;

class tt__SystemDateTime;

class tt__SystemDateTimeExtension;

class tt__DateTime;

class tt__Date;

class tt__Time;

class tt__TimeZone;

class tt__RemoteUser;

class tt__User;

class tt__UserExtension;

class tt__CertificateGenerationParameters;

class tt__CertificateGenerationParametersExtension;

class tt__Certificate;

class tt__CertificateStatus;

class tt__CertificateWithPrivateKey;

class tt__CertificateInformation;

class tt__CertificateUsage;

class tt__CertificateInformationExtension;

class tt__Dot1XConfiguration;

class tt__Dot1XConfigurationExtension;

class tt__EAPMethodConfiguration;

class tt__EapMethodExtension;

class tt__TLSConfiguration;

class tt__GenericEapPwdConfigurationExtension;

class tt__RelayOutputSettings;

class tt__RelayOutput;

class tt__DigitalInput;

class tt__PTZNode;

class tt__PTZNodeExtension;

class tt__PTZNodeExtension2;

class tt__PTZPresetTourSupported;

class tt__PTZPresetTourSupportedExtension;

class tt__PTZConfiguration;

class tt__PTZConfigurationExtension;

class tt__PTZConfigurationExtension2;

class tt__PTControlDirection;

class tt__PTControlDirectionExtension;

class tt__EFlip;

class tt__Reverse;

class tt__PTZConfigurationOptions;

class tt__PTZConfigurationOptions2;

class tt__PTControlDirectionOptions;

class tt__PTControlDirectionOptionsExtension;

class tt__EFlipOptions;

class tt__EFlipOptionsExtension;

class tt__ReverseOptions;

class tt__ReverseOptionsExtension;

class tt__PanTiltLimits;

class tt__ZoomLimits;

class tt__PTZSpaces;

class tt__PTZSpacesExtension;

class tt__Space2DDescription;

class tt__Space1DDescription;

class tt__PTZSpeed;

class tt__PTZPreset;

class tt__PresetTour;

class tt__PTZPresetTourExtension;

class tt__PTZPresetTourSpot;

class tt__PTZPresetTourSpotExtension;

class tt__PTZPresetTourPresetDetail;

class tt__PTZPresetTourTypeExtension;

class tt__PTZPresetTourStatus;

class tt__PTZPresetTourStatusExtension;

class tt__PTZPresetTourStartingCondition;

class tt__PTZPresetTourStartingConditionExtension;

class tt__PTZPresetTourOptions;

class tt__PTZPresetTourSpotOptions;

class tt__PTZPresetTourPresetDetailOptions;

class tt__PTZPresetTourPresetDetailOptionsExtension;

class tt__PTZPresetTourStartingConditionOptions;

class tt__PTZPresetTourStartingConditionOptionsExtension;

class tt__ImagingStatus;

class tt__FocusStatus;

class tt__FocusConfiguration;

class tt__ImagingSettings;

class tt__ImagingSettingsExtension;

class tt__Exposure;

class tt__WideDynamicRange;

class tt__BacklightCompensation;

class tt__ImagingOptions;

class tt__WideDynamicRangeOptions;

class tt__BacklightCompensationOptions;

class tt__FocusOptions;

class tt__ExposureOptions;

class tt__WhiteBalanceOptions;

class tt__FocusMove;

class tt__AbsoluteFocus;

class tt__RelativeFocus;

class tt__ContinuousFocus;

class tt__MoveOptions;

class tt__AbsoluteFocusOptions;

class tt__RelativeFocusOptions;

class tt__ContinuousFocusOptions;

class tt__WhiteBalance;

class tt__ImagingStatus20;

class tt__ImagingStatus20Extension;

class tt__FocusStatus20;

class tt__FocusStatus20Extension;

class tt__ImagingSettings20;

class tt__ImagingSettingsExtension20;

class tt__ImagingSettingsExtension202;

class tt__ImagingSettingsExtension203;

class tt__ImagingSettingsExtension204;

class tt__ImageStabilization;

class tt__ImageStabilizationExtension;

class tt__IrCutFilterAutoAdjustment;

class tt__IrCutFilterAutoAdjustmentExtension;

class tt__WideDynamicRange20;

class tt__BacklightCompensation20;

class tt__Exposure20;

class tt__ToneCompensation;

class tt__ToneCompensationExtension;

class tt__Defogging;

class tt__DefoggingExtension;

class tt__NoiseReduction;

class tt__ImagingOptions20;

class tt__ImagingOptions20Extension;

class tt__ImagingOptions20Extension2;

class tt__ImagingOptions20Extension3;

class tt__ImagingOptions20Extension4;

class tt__ImageStabilizationOptions;

class tt__ImageStabilizationOptionsExtension;

class tt__IrCutFilterAutoAdjustmentOptions;

class tt__IrCutFilterAutoAdjustmentOptionsExtension;

class tt__WideDynamicRangeOptions20;

class tt__BacklightCompensationOptions20;

class tt__ExposureOptions20;

class tt__MoveOptions20;

class tt__RelativeFocusOptions20;

class tt__WhiteBalance20;

class tt__WhiteBalance20Extension;

class tt__FocusConfiguration20;

class tt__FocusConfiguration20Extension;

class tt__WhiteBalanceOptions20;

class tt__WhiteBalanceOptions20Extension;

class tt__FocusOptions20;

class tt__FocusOptions20Extension;

class tt__ToneCompensationOptions;

class tt__DefoggingOptions;

class tt__NoiseReductionOptions;

class tt__MessageExtension;

class tt__ItemList;

class tt__ItemListExtension;

class tt__MessageDescription;

class tt__MessageDescriptionExtension;

class tt__ItemListDescription;

class tt__ItemListDescriptionExtension;

class tt__Polyline;

class tt__AnalyticsEngineConfiguration;

class tt__AnalyticsEngineConfigurationExtension;

class tt__RuleEngineConfiguration;

class tt__RuleEngineConfigurationExtension;

class tt__Config;

class tt__ConfigDescription;

class tt__ConfigDescriptionExtension;

class tt__SupportedRules;

class tt__SupportedRulesExtension;

class tt__SupportedAnalyticsModules;

class tt__SupportedAnalyticsModulesExtension;

class tt__PolylineArray;

class tt__PolylineArrayExtension;

class tt__PolylineArrayConfiguration;

class tt__MotionExpression;

class tt__MotionExpressionConfiguration;

class tt__CellLayout;

class tt__PaneConfiguration;

class tt__PaneLayout;

class tt__Layout;

class tt__LayoutExtension;

class tt__CodingCapabilities;

class tt__LayoutOptions;

class tt__LayoutOptionsExtension;

class tt__PaneLayoutOptions;

class tt__PaneOptionExtension;

class tt__Receiver;

class tt__ReceiverConfiguration;

class tt__ReceiverStateInformation;

class tt__SourceReference;

class tt__DateTimeRange;

class tt__RecordingSummary;

class tt__SearchScope;

class tt__SearchScopeExtension;

class tt__EventFilter;

class tt__PTZPositionFilter;

class tt__MetadataFilter;

class tt__FindRecordingResultList;

class tt__FindEventResultList;

class tt__FindEventResult;

class tt__FindPTZPositionResultList;

class tt__FindPTZPositionResult;

class tt__FindMetadataResultList;

class tt__FindMetadataResult;

class tt__RecordingInformation;

class tt__RecordingSourceInformation;

class tt__TrackInformation;

class tt__MediaAttributes;

class tt__TrackAttributes;

class tt__TrackAttributesExtension;

class tt__VideoAttributes;

class tt__AudioAttributes;

class tt__MetadataAttributes;

class tt__RecordingConfiguration;

class tt__TrackConfiguration;

class tt__GetRecordingsResponseItem;

class tt__GetTracksResponseList;

class tt__GetTracksResponseItem;

class tt__RecordingJobConfiguration;

class tt__RecordingJobConfigurationExtension;

class tt__RecordingJobSource;

class tt__RecordingJobSourceExtension;

class tt__RecordingJobTrack;

class tt__RecordingJobStateInformation;

class tt__RecordingJobStateInformationExtension;

class tt__RecordingJobStateSource;

class tt__RecordingJobStateTracks;

class tt__RecordingJobStateTrack;

class tt__GetRecordingJobsResponseItem;

class tt__ReplayConfiguration;

class tt__AnalyticsEngine;

class tt__AnalyticsDeviceEngineConfiguration;

class tt__AnalyticsDeviceEngineConfigurationExtension;

class tt__EngineConfiguration;

class tt__AnalyticsEngineInputInfo;

class tt__AnalyticsEngineInputInfoExtension;

class tt__AnalyticsEngineInput;

class tt__SourceIdentification;

class tt__SourceIdentificationExtension;

class tt__MetadataInput;

class tt__MetadataInputExtension;

class tt__AnalyticsEngineControl;

class tt__AnalyticsStateInformation;

class tt__AnalyticsState;

class tt__ActionEngineEventPayload;

class tt__ActionEngineEventPayloadExtension;

class tt__AudioClassCandidate;

class tt__AudioClassDescriptor;

class tt__AudioClassDescriptorExtension;

class tt__ActiveConnection;

class tt__ProfileStatus;

class tt__ProfileStatusExtension;

class tt__OSDReference;

class tt__OSDPosConfiguration;

class tt__OSDPosConfigurationExtension;

class tt__OSDColor;

class tt__OSDTextConfiguration;

class tt__OSDTextConfigurationExtension;

class tt__OSDImgConfiguration;

class tt__OSDImgConfigurationExtension;

class tt__ColorspaceRange;

class tt__ColorOptions;

class tt__OSDColorOptions;

class tt__OSDColorOptionsExtension;

class tt__OSDTextOptions;

class tt__OSDTextOptionsExtension;

class tt__OSDImgOptions;

class tt__OSDImgOptionsExtension;

class tt__OSDConfiguration;

class tt__OSDConfigurationExtension;

class tt__MaximumNumberOfOSDs;

class tt__OSDConfigurationOptions;

class tt__OSDConfigurationOptionsExtension;

class tt__FileProgress;

class tt__ArrayOfFileProgress;

class tt__ArrayOfFileProgressExtension;

class tt__StorageReferencePath;

class tt__StorageReferencePathExtension;

class tt__PolygonOptions;

class _tt__StringItems;

class _tt__Message;

class trt__Capabilities;

class trt__ProfileCapabilities;

class trt__StreamingCapabilities;

class trt__VideoSourceMode;

class trt__VideoSourceModeExtension;

class _trt__GetServiceCapabilities;

class _trt__GetServiceCapabilitiesResponse;

class _trt__GetVideoSources;

class _trt__GetVideoSourcesResponse;

class _trt__GetAudioSources;

class _trt__GetAudioSourcesResponse;

class _trt__GetAudioOutputs;

class _trt__GetAudioOutputsResponse;

class _trt__CreateProfile;

class _trt__CreateProfileResponse;

class _trt__GetProfile;

class _trt__GetProfileResponse;

class _trt__GetProfiles;

class _trt__GetProfilesResponse;

class _trt__AddVideoEncoderConfiguration;

class _trt__AddVideoEncoderConfigurationResponse;

class _trt__RemoveVideoEncoderConfiguration;

class _trt__RemoveVideoEncoderConfigurationResponse;

class _trt__AddVideoSourceConfiguration;

class _trt__AddVideoSourceConfigurationResponse;

class _trt__RemoveVideoSourceConfiguration;

class _trt__RemoveVideoSourceConfigurationResponse;

class _trt__AddAudioEncoderConfiguration;

class _trt__AddAudioEncoderConfigurationResponse;

class _trt__RemoveAudioEncoderConfiguration;

class _trt__RemoveAudioEncoderConfigurationResponse;

class _trt__AddAudioSourceConfiguration;

class _trt__AddAudioSourceConfigurationResponse;

class _trt__RemoveAudioSourceConfiguration;

class _trt__RemoveAudioSourceConfigurationResponse;

class _trt__AddPTZConfiguration;

class _trt__AddPTZConfigurationResponse;

class _trt__RemovePTZConfiguration;

class _trt__RemovePTZConfigurationResponse;

class _trt__AddVideoAnalyticsConfiguration;

class _trt__AddVideoAnalyticsConfigurationResponse;

class _trt__RemoveVideoAnalyticsConfiguration;

class _trt__RemoveVideoAnalyticsConfigurationResponse;

class _trt__AddMetadataConfiguration;

class _trt__AddMetadataConfigurationResponse;

class _trt__RemoveMetadataConfiguration;

class _trt__RemoveMetadataConfigurationResponse;

class _trt__AddAudioOutputConfiguration;

class _trt__AddAudioOutputConfigurationResponse;

class _trt__RemoveAudioOutputConfiguration;

class _trt__RemoveAudioOutputConfigurationResponse;

class _trt__AddAudioDecoderConfiguration;

class _trt__AddAudioDecoderConfigurationResponse;

class _trt__RemoveAudioDecoderConfiguration;

class _trt__RemoveAudioDecoderConfigurationResponse;

class _trt__DeleteProfile;

class _trt__DeleteProfileResponse;

class _trt__GetVideoEncoderConfigurations;

class _trt__GetVideoEncoderConfigurationsResponse;

class _trt__GetVideoSourceConfigurations;

class _trt__GetVideoSourceConfigurationsResponse;

class _trt__GetAudioEncoderConfigurations;

class _trt__GetAudioEncoderConfigurationsResponse;

class _trt__GetAudioSourceConfigurations;

class _trt__GetAudioSourceConfigurationsResponse;

class _trt__GetVideoAnalyticsConfigurations;

class _trt__GetVideoAnalyticsConfigurationsResponse;

class _trt__GetMetadataConfigurations;

class _trt__GetMetadataConfigurationsResponse;

class _trt__GetAudioOutputConfigurations;

class _trt__GetAudioOutputConfigurationsResponse;

class _trt__GetAudioDecoderConfigurations;

class _trt__GetAudioDecoderConfigurationsResponse;

class _trt__GetVideoSourceConfiguration;

class _trt__GetVideoSourceConfigurationResponse;

class _trt__GetVideoEncoderConfiguration;

class _trt__GetVideoEncoderConfigurationResponse;

class _trt__GetAudioSourceConfiguration;

class _trt__GetAudioSourceConfigurationResponse;

class _trt__GetAudioEncoderConfiguration;

class _trt__GetAudioEncoderConfigurationResponse;

class _trt__GetVideoAnalyticsConfiguration;

class _trt__GetVideoAnalyticsConfigurationResponse;

class _trt__GetMetadataConfiguration;

class _trt__GetMetadataConfigurationResponse;

class _trt__GetAudioOutputConfiguration;

class _trt__GetAudioOutputConfigurationResponse;

class _trt__GetAudioDecoderConfiguration;

class _trt__GetAudioDecoderConfigurationResponse;

class _trt__GetCompatibleVideoEncoderConfigurations;

class _trt__GetCompatibleVideoEncoderConfigurationsResponse;

class _trt__GetCompatibleVideoSourceConfigurations;

class _trt__GetCompatibleVideoSourceConfigurationsResponse;

class _trt__GetCompatibleAudioEncoderConfigurations;

class _trt__GetCompatibleAudioEncoderConfigurationsResponse;

class _trt__GetCompatibleAudioSourceConfigurations;

class _trt__GetCompatibleAudioSourceConfigurationsResponse;

class _trt__GetCompatibleVideoAnalyticsConfigurations;

class _trt__GetCompatibleVideoAnalyticsConfigurationsResponse;

class _trt__GetCompatibleMetadataConfigurations;

class _trt__GetCompatibleMetadataConfigurationsResponse;

class _trt__GetCompatibleAudioOutputConfigurations;

class _trt__GetCompatibleAudioOutputConfigurationsResponse;

class _trt__GetCompatibleAudioDecoderConfigurations;

class _trt__GetCompatibleAudioDecoderConfigurationsResponse;

class _trt__SetVideoEncoderConfiguration;

class _trt__SetVideoEncoderConfigurationResponse;

class _trt__SetVideoSourceConfiguration;

class _trt__SetVideoSourceConfigurationResponse;

class _trt__SetAudioEncoderConfiguration;

class _trt__SetAudioEncoderConfigurationResponse;

class _trt__SetAudioSourceConfiguration;

class _trt__SetAudioSourceConfigurationResponse;

class _trt__SetVideoAnalyticsConfiguration;

class _trt__SetVideoAnalyticsConfigurationResponse;

class _trt__SetMetadataConfiguration;

class _trt__SetMetadataConfigurationResponse;

class _trt__SetAudioOutputConfiguration;

class _trt__SetAudioOutputConfigurationResponse;

class _trt__SetAudioDecoderConfiguration;

class _trt__SetAudioDecoderConfigurationResponse;

class _trt__GetVideoSourceConfigurationOptions;

class _trt__GetVideoSourceConfigurationOptionsResponse;

class _trt__GetVideoEncoderConfigurationOptions;

class _trt__GetVideoEncoderConfigurationOptionsResponse;

class _trt__GetAudioSourceConfigurationOptions;

class _trt__GetAudioSourceConfigurationOptionsResponse;

class _trt__GetAudioEncoderConfigurationOptions;

class _trt__GetAudioEncoderConfigurationOptionsResponse;

class _trt__GetMetadataConfigurationOptions;

class _trt__GetMetadataConfigurationOptionsResponse;

class _trt__GetAudioOutputConfigurationOptions;

class _trt__GetAudioOutputConfigurationOptionsResponse;

class _trt__GetAudioDecoderConfigurationOptions;

class _trt__GetAudioDecoderConfigurationOptionsResponse;

class _trt__GetGuaranteedNumberOfVideoEncoderInstances;

class _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse;

class _trt__GetStreamUri;

class _trt__GetStreamUriResponse;

class _trt__StartMulticastStreaming;

class _trt__StartMulticastStreamingResponse;

class _trt__StopMulticastStreaming;

class _trt__StopMulticastStreamingResponse;

class _trt__SetSynchronizationPoint;

class _trt__SetSynchronizationPointResponse;

class _trt__GetSnapshotUri;

class _trt__GetSnapshotUriResponse;

class _trt__GetVideoSourceModes;

class _trt__GetVideoSourceModesResponse;

class _trt__SetVideoSourceMode;

class _trt__SetVideoSourceModeResponse;

class _trt__GetOSDs;

class _trt__GetOSDsResponse;

class _trt__GetOSD;

class _trt__GetOSDResponse;

class _trt__SetOSD;

class _trt__SetOSDResponse;

class _trt__GetOSDOptions;

class _trt__GetOSDOptionsResponse;

class _trt__CreateOSD;

class _trt__CreateOSDResponse;

class _trt__DeleteOSD;

class _trt__DeleteOSDResponse;

class tse__Capabilities;

class _tse__GetServiceCapabilities;

class _tse__GetServiceCapabilitiesResponse;

class _tse__GetRecordingSummary;

class _tse__GetRecordingSummaryResponse;

class _tse__GetRecordingInformation;

class _tse__GetRecordingInformationResponse;

class _tse__GetMediaAttributes;

class _tse__GetMediaAttributesResponse;

class _tse__FindRecordings;

class _tse__FindRecordingsResponse;

class _tse__GetRecordingSearchResults;

class _tse__GetRecordingSearchResultsResponse;

class _tse__FindEvents;

class _tse__FindEventsResponse;

class _tse__GetEventSearchResults;

class _tse__GetEventSearchResultsResponse;

class _tse__FindPTZPosition;

class _tse__FindPTZPositionResponse;

class _tse__GetPTZPositionSearchResults;

class _tse__GetPTZPositionSearchResultsResponse;

class _tse__FindMetadata;

class _tse__FindMetadataResponse;

class _tse__GetMetadataSearchResults;

class _tse__GetMetadataSearchResultsResponse;

class _tse__GetSearchState;

class _tse__GetSearchStateResponse;

class _tse__EndSearch;

class _tse__EndSearchResponse;

class timg__Capabilities;

class timg__ImagingPreset;

class _timg__GetServiceCapabilities;

class _timg__GetServiceCapabilitiesResponse;

class _timg__GetImagingSettings;

class _timg__GetImagingSettingsResponse;

class _timg__SetImagingSettings;

class _timg__SetImagingSettingsResponse;

class _timg__GetOptions;

class _timg__GetOptionsResponse;

class _timg__Move;

class _timg__MoveResponse;

class _timg__GetMoveOptions;

class _timg__GetMoveOptionsResponse;

class _timg__Stop;

class _timg__StopResponse;

class _timg__GetStatus;

class _timg__GetStatusResponse;

class _timg__GetPresets;

class _timg__GetPresetsResponse;

class _timg__GetCurrentPreset;

class _timg__GetCurrentPresetResponse;

class _timg__SetCurrentPreset;

class _timg__SetCurrentPresetResponse;

class wsrfbf__BaseFaultType;


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsn/b-2                                       *
 *                                                                            *
\******************************************************************************/

/// @brief Union of values from member types "xsd:dateTime xsd:duration".
typedef std::string wsnt__AbsoluteOrRelativeTimeType;


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsrf/r-2                                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/display/wsdl                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *                                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsrf/rw-2                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver20/ptz/wsdl                                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/replay/wsdl                                   *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/device/wsdl                                   *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver10/device/wsdl":EAPMethodTypes is a simpleType containing a whitespace separated list of values of type xs:int.
///
typedef std::string tds__EAPMethodTypes;


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/deviceIO/wsdl                                 *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":DelayTimes is a simpleType containing a whitespace separated list of values of type xs:float.
///
typedef std::string tmd__DelayTimes;


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/events/wsdl                                   *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/receiver/wsdl                                 *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsn/t-1                                       *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.w3.org/2004/08/xop/include                                    *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/recording/wsdl                                *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver10/recording/wsdl":EncodingTypes is a simpleType containing a whitespace separated list of values of type xs:string.
///
typedef std::string trc__EncodingTypes;


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/schema                                        *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver10/schema":IntAttrList is a simpleType containing a whitespace separated list of values of type xs:int.
///
typedef std::string tt__IntAttrList;

/// @brief "http://www.onvif.org/ver10/schema":FloatAttrList is a simpleType containing a whitespace separated list of values of type xs:float.
///
typedef std::string tt__FloatAttrList;

/// @brief "http://www.onvif.org/ver10/schema":StringAttrList is a simpleType containing a whitespace separated list of values of type xs:string.
///
typedef std::string tt__StringAttrList;

/// @brief "http://www.onvif.org/ver10/schema":StringList is a simpleType containing a whitespace separated list of values of type xs:string.
///
typedef std::string tt__StringList;

/// @brief "http://www.onvif.org/ver10/schema":ReferenceTokenList is a simpleType containing a whitespace separated list of values of type "http://www.onvif.org/ver10/schema":ReferenceToken.
///
typedef std::string tt__ReferenceTokenList;


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/media/wsdl                                    *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver10/media/wsdl":EncodingTypes is a simpleType containing a whitespace separated list of values of type xs:string.
///
/// <PRE><BLOCKQUOTE>
///   Indication which encodings are supported for this video source. The list may contain one or more enumeration values of tt:VideoEncoding.
/// </BLOCKQUOTE></PRE>
///
typedef std::string trt__EncodingTypes;


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/search/wsdl                                   *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver20/imaging/wsdl                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsrf/bf-2                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsrf/r-2                                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/display/wsdl                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *                                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsrf/rw-2                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver20/ptz/wsdl                                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/replay/wsdl                                   *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/device/wsdl                                   *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver10/device/wsdl":AutoGeoModes is a simpleType restriction of type xs:string.
///
enum tds__AutoGeoModes
{
/// <PRE><BLOCKQUOTE>
///   Automatic adjustment of the device location.
/// </BLOCKQUOTE></PRE>
///
	tds__AutoGeoModes__Location,	///< xs:string value="Location"
/// <PRE><BLOCKQUOTE>
///   Automatic adjustment of the device orientation relative to the compass also called yaw.
/// </BLOCKQUOTE></PRE>
///
	tds__AutoGeoModes__Heading,	///< xs:string value="Heading"
/// <PRE><BLOCKQUOTE>
///   Automatic adjustment of the deviation from the horizon also called pitch and roll.
/// </BLOCKQUOTE></PRE>
///
	tds__AutoGeoModes__Leveling,	///< xs:string value="Leveling"
};

/// @brief Class wrapper for type enum tds__AutoGeoModes derived from xsd__anyType.
///
class tds__AutoGeoModes_ : public xsd__anyType
{ public:
    enum tds__AutoGeoModes               __item;                       
};

/// @brief "http://www.onvif.org/ver10/device/wsdl":StorageType is a simpleType restriction of type xs:string.
///
enum tds__StorageType
{
/// <PRE><BLOCKQUOTE>
///   NFS protocol
/// </BLOCKQUOTE></PRE>
///
	tds__StorageType__NFS,	///< xs:string value="NFS"
/// <PRE><BLOCKQUOTE>
///   CIFS protocol
/// </BLOCKQUOTE></PRE>
///
	tds__StorageType__CIFS,	///< xs:string value="CIFS"
/// <PRE><BLOCKQUOTE>
///   CDMI protocol
/// </BLOCKQUOTE></PRE>
///
	tds__StorageType__CDMI,	///< xs:string value="CDMI"
/// <PRE><BLOCKQUOTE>
///   FTP protocol
/// </BLOCKQUOTE></PRE>
///
	tds__StorageType__FTP,	///< xs:string value="FTP"
};

/// @brief Class wrapper for type enum tds__StorageType derived from xsd__anyType.
///
class tds__StorageType_ : public xsd__anyType
{ public:
    enum tds__StorageType                __item;                       
};


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/deviceIO/wsdl                                 *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":SerialPortType is a simpleType restriction of type xs:string.
///
/// <PRE><BLOCKQUOTE>
///   The type of serial port.Generic can be signaled as a vendor specific serial port type.
/// </BLOCKQUOTE></PRE>
///
enum tmd__SerialPortType
{
	tmd__SerialPortType__RS232,	///< xs:string value="RS232"
	tmd__SerialPortType__RS422HalfDuplex,	///< xs:string value="RS422HalfDuplex"
	tmd__SerialPortType__RS422FullDuplex,	///< xs:string value="RS422FullDuplex"
	tmd__SerialPortType__RS485HalfDuplex,	///< xs:string value="RS485HalfDuplex"
	tmd__SerialPortType__RS485FullDuplex,	///< xs:string value="RS485FullDuplex"
	tmd__SerialPortType__Generic,	///< xs:string value="Generic"
};

/// @brief Class wrapper for type enum tmd__SerialPortType derived from xsd__anyType.
///
class tmd__SerialPortType_ : public xsd__anyType
{ public:
    enum tmd__SerialPortType             __item;                       
};

/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":ParityBit is a simpleType restriction of type xs:string.
///
/// <PRE><BLOCKQUOTE>
///   The parity for the data error detection.
/// </BLOCKQUOTE></PRE>
///
enum tmd__ParityBit
{
	tmd__ParityBit__None,	///< xs:string value="None"
	tmd__ParityBit__Even,	///< xs:string value="Even"
	tmd__ParityBit__Odd,	///< xs:string value="Odd"
	tmd__ParityBit__Mark,	///< xs:string value="Mark"
	tmd__ParityBit__Space,	///< xs:string value="Space"
	tmd__ParityBit__Extended,	///< xs:string value="Extended"
};

/// @brief Class wrapper for type enum tmd__ParityBit derived from xsd__anyType.
///
class tmd__ParityBit_ : public xsd__anyType
{ public:
    enum tmd__ParityBit                  __item;                       
};


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/events/wsdl                                   *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/receiver/wsdl                                 *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsn/t-1                                       *
 *                                                                            *
\******************************************************************************/

/// @brief "http://docs.oasis-open.org/wsn/t-1":FullTopicExpression is a simpleType restriction of type xs:token.
///
/// <PRE><BLOCKQUOTE>
///   TopicPathExpression ::= TopicPath ( '|' TopicPath )* TopicPath ::= RootTopic ChildTopicExpression* RootTopic ::= NamespacePrefix? ('//')? (NCName | '*') NamespacePrefix ::= NCName ':' ChildTopicExpression ::= '/' '/'? (QName | NCName | '*'| '.')
/// </BLOCKQUOTE></PRE>
///
/// Content pattern is "([\\i-[:]][\\c-[:]]*:)?(//)?([\\i-[:]][\\c-[:]]*|\\*)((/|//)(([\\i-[:]][\\c-[:]]*:)?[\\i-[:]][\\c-[:]]*|\\*|[.]))*(\\|([\\i-[:]][\\c-[:]]*:)?(//)?([\\i-[:]][\\c-[:]]*|\\*)((/|//)(([\\i-[:]][\\c-[:]]*:)?[\\i-[:]][\\c-[:]]*|\\*|[.]))*)*".
typedef xsd__token wstop__FullTopicExpression "([\\i-[:]][\\c-[:]]*:)?(//)?([\\i-[:]][\\c-[:]]*|\\*)((/|//)(([\\i-[:]][\\c-[:]]*:)?[\\i-[:]][\\c-[:]]*|\\*|[.]))*(\\|([\\i-[:]][\\c-[:]]*:)?(//)?([\\i-[:]][\\c-[:]]*|\\*)((/|//)(([\\i-[:]][\\c-[:]]*:)?[\\i-[:]][\\c-[:]]*|\\*|[.]))*)*";

/// @brief Class wrapper for type wstop__FullTopicExpression derived from xsd__anyType.
///
class wstop__FullTopicExpression__ : public xsd__anyType
{ public:
    wstop__FullTopicExpression           __item;                       
};

/// @brief "http://docs.oasis-open.org/wsn/t-1":ConcreteTopicExpression is a simpleType restriction of type xs:token.
///
/// <PRE><BLOCKQUOTE>
///   The pattern allows strings matching the following EBNF:
///   ConcreteTopicPath ::= RootTopic ChildTopic* RootTopic ::= QName ChildTopic ::= '/' (QName | NCName)
/// </BLOCKQUOTE></PRE>
///
/// Content pattern is "(([\\i-[:]][\\c-[:]]*:)?[\\i-[:]][\\c-[:]]*)(/([\\i-[:]][\\c-[:]]*:)?[\\i-[:]][\\c-[:]]*)*".
typedef xsd__token wstop__ConcreteTopicExpression "(([\\i-[:]][\\c-[:]]*:)?[\\i-[:]][\\c-[:]]*)(/([\\i-[:]][\\c-[:]]*:)?[\\i-[:]][\\c-[:]]*)*";

/// @brief Class wrapper for type wstop__ConcreteTopicExpression derived from xsd__anyType.
///
class wstop__ConcreteTopicExpression__ : public xsd__anyType
{ public:
    wstop__ConcreteTopicExpression       __item;                       
};

/// @brief "http://docs.oasis-open.org/wsn/t-1":SimpleTopicExpression is a simpleType restriction of type xs:QName.
///
/// <PRE><BLOCKQUOTE>
///   The pattern allows strings matching the following EBNF:
///   RootTopic ::= QName
/// </BLOCKQUOTE></PRE>
///
typedef xsd__QName wstop__SimpleTopicExpression;

/// @brief Class wrapper for type wstop__SimpleTopicExpression derived from xsd__anyType.
///
class wstop__SimpleTopicExpression__ : public xsd__anyType
{ public:
    wstop__SimpleTopicExpression         __item;                       
};


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.w3.org/2004/08/xop/include                                    *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/recording/wsdl                                *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/schema                                        *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver10/schema":ReferenceToken is a simpleType restriction of type xs:string.
///
/// <PRE><BLOCKQUOTE>
///   Unique identifier for a physical or logical resource.
///   Tokens should be assigned such that they are unique within a device. Tokens must be at least unique within its class.
///   Length up to 64 characters. Token may be extended by intermediate terminal with adding prefix to make it global unique.
///   The length should be within 36 characters for generating at local device. See "Remote Token" section in Resource Query specification.
/// </BLOCKQUOTE></PRE>
///
/// Length of this content is 0 to 64.
typedef std::string tt__ReferenceToken : 64;

/// @brief Class wrapper for type tt__ReferenceToken derived from xsd__anyType.
///
class tt__ReferenceToken__ : public xsd__anyType
{ public:
    tt__ReferenceToken                   __item;                       
};

/// @brief "http://www.onvif.org/ver10/schema":MoveStatus is a simpleType restriction of type xs:string.
///
enum tt__MoveStatus
{
	tt__MoveStatus__IDLE,	///< xs:string value="IDLE"
	tt__MoveStatus__MOVING,	///< xs:string value="MOVING"
	tt__MoveStatus__UNKNOWN,	///< xs:string value="UNKNOWN"
};

/// @brief Class wrapper for type enum tt__MoveStatus derived from xsd__anyType.
///
class tt__MoveStatus_ : public xsd__anyType
{ public:
    enum tt__MoveStatus                  __item;                       
};

/// @brief "http://www.onvif.org/ver10/schema":Entity is a simpleType restriction of type xs:string.
///
enum tt__Entity
{
	tt__Entity__Device,	///< xs:string value="Device"
	tt__Entity__VideoSource,	///< xs:string value="VideoSource"
	tt__Entity__AudioSource,	///< xs:string value="AudioSource"
};

/// @brief Class wrapper for type enum tt__Entity derived from xsd__anyType.
///
class tt__Entity_ : public xsd__anyType
{ public:
    enum tt__Entity                      __item;                       
};

/// @brief "http://www.onvif.org/ver10/schema":Name is a simpleType restriction of type xs:string.
///
/// <PRE><BLOCKQUOTE>
///   User readable name. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
///
/// Length of this content is 0 to 64.
typedef std::string tt__Name : 64;

/// @brief Class wrapper for type tt__Name derived from xsd__anyType.
///
class tt__Name__ : public xsd__anyType
{ public:
    tt__Name                             __item;                       
};

/// @brief "http://www.onvif.org/ver10/schema":RotateMode is a simpleType restriction of type xs:string.
///
enum tt__RotateMode
{
/// <PRE><BLOCKQUOTE>
///   Enable the Rotate feature. Degree of rotation is specified Degree parameter.
/// </BLOCKQUOTE></PRE>
///
	tt__RotateMode__OFF,	///< xs:string value="OFF"
/// <PRE><BLOCKQUOTE>
///   Disable the Rotate feature.
/// </BLOCKQUOTE></PRE>
///
	tt__RotateMode__ON,	///< xs:string value="ON"
/// <PRE><BLOCKQUOTE>
///   Rotate feature is automatically activated by the device.
/// </BLOCKQUOTE></PRE>
///
	tt__RotateMode__AUTO,	///< xs:string value="AUTO"
};

/// @brief Class wrapper for type enum tt__RotateMode derived from xsd__anyType.
///
class tt__RotateMode_ : public xsd__anyType
{ public:
    enum tt__RotateMode                  __item;                       
};

/// @brief "http://www.onvif.org/ver10/schema":SceneOrientationMode is a simpleType restriction of type xs:string.
///
enum tt__SceneOrientationMode
{
	tt__SceneOrientationMode__MANUAL,	///< xs:string value="MANUAL"
	tt__SceneOrientationMode__AUTO,	///< xs:string value="AUTO"
};

/// @brief Class wrapper for type enum tt__SceneOrientationMode derived from xsd__anyType.
///
class tt__SceneOrientationMode_ : public xsd__anyType
{ public:
    enum tt__SceneOrientationMode        __item;                       
};

/// @brief "http://www.onvif.org/ver10/schema":SceneOrientationOption is a simpleType restriction of type xs:string.
///
/// <PRE><BLOCKQUOTE>
///   Defines the acceptable values for the Orientation element of the SceneOrientation type
/// </BLOCKQUOTE></PRE>
///
enum tt__SceneOrientationOption
{
	tt__SceneOrientationOption__Below,	///< xs:string value="Below"
	tt__SceneOrientationOption__Horizon,	///< xs:string value="Horizon"
	tt__SceneOrientationOption__Above,	///< xs:string value="Above"
};

/// @brief Class wrapper for type enum tt__SceneOrientationOption derived from xsd__anyType.
///
class tt__SceneOrientationOption_ : public xsd__anyType
{ public:
    enum tt__SceneOrientationOption      __item;                       
};

/// @brief "http://www.onvif.org/ver10/schema":ViewModes is a simpleType restriction of type xs:string.
///
/// <PRE><BLOCKQUOTE>
///   Source view modes supported by device.
/// </BLOCKQUOTE></PRE>
///
enum tt__ViewModes
{
/// <PRE><BLOCKQUOTE>
///   Undewarped viewmode from device supporting fisheye lens.
/// </BLOCKQUOTE></PRE>
///
	tt__ViewModes__tt_x003aFisheye,	///< xs:string value="tt:Fisheye"
/// <PRE><BLOCKQUOTE>
///   360 degree panoramic view.
/// </BLOCKQUOTE></PRE>
///
	tt__ViewModes__tt_x003a360Panorama,	///< xs:string value="tt:360Panorama"
/// <PRE><BLOCKQUOTE>
///   180 degree panoramic view.
/// </BLOCKQUOTE></PRE>
///
	tt__ViewModes__tt_x003a180Panorama,	///< xs:string value="tt:180Panorama"
/// <PRE><BLOCKQUOTE>
///   View mode combining four streams in single Quad, eg., applicable for devices supporting four heads.
/// </BLOCKQUOTE></PRE>
///
	tt__ViewModes__tt_x003aQuad,	///< xs:string value="tt:Quad"
/// <PRE><BLOCKQUOTE>
///   Unaltered view from the sensor.
/// </BLOCKQUOTE></PRE>
///
	tt__ViewModes__tt_x003aOriginal,	///< xs:string value="tt:Original"
/// <PRE><BLOCKQUOTE>
///   Viewmode combining the left side sensors, applicable for devices supporting multiple sensors.
/// </BLOCKQUOTE></PRE>
///
	tt__ViewModes__tt_x003aLeftHalf,	///< xs:string value="tt:LeftHalf"
/// <PRE><BLOCKQUOTE>
///   Viewmode combining the right side sensors, applicable for devices supporting multiple sensors.
/// </BLOCKQUOTE></PRE>
///
	tt__ViewModes__tt_x003aRightHalf,	///< xs:string value="tt:RightHalf"
/// <PRE><BLOCKQUOTE>
///   Dewarped view mode for device supporting fisheye lens.
/// </BLOCKQUOTE></PRE>
///
	tt__ViewModes__tt_x003aDewarp,	///< xs:string value="tt:Dewarp"
};

/// @brief Class wrapper for type enum tt__ViewModes derived from xsd__anyType.
///
class tt__ViewModes_ : public xsd__anyType
{ public:
    enum tt__ViewModes                   __item;                       
};

/// @brief "http://www.onvif.org/ver10/schema":VideoEncoding is a simpleType restriction of type xs:string.
///
enum tt__VideoEncoding
{
	tt__VideoEncoding__JPEG,	///< xs:string value="JPEG"
	tt__VideoEncoding__MPEG4,	///< xs:string value="MPEG4"
	tt__VideoEncoding__H264,	///< xs:string value="H264"
};

/// @brief Class wrapper for type enum tt__VideoEncoding derived from xsd__anyType.
///
class tt__VideoEncoding_ : public xsd__anyType
{ public:
    enum tt__VideoEncoding               __item;                       
};

/// @brief "http://www.onvif.org/ver10/schema":Mpeg4Profile is a simpleType restriction of type xs:string.
///
enum tt__Mpeg4Profile
{
	tt__Mpeg4Profile__SP,	///< xs:string value="SP"
	tt__Mpeg4Profile__ASP,	///< xs:string value="ASP"
};

/// @brief Class wrapper for type enum tt__Mpeg4Profile derived from xsd__anyType.
///
class tt__Mpeg4Profile_ : public xsd__anyType
{ public:
    enum tt__Mpeg4Profile                __item;                       
};

/// @brief "http://www.onvif.org/ver10/schema":H264Profile is a simpleType restriction of type xs:string.
///
enum tt__H264Profile
{
	tt__H264Profile__Baseline,	///< xs:string value="Baseline"
	tt__H264Profile__Main,	///< xs:string value="Main"
	tt__H264Profile__Extended,	///< xs:string value="Extended"
	tt__H264Profile__High,	///< xs:string value="High"
};

/// @brief Class wrapper for type enum tt__H264Profile derived from xsd__anyType.
///
class tt__H264Profile_ : public xsd__anyType
{ public:
    enum tt__H264Profile                 __item;                       
};

/// @brief "http://www.onvif.org/ver10/schema":VideoEncodingMimeNames is a simpleType restriction of type xs:string.
///
/// <PRE><BLOCKQUOTE>
///   Video Media Subtypes as referenced by IANA (without the leading "video/" Video Media Type). See also <a href="https://www.iana.org/assignments/media-types/media-types.xhtml#video"> IANA Media Types</a>.
/// </BLOCKQUOTE></PRE>
///
enum tt__VideoEncodingMimeNames
{
	tt__VideoEncodingMimeNames__JPEG,	///< xs:string value="JPEG"
	tt__VideoEncodingMimeNames__MPV4_ES,	///< xs:string value="MPV4-ES"
	tt__VideoEncodingMimeNames__H264,	///< xs:string value="H264"
	tt__VideoEncodingMimeNames__H265,	///< xs:string value="H265"
};

/// @brief Class wrapper for type enum tt__VideoEncodingMimeNames derived from xsd__anyType.
///
class tt__VideoEncodingMimeNames_ : public xsd__anyType
{ public:
    enum tt__VideoEncodingMimeNames      __item;                       
};

/// @brief "http://www.onvif.org/ver10/schema":VideoEncodingProfiles is a simpleType restriction of type xs:string.
///
enum tt__VideoEncodingProfiles
{
	tt__VideoEncodingProfiles__Simple,	///< xs:string value="Simple"
	tt__VideoEncodingProfiles__AdvancedSimple,	///< xs:string value="AdvancedSimple"
	tt__VideoEncodingProfiles__Baseline,	///< xs:string value="Baseline"
	tt__VideoEncodingProfiles__Main,	///< xs:string value="Main"
	tt__VideoEncodingProfiles__Main10,	///< xs:string value="Main10"
	tt__VideoEncodingProfiles__Extended,	///< xs:string value="Extended"
	tt__VideoEncodingProfiles__High,	///< xs:string value="High"
};

/// @brief Class wrapper for type enum tt__VideoEncodingProfiles derived from xsd__anyType.
///
class tt__VideoEncodingProfiles_ : public xsd__anyType
{ public:
    enum tt__VideoEncodingProfiles       __item;                       
};

/// @brief "http://www.onvif.org/ver10/schema":AudioEncoding is a simpleType restriction of type xs:string.
///
enum tt__AudioEncoding
{
	tt__AudioEncoding__G711,	///< xs:string value="G711"
	tt__AudioEncoding__G726,	///< xs:string value="G726"
	tt__AudioEncoding__AAC,	///< xs:string value="AAC"
};

/// @brief Class wrapper for type enum tt__AudioEncoding derived from xsd__anyType.
///
class tt__AudioEncoding_ : public xsd__anyType
{ public:
    enum tt__AudioEncoding               __item;                       
};

/// @brief "http://www.onvif.org/ver10/schema":AudioEncodingMimeNames is a simpleType restriction of type xs:string.
///
/// <PRE><BLOCKQUOTE>
///   Audio Media Subtypes as referenced by IANA (without the leading "audio/" Audio Media Type). See also <a href="https://www.iana.org/assignments/media-types/media-types.xhtml#audio"> IANA Media Types</a>.
/// </BLOCKQUOTE></PRE>
///
enum tt__AudioEncodingMimeNames
{
	tt__AudioEncodingMimeNames__PCMU,	///< xs:string value="PCMU"
	tt__AudioEncodingMimeNames__G726,	///< xs:string value="G726"
	tt__AudioEncodingMimeNames__MP4A_LATM,	///< xs:string value="MP4A-LATM"
	tt__AudioEncodingMimeNames__mpeg4_generic,	///< xs:string value="mpeg4-generic"
};

/// @brief Class wrapper for type enum tt__AudioEncodingMimeNames derived from xsd__anyType.
///
class tt__AudioEncodingMimeNames_ : public xsd__anyType
{ public:
    enum tt__AudioEncodingMimeNames      __item;                       
};

/// @brief "http://www.onvif.org/ver10/schema":MetadataCompressionType is a simpleType restriction of type xs:string.
///
enum tt__MetadataCompressionType
{
	tt__MetadataCompressionType__None,	///< xs:string value="None"
	tt__MetadataCompressionType__GZIP,	///< xs:string value="GZIP"
	tt__MetadataCompressionType__EXI,	///< xs:string value="EXI"
};

/// @brief Class wrapper for type enum tt__MetadataCompressionType derived from xsd__anyType.
///
class tt__MetadataCompressionType_ : public xsd__anyType
{ public:
    enum tt__MetadataCompressionType     __item;                       
};

/// @brief "http://www.onvif.org/ver10/schema":StreamType is a simpleType restriction of type xs:string.
///
enum tt__StreamType
{
	tt__StreamType__RTP_Unicast,	///< xs:string value="RTP-Unicast"
	tt__StreamType__RTP_Multicast,	///< xs:string value="RTP-Multicast"
};

/// @brief Class wrapper for type enum tt__StreamType derived from xsd__anyType.
///
class tt__StreamType_ : public xsd__anyType
{ public:
    enum tt__StreamType                  __item;                       
};

/// @brief "http://www.onvif.org/ver10/schema":TransportProtocol is a simpleType restriction of type xs:string.
///
enum tt__TransportProtocol
{
	tt__TransportProtocol__UDP,	///< xs:string value="UDP"
/// <PRE><BLOCKQUOTE>
///   This value is deprecated.
/// </BLOCKQUOTE></PRE>
///
	tt__TransportProtocol__TCP,	///< xs:string value="TCP"
	tt__TransportProtocol__RTSP,	///< xs:string value="RTSP"
	tt__TransportProtocol__HTTP,	///< xs:string value="HTTP"
};

/// @brief Class wrapper for type enum tt__TransportProtocol derived from xsd__anyType.
///
class tt__TransportProtocol_ : public xsd__anyType
{ public:
    enum tt__TransportProtocol           __item;                       
};

/// @brief "http://www.onvif.org/ver10/schema":ScopeDefinition is a simpleType restriction of type xs:string.
///
enum tt__ScopeDefinition
{
	tt__ScopeDefinition__Fixed,	///< xs:string value="Fixed"
	tt__ScopeDefinition__Configurable,	///< xs:string value="Configurable"
};

/// @brief Class wrapper for type enum tt__ScopeDefinition derived from xsd__anyType.
///
class tt__ScopeDefinition_ : public xsd__anyType
{ public:
    enum tt__ScopeDefinition             __item;                       
};

/// @brief "http://www.onvif.org/ver10/schema":DiscoveryMode is a simpleType restriction of type xs:string.
///
enum tt__DiscoveryMode
{
	tt__DiscoveryMode__Discoverable,	///< xs:string value="Discoverable"
	tt__DiscoveryMode__NonDiscoverable,	///< xs:string value="NonDiscoverable"
};

/// @brief Class wrapper for type enum tt__DiscoveryMode derived from xsd__anyType.
///
class tt__DiscoveryMode_ : public xsd__anyType
{ public:
    enum tt__DiscoveryMode               __item;                       
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkInterfaceConfigPriority is a simpleType restriction of type xs:integer.
///
/// Value range is 0 to 31.
typedef xsd__integer tt__NetworkInterfaceConfigPriority /* from 0 (inclusive) @warning: could not determine if this type is numeric */ /* to 31 (inclusive) @warning: could not determine if this type is numeric */;

/// @brief Class wrapper for type tt__NetworkInterfaceConfigPriority derived from xsd__anyType.
///
class tt__NetworkInterfaceConfigPriority__ : public xsd__anyType
{ public:
    tt__NetworkInterfaceConfigPriority   __item;                       
};

/// @brief "http://www.onvif.org/ver10/schema":Duplex is a simpleType restriction of type xs:string.
///
enum tt__Duplex
{
	tt__Duplex__Full,	///< xs:string value="Full"
	tt__Duplex__Half,	///< xs:string value="Half"
};

/// @brief Class wrapper for type enum tt__Duplex derived from xsd__anyType.
///
class tt__Duplex_ : public xsd__anyType
{ public:
    enum tt__Duplex                      __item;                       
};

/// @brief "http://www.onvif.org/ver10/schema":IANA-IfTypes is a simpleType restriction of type xs:int.
///
/// <PRE><BLOCKQUOTE>
///   For valid numbers, please refer to http://www.iana.org/assignments/ianaiftype-mib.
/// </BLOCKQUOTE></PRE>
///
typedef int tt__IANA_IfTypes;

/// @brief Class wrapper for type tt__IANA_IfTypes derived from xsd__anyType.
///
class tt__IANA_IfTypes__ : public xsd__anyType
{ public:
    tt__IANA_IfTypes                     __item;                       
};

/// @brief "http://www.onvif.org/ver10/schema":IPv6DHCPConfiguration is a simpleType restriction of type xs:string.
///
enum tt__IPv6DHCPConfiguration
{
	tt__IPv6DHCPConfiguration__Auto,	///< xs:string value="Auto"
	tt__IPv6DHCPConfiguration__Stateful,	///< xs:string value="Stateful"
	tt__IPv6DHCPConfiguration__Stateless,	///< xs:string value="Stateless"
	tt__IPv6DHCPConfiguration__Off,	///< xs:string value="Off"
};

/// @brief Class wrapper for type enum tt__IPv6DHCPConfiguration derived from xsd__anyType.
///
class tt__IPv6DHCPConfiguration_ : public xsd__anyType
{ public:
    enum tt__IPv6DHCPConfiguration       __item;                       
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkProtocolType is a simpleType restriction of type xs:string.
///
enum tt__NetworkProtocolType
{
	tt__NetworkProtocolType__HTTP,	///< xs:string value="HTTP"
	tt__NetworkProtocolType__HTTPS,	///< xs:string value="HTTPS"
	tt__NetworkProtocolType__RTSP,	///< xs:string value="RTSP"
};

/// @brief Class wrapper for type enum tt__NetworkProtocolType derived from xsd__anyType.
///
class tt__NetworkProtocolType_ : public xsd__anyType
{ public:
    enum tt__NetworkProtocolType         __item;                       
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkHostType is a simpleType restriction of type xs:string.
///
enum tt__NetworkHostType
{
	tt__NetworkHostType__IPv4,	///< xs:string value="IPv4"
	tt__NetworkHostType__IPv6,	///< xs:string value="IPv6"
	tt__NetworkHostType__DNS,	///< xs:string value="DNS"
};

/// @brief Class wrapper for type enum tt__NetworkHostType derived from xsd__anyType.
///
class tt__NetworkHostType_ : public xsd__anyType
{ public:
    enum tt__NetworkHostType             __item;                       
};

/// @brief "http://www.onvif.org/ver10/schema":IPv4Address is a simpleType restriction of type xs:token.
///
typedef xsd__token tt__IPv4Address;

/// @brief Class wrapper for type tt__IPv4Address derived from xsd__anyType.
///
class tt__IPv4Address__ : public xsd__anyType
{ public:
    tt__IPv4Address                      __item;                       
};

/// @brief "http://www.onvif.org/ver10/schema":IPv6Address is a simpleType restriction of type xs:token.
///
typedef xsd__token tt__IPv6Address;

/// @brief Class wrapper for type tt__IPv6Address derived from xsd__anyType.
///
class tt__IPv6Address__ : public xsd__anyType
{ public:
    tt__IPv6Address                      __item;                       
};

/// @brief "http://www.onvif.org/ver10/schema":HwAddress is a simpleType restriction of type xs:token.
///
typedef xsd__token tt__HwAddress;

/// @brief Class wrapper for type tt__HwAddress derived from xsd__anyType.
///
class tt__HwAddress__ : public xsd__anyType
{ public:
    tt__HwAddress                        __item;                       
};

/// @brief "http://www.onvif.org/ver10/schema":IPType is a simpleType restriction of type xs:string.
///
enum tt__IPType
{
	tt__IPType__IPv4,	///< xs:string value="IPv4"
	tt__IPType__IPv6,	///< xs:string value="IPv6"
};

/// @brief Class wrapper for type enum tt__IPType derived from xsd__anyType.
///
class tt__IPType_ : public xsd__anyType
{ public:
    enum tt__IPType                      __item;                       
};

/// @brief "http://www.onvif.org/ver10/schema":DNSName is a simpleType restriction of type xs:token.
///
typedef xsd__token tt__DNSName;

/// @brief Class wrapper for type tt__DNSName derived from xsd__anyType.
///
class tt__DNSName__ : public xsd__anyType
{ public:
    tt__DNSName                          __item;                       
};

/// @brief "http://www.onvif.org/ver10/schema":Domain is a simpleType restriction of type xs:token.
///
typedef xsd__token tt__Domain;

/// @brief Class wrapper for type tt__Domain derived from xsd__anyType.
///
class tt__Domain__ : public xsd__anyType
{ public:
    tt__Domain                           __item;                       
};

/// @brief "http://www.onvif.org/ver10/schema":IPAddressFilterType is a simpleType restriction of type xs:string.
///
enum tt__IPAddressFilterType
{
	tt__IPAddressFilterType__Allow,	///< xs:string value="Allow"
	tt__IPAddressFilterType__Deny,	///< xs:string value="Deny"
};

/// @brief Class wrapper for type enum tt__IPAddressFilterType derived from xsd__anyType.
///
class tt__IPAddressFilterType_ : public xsd__anyType
{ public:
    enum tt__IPAddressFilterType         __item;                       
};

/// @brief "http://www.onvif.org/ver10/schema":DynamicDNSType is a simpleType restriction of type xs:string.
///
enum tt__DynamicDNSType
{
	tt__DynamicDNSType__NoUpdate,	///< xs:string value="NoUpdate"
	tt__DynamicDNSType__ClientUpdates,	///< xs:string value="ClientUpdates"
	tt__DynamicDNSType__ServerUpdates,	///< xs:string value="ServerUpdates"
};

/// @brief Class wrapper for type enum tt__DynamicDNSType derived from xsd__anyType.
///
class tt__DynamicDNSType_ : public xsd__anyType
{ public:
    enum tt__DynamicDNSType              __item;                       
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11SSIDType is a simpleType restriction of type xs:hexBinary.
///
/// Length of this content is 1 to 32.
typedef xsd__hexBinary tt__Dot11SSIDType 1 : 32;

/// @brief Class wrapper for type tt__Dot11SSIDType derived from xsd__anyType.
///
class tt__Dot11SSIDType__ : public xsd__anyType
{ public:
    tt__Dot11SSIDType                    __item;                       
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11StationMode is a simpleType restriction of type xs:string.
///
enum tt__Dot11StationMode
{
	tt__Dot11StationMode__Ad_hoc,	///< xs:string value="Ad-hoc"
	tt__Dot11StationMode__Infrastructure,	///< xs:string value="Infrastructure"
	tt__Dot11StationMode__Extended,	///< xs:string value="Extended"
};

/// @brief Class wrapper for type enum tt__Dot11StationMode derived from xsd__anyType.
///
class tt__Dot11StationMode_ : public xsd__anyType
{ public:
    enum tt__Dot11StationMode            __item;                       
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11SecurityMode is a simpleType restriction of type xs:string.
///
enum tt__Dot11SecurityMode
{
	tt__Dot11SecurityMode__None,	///< xs:string value="None"
	tt__Dot11SecurityMode__WEP,	///< xs:string value="WEP"
	tt__Dot11SecurityMode__PSK,	///< xs:string value="PSK"
	tt__Dot11SecurityMode__Dot1X,	///< xs:string value="Dot1X"
	tt__Dot11SecurityMode__Extended,	///< xs:string value="Extended"
};

/// @brief Class wrapper for type enum tt__Dot11SecurityMode derived from xsd__anyType.
///
class tt__Dot11SecurityMode_ : public xsd__anyType
{ public:
    enum tt__Dot11SecurityMode           __item;                       
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11Cipher is a simpleType restriction of type xs:string.
///
enum tt__Dot11Cipher
{
	tt__Dot11Cipher__CCMP,	///< xs:string value="CCMP"
	tt__Dot11Cipher__TKIP,	///< xs:string value="TKIP"
	tt__Dot11Cipher__Any,	///< xs:string value="Any"
	tt__Dot11Cipher__Extended,	///< xs:string value="Extended"
};

/// @brief Class wrapper for type enum tt__Dot11Cipher derived from xsd__anyType.
///
class tt__Dot11Cipher_ : public xsd__anyType
{ public:
    enum tt__Dot11Cipher                 __item;                       
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11PSK is a simpleType restriction of type xs:hexBinary.
///
/// Length of this content is 32.
typedef xsd__hexBinary tt__Dot11PSK 32 : 32;

/// @brief Class wrapper for type tt__Dot11PSK derived from xsd__anyType.
///
class tt__Dot11PSK__ : public xsd__anyType
{ public:
    tt__Dot11PSK                         __item;                       
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11PSKPassphrase is a simpleType restriction of type xs:string.
///
/// Content pattern is "[ -~]{8,63}".
typedef std::string tt__Dot11PSKPassphrase "[ -~]{8,63}";

/// @brief Class wrapper for type tt__Dot11PSKPassphrase derived from xsd__anyType.
///
class tt__Dot11PSKPassphrase__ : public xsd__anyType
{ public:
    tt__Dot11PSKPassphrase               __item;                       
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11SignalStrength is a simpleType restriction of type xs:string.
///
enum tt__Dot11SignalStrength
{
	tt__Dot11SignalStrength__None,	///< xs:string value="None"
	tt__Dot11SignalStrength__Very_x0020Bad,	///< xs:string value="Very Bad"
	tt__Dot11SignalStrength__Bad,	///< xs:string value="Bad"
	tt__Dot11SignalStrength__Good,	///< xs:string value="Good"
	tt__Dot11SignalStrength__Very_x0020Good,	///< xs:string value="Very Good"
	tt__Dot11SignalStrength__Extended,	///< xs:string value="Extended"
};

/// @brief Class wrapper for type enum tt__Dot11SignalStrength derived from xsd__anyType.
///
class tt__Dot11SignalStrength_ : public xsd__anyType
{ public:
    enum tt__Dot11SignalStrength         __item;                       
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11AuthAndMangementSuite is a simpleType restriction of type xs:string.
///
enum tt__Dot11AuthAndMangementSuite
{
	tt__Dot11AuthAndMangementSuite__None,	///< xs:string value="None"
	tt__Dot11AuthAndMangementSuite__Dot1X,	///< xs:string value="Dot1X"
	tt__Dot11AuthAndMangementSuite__PSK,	///< xs:string value="PSK"
	tt__Dot11AuthAndMangementSuite__Extended,	///< xs:string value="Extended"
};

/// @brief Class wrapper for type enum tt__Dot11AuthAndMangementSuite derived from xsd__anyType.
///
class tt__Dot11AuthAndMangementSuite_ : public xsd__anyType
{ public:
    enum tt__Dot11AuthAndMangementSuite  __item;                       
};

/// @brief "http://www.onvif.org/ver10/schema":CapabilityCategory is a simpleType restriction of type xs:string.
///
enum tt__CapabilityCategory
{
	tt__CapabilityCategory__All,	///< xs:string value="All"
	tt__CapabilityCategory__Analytics,	///< xs:string value="Analytics"
	tt__CapabilityCategory__Device,	///< xs:string value="Device"
	tt__CapabilityCategory__Events,	///< xs:string value="Events"
	tt__CapabilityCategory__Imaging,	///< xs:string value="Imaging"
	tt__CapabilityCategory__Media,	///< xs:string value="Media"
	tt__CapabilityCategory__PTZ,	///< xs:string value="PTZ"
};

/// @brief Class wrapper for type enum tt__CapabilityCategory derived from xsd__anyType.
///
class tt__CapabilityCategory_ : public xsd__anyType
{ public:
    enum tt__CapabilityCategory          __item;                       
};

/// @brief "http://www.onvif.org/ver10/schema":SystemLogType is a simpleType restriction of type xs:string.
///
/// <PRE><BLOCKQUOTE>
///   Enumeration describing the available system log modes.
/// </BLOCKQUOTE></PRE>
///
enum tt__SystemLogType
{
/// <PRE><BLOCKQUOTE>
///   Indicates that a system log is requested.
/// </BLOCKQUOTE></PRE>
///
	tt__SystemLogType__System,	///< xs:string value="System"
/// <PRE><BLOCKQUOTE>
///   Indicates that a access log is requested.
/// </BLOCKQUOTE></PRE>
///
	tt__SystemLogType__Access,	///< xs:string value="Access"
};

/// @brief Class wrapper for type enum tt__SystemLogType derived from xsd__anyType.
///
class tt__SystemLogType_ : public xsd__anyType
{ public:
    enum tt__SystemLogType               __item;                       
};

/// @brief "http://www.onvif.org/ver10/schema":FactoryDefaultType is a simpleType restriction of type xs:string.
///
/// <PRE><BLOCKQUOTE>
///   Enumeration describing the available factory default modes.
/// </BLOCKQUOTE></PRE>
///
enum tt__FactoryDefaultType
{
/// <PRE><BLOCKQUOTE>
///   Indicates that a hard factory default is requested.
/// </BLOCKQUOTE></PRE>
///
	tt__FactoryDefaultType__Hard,	///< xs:string value="Hard"
/// <PRE><BLOCKQUOTE>
///   Indicates that a soft factory default is requested.
/// </BLOCKQUOTE></PRE>
///
	tt__FactoryDefaultType__Soft,	///< xs:string value="Soft"
};

/// @brief Class wrapper for type enum tt__FactoryDefaultType derived from xsd__anyType.
///
class tt__FactoryDefaultType_ : public xsd__anyType
{ public:
    enum tt__FactoryDefaultType          __item;                       
};

/// @brief "http://www.onvif.org/ver10/schema":SetDateTimeType is a simpleType restriction of type xs:string.
///
enum tt__SetDateTimeType
{
/// <PRE><BLOCKQUOTE>
///   Indicates that the date and time are set manually.
/// </BLOCKQUOTE></PRE>
///
	tt__SetDateTimeType__Manual,	///< xs:string value="Manual"
/// <PRE><BLOCKQUOTE>
///   Indicates that the date and time are set through NTP
/// </BLOCKQUOTE></PRE>
///
	tt__SetDateTimeType__NTP,	///< xs:string value="NTP"
};

/// @brief Class wrapper for type enum tt__SetDateTimeType derived from xsd__anyType.
///
class tt__SetDateTimeType_ : public xsd__anyType
{ public:
    enum tt__SetDateTimeType             __item;                       
};

/// @brief "http://www.onvif.org/ver10/schema":UserLevel is a simpleType restriction of type xs:string.
///
enum tt__UserLevel
{
	tt__UserLevel__Administrator,	///< xs:string value="Administrator"
	tt__UserLevel__Operator,	///< xs:string value="Operator"
	tt__UserLevel__User,	///< xs:string value="User"
	tt__UserLevel__Anonymous,	///< xs:string value="Anonymous"
	tt__UserLevel__Extended,	///< xs:string value="Extended"
};

/// @brief Class wrapper for type enum tt__UserLevel derived from xsd__anyType.
///
class tt__UserLevel_ : public xsd__anyType
{ public:
    enum tt__UserLevel                   __item;                       
};

/// @brief "http://www.onvif.org/ver10/schema":RelayLogicalState is a simpleType restriction of type xs:string.
///
enum tt__RelayLogicalState
{
	tt__RelayLogicalState__active,	///< xs:string value="active"
	tt__RelayLogicalState__inactive,	///< xs:string value="inactive"
};

/// @brief Class wrapper for type enum tt__RelayLogicalState derived from xsd__anyType.
///
class tt__RelayLogicalState_ : public xsd__anyType
{ public:
    enum tt__RelayLogicalState           __item;                       
};

/// @brief "http://www.onvif.org/ver10/schema":RelayIdleState is a simpleType restriction of type xs:string.
///
enum tt__RelayIdleState
{
	tt__RelayIdleState__closed,	///< xs:string value="closed"
	tt__RelayIdleState__open,	///< xs:string value="open"
};

/// @brief Class wrapper for type enum tt__RelayIdleState derived from xsd__anyType.
///
class tt__RelayIdleState_ : public xsd__anyType
{ public:
    enum tt__RelayIdleState              __item;                       
};

/// @brief "http://www.onvif.org/ver10/schema":RelayMode is a simpleType restriction of type xs:string.
///
enum tt__RelayMode
{
	tt__RelayMode__Monostable,	///< xs:string value="Monostable"
	tt__RelayMode__Bistable,	///< xs:string value="Bistable"
};

/// @brief Class wrapper for type enum tt__RelayMode derived from xsd__anyType.
///
class tt__RelayMode_ : public xsd__anyType
{ public:
    enum tt__RelayMode                   __item;                       
};

/// @brief "http://www.onvif.org/ver10/schema":DigitalIdleState is a simpleType restriction of type xs:string.
///
enum tt__DigitalIdleState
{
	tt__DigitalIdleState__closed,	///< xs:string value="closed"
	tt__DigitalIdleState__open,	///< xs:string value="open"
};

/// @brief Class wrapper for type enum tt__DigitalIdleState derived from xsd__anyType.
///
class tt__DigitalIdleState_ : public xsd__anyType
{ public:
    enum tt__DigitalIdleState            __item;                       
};

/// @brief "http://www.onvif.org/ver10/schema":EFlipMode is a simpleType restriction of type xs:string.
///
enum tt__EFlipMode
{
	tt__EFlipMode__OFF,	///< xs:string value="OFF"
	tt__EFlipMode__ON,	///< xs:string value="ON"
	tt__EFlipMode__Extended,	///< xs:string value="Extended"
};

/// @brief Class wrapper for type enum tt__EFlipMode derived from xsd__anyType.
///
class tt__EFlipMode_ : public xsd__anyType
{ public:
    enum tt__EFlipMode                   __item;                       
};

/// @brief "http://www.onvif.org/ver10/schema":ReverseMode is a simpleType restriction of type xs:string.
///
enum tt__ReverseMode
{
	tt__ReverseMode__OFF,	///< xs:string value="OFF"
	tt__ReverseMode__ON,	///< xs:string value="ON"
	tt__ReverseMode__AUTO,	///< xs:string value="AUTO"
	tt__ReverseMode__Extended,	///< xs:string value="Extended"
};

/// @brief Class wrapper for type enum tt__ReverseMode derived from xsd__anyType.
///
class tt__ReverseMode_ : public xsd__anyType
{ public:
    enum tt__ReverseMode                 __item;                       
};

/// @brief "http://www.onvif.org/ver10/schema":AuxiliaryData is a simpleType restriction of type xs:string.
///
/// Length of this content is 0 to 128.
typedef std::string tt__AuxiliaryData : 128;

/// @brief Class wrapper for type tt__AuxiliaryData derived from xsd__anyType.
///
class tt__AuxiliaryData__ : public xsd__anyType
{ public:
    tt__AuxiliaryData                    __item;                       
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourState is a simpleType restriction of type xs:string.
///
enum tt__PTZPresetTourState
{
	tt__PTZPresetTourState__Idle,	///< xs:string value="Idle"
	tt__PTZPresetTourState__Touring,	///< xs:string value="Touring"
	tt__PTZPresetTourState__Paused,	///< xs:string value="Paused"
	tt__PTZPresetTourState__Extended,	///< xs:string value="Extended"
};

/// @brief Class wrapper for type enum tt__PTZPresetTourState derived from xsd__anyType.
///
class tt__PTZPresetTourState_ : public xsd__anyType
{ public:
    enum tt__PTZPresetTourState          __item;                       
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourDirection is a simpleType restriction of type xs:string.
///
enum tt__PTZPresetTourDirection
{
	tt__PTZPresetTourDirection__Forward,	///< xs:string value="Forward"
	tt__PTZPresetTourDirection__Backward,	///< xs:string value="Backward"
	tt__PTZPresetTourDirection__Extended,	///< xs:string value="Extended"
};

/// @brief Class wrapper for type enum tt__PTZPresetTourDirection derived from xsd__anyType.
///
class tt__PTZPresetTourDirection_ : public xsd__anyType
{ public:
    enum tt__PTZPresetTourDirection      __item;                       
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourOperation is a simpleType restriction of type xs:string.
///
enum tt__PTZPresetTourOperation
{
	tt__PTZPresetTourOperation__Start,	///< xs:string value="Start"
	tt__PTZPresetTourOperation__Stop,	///< xs:string value="Stop"
	tt__PTZPresetTourOperation__Pause,	///< xs:string value="Pause"
	tt__PTZPresetTourOperation__Extended,	///< xs:string value="Extended"
};

/// @brief Class wrapper for type enum tt__PTZPresetTourOperation derived from xsd__anyType.
///
class tt__PTZPresetTourOperation_ : public xsd__anyType
{ public:
    enum tt__PTZPresetTourOperation      __item;                       
};

/// @brief "http://www.onvif.org/ver10/schema":MoveAndTrackMethod is a simpleType restriction of type xs:string.
///
enum tt__MoveAndTrackMethod
{
	tt__MoveAndTrackMethod__PresetToken,	///< xs:string value="PresetToken"
	tt__MoveAndTrackMethod__GeoLocation,	///< xs:string value="GeoLocation"
	tt__MoveAndTrackMethod__PTZVector,	///< xs:string value="PTZVector"
	tt__MoveAndTrackMethod__ObjectID,	///< xs:string value="ObjectID"
};

/// @brief Class wrapper for type enum tt__MoveAndTrackMethod derived from xsd__anyType.
///
class tt__MoveAndTrackMethod_ : public xsd__anyType
{ public:
    enum tt__MoveAndTrackMethod          __item;                       
};

/// @brief "http://www.onvif.org/ver10/schema":AutoFocusMode is a simpleType restriction of type xs:string.
///
enum tt__AutoFocusMode
{
	tt__AutoFocusMode__AUTO,	///< xs:string value="AUTO"
	tt__AutoFocusMode__MANUAL,	///< xs:string value="MANUAL"
};

/// @brief Class wrapper for type enum tt__AutoFocusMode derived from xsd__anyType.
///
class tt__AutoFocusMode_ : public xsd__anyType
{ public:
    enum tt__AutoFocusMode               __item;                       
};

/// @brief "http://www.onvif.org/ver10/schema":AFModes is a simpleType restriction of type xs:string.
///
enum tt__AFModes
{
/// <PRE><BLOCKQUOTE>
///   Focus of a moving camera is updated only once after stopping a pan, tilt or zoom movement.
/// </BLOCKQUOTE></PRE>
///
	tt__AFModes__OnceAfterMove,	///< xs:string value="OnceAfterMove"
};

/// @brief Class wrapper for type enum tt__AFModes derived from xsd__anyType.
///
class tt__AFModes_ : public xsd__anyType
{ public:
    enum tt__AFModes                     __item;                       
};

/// @brief "http://www.onvif.org/ver10/schema":WideDynamicMode is a simpleType restriction of type xs:string.
///
enum tt__WideDynamicMode
{
	tt__WideDynamicMode__OFF,	///< xs:string value="OFF"
	tt__WideDynamicMode__ON,	///< xs:string value="ON"
};

/// @brief Class wrapper for type enum tt__WideDynamicMode derived from xsd__anyType.
///
class tt__WideDynamicMode_ : public xsd__anyType
{ public:
    enum tt__WideDynamicMode             __item;                       
};

/// @brief "http://www.onvif.org/ver10/schema":BacklightCompensationMode is a simpleType restriction of type xs:string.
///
/// <PRE><BLOCKQUOTE>
///   Enumeration describing the available backlight compenstation modes.
/// </BLOCKQUOTE></PRE>
///
enum tt__BacklightCompensationMode
{
/// <PRE><BLOCKQUOTE>
///   Backlight compensation is disabled.
/// </BLOCKQUOTE></PRE>
///
	tt__BacklightCompensationMode__OFF,	///< xs:string value="OFF"
/// <PRE><BLOCKQUOTE>
///   Backlight compensation is enabled.
/// </BLOCKQUOTE></PRE>
///
	tt__BacklightCompensationMode__ON,	///< xs:string value="ON"
};

/// @brief Class wrapper for type enum tt__BacklightCompensationMode derived from xsd__anyType.
///
class tt__BacklightCompensationMode_ : public xsd__anyType
{ public:
    enum tt__BacklightCompensationMode   __item;                       
};

/// @brief "http://www.onvif.org/ver10/schema":ExposurePriority is a simpleType restriction of type xs:string.
///
enum tt__ExposurePriority
{
	tt__ExposurePriority__LowNoise,	///< xs:string value="LowNoise"
	tt__ExposurePriority__FrameRate,	///< xs:string value="FrameRate"
};

/// @brief Class wrapper for type enum tt__ExposurePriority derived from xsd__anyType.
///
class tt__ExposurePriority_ : public xsd__anyType
{ public:
    enum tt__ExposurePriority            __item;                       
};

/// @brief "http://www.onvif.org/ver10/schema":ExposureMode is a simpleType restriction of type xs:string.
///
enum tt__ExposureMode
{
	tt__ExposureMode__AUTO,	///< xs:string value="AUTO"
	tt__ExposureMode__MANUAL,	///< xs:string value="MANUAL"
};

/// @brief Class wrapper for type enum tt__ExposureMode derived from xsd__anyType.
///
class tt__ExposureMode_ : public xsd__anyType
{ public:
    enum tt__ExposureMode                __item;                       
};

/// @brief "http://www.onvif.org/ver10/schema":Enabled is a simpleType restriction of type xs:string.
///
enum tt__Enabled
{
	tt__Enabled__ENABLED,	///< xs:string value="ENABLED"
	tt__Enabled__DISABLED,	///< xs:string value="DISABLED"
};

/// @brief Class wrapper for type enum tt__Enabled derived from xsd__anyType.
///
class tt__Enabled_ : public xsd__anyType
{ public:
    enum tt__Enabled                     __item;                       
};

/// @brief "http://www.onvif.org/ver10/schema":WhiteBalanceMode is a simpleType restriction of type xs:string.
///
enum tt__WhiteBalanceMode
{
	tt__WhiteBalanceMode__AUTO,	///< xs:string value="AUTO"
	tt__WhiteBalanceMode__MANUAL,	///< xs:string value="MANUAL"
};

/// @brief Class wrapper for type enum tt__WhiteBalanceMode derived from xsd__anyType.
///
class tt__WhiteBalanceMode_ : public xsd__anyType
{ public:
    enum tt__WhiteBalanceMode            __item;                       
};

/// @brief "http://www.onvif.org/ver10/schema":IrCutFilterMode is a simpleType restriction of type xs:string.
///
enum tt__IrCutFilterMode
{
	tt__IrCutFilterMode__ON,	///< xs:string value="ON"
	tt__IrCutFilterMode__OFF,	///< xs:string value="OFF"
	tt__IrCutFilterMode__AUTO,	///< xs:string value="AUTO"
};

/// @brief Class wrapper for type enum tt__IrCutFilterMode derived from xsd__anyType.
///
class tt__IrCutFilterMode_ : public xsd__anyType
{ public:
    enum tt__IrCutFilterMode             __item;                       
};

/// @brief "http://www.onvif.org/ver10/schema":ImageStabilizationMode is a simpleType restriction of type xs:string.
///
enum tt__ImageStabilizationMode
{
	tt__ImageStabilizationMode__OFF,	///< xs:string value="OFF"
	tt__ImageStabilizationMode__ON,	///< xs:string value="ON"
	tt__ImageStabilizationMode__AUTO,	///< xs:string value="AUTO"
	tt__ImageStabilizationMode__Extended,	///< xs:string value="Extended"
};

/// @brief Class wrapper for type enum tt__ImageStabilizationMode derived from xsd__anyType.
///
class tt__ImageStabilizationMode_ : public xsd__anyType
{ public:
    enum tt__ImageStabilizationMode      __item;                       
};

/// @brief "http://www.onvif.org/ver10/schema":IrCutFilterAutoBoundaryType is a simpleType restriction of type xs:string.
///
enum tt__IrCutFilterAutoBoundaryType
{
	tt__IrCutFilterAutoBoundaryType__Common,	///< xs:string value="Common"
	tt__IrCutFilterAutoBoundaryType__ToOn,	///< xs:string value="ToOn"
	tt__IrCutFilterAutoBoundaryType__ToOff,	///< xs:string value="ToOff"
	tt__IrCutFilterAutoBoundaryType__Extended,	///< xs:string value="Extended"
};

/// @brief Class wrapper for type enum tt__IrCutFilterAutoBoundaryType derived from xsd__anyType.
///
class tt__IrCutFilterAutoBoundaryType_ : public xsd__anyType
{ public:
    enum tt__IrCutFilterAutoBoundaryType  __item;                       
};

/// @brief "http://www.onvif.org/ver10/schema":ToneCompensationMode is a simpleType restriction of type xs:string.
///
enum tt__ToneCompensationMode
{
	tt__ToneCompensationMode__OFF,	///< xs:string value="OFF"
	tt__ToneCompensationMode__ON,	///< xs:string value="ON"
	tt__ToneCompensationMode__AUTO,	///< xs:string value="AUTO"
};

/// @brief Class wrapper for type enum tt__ToneCompensationMode derived from xsd__anyType.
///
class tt__ToneCompensationMode_ : public xsd__anyType
{ public:
    enum tt__ToneCompensationMode        __item;                       
};

/// @brief "http://www.onvif.org/ver10/schema":DefoggingMode is a simpleType restriction of type xs:string.
///
enum tt__DefoggingMode
{
	tt__DefoggingMode__OFF,	///< xs:string value="OFF"
	tt__DefoggingMode__ON,	///< xs:string value="ON"
	tt__DefoggingMode__AUTO,	///< xs:string value="AUTO"
};

/// @brief Class wrapper for type enum tt__DefoggingMode derived from xsd__anyType.
///
class tt__DefoggingMode_ : public xsd__anyType
{ public:
    enum tt__DefoggingMode               __item;                       
};

/// @brief "http://www.onvif.org/ver10/schema":ImageSendingType is a simpleType restriction of type xs:string.
///
enum tt__ImageSendingType
{
	tt__ImageSendingType__Embedded,	///< xs:string value="Embedded"
	tt__ImageSendingType__LocalStorage,	///< xs:string value="LocalStorage"
	tt__ImageSendingType__RemoteStorage,	///< xs:string value="RemoteStorage"
};

/// @brief Class wrapper for type enum tt__ImageSendingType derived from xsd__anyType.
///
class tt__ImageSendingType_ : public xsd__anyType
{ public:
    enum tt__ImageSendingType            __item;                       
};

/// @brief "http://www.onvif.org/ver10/schema":PropertyOperation is a simpleType restriction of type xs:string.
///
enum tt__PropertyOperation
{
	tt__PropertyOperation__Initialized,	///< xs:string value="Initialized"
	tt__PropertyOperation__Deleted,	///< xs:string value="Deleted"
	tt__PropertyOperation__Changed,	///< xs:string value="Changed"
};

/// @brief Class wrapper for type enum tt__PropertyOperation derived from xsd__anyType.
///
class tt__PropertyOperation_ : public xsd__anyType
{ public:
    enum tt__PropertyOperation           __item;                       
};

/// @brief "http://www.onvif.org/ver10/schema":Direction is a simpleType restriction of type xs:string.
///
enum tt__Direction
{
	tt__Direction__Left,	///< xs:string value="Left"
	tt__Direction__Right,	///< xs:string value="Right"
	tt__Direction__Any,	///< xs:string value="Any"
};

/// @brief Class wrapper for type enum tt__Direction derived from xsd__anyType.
///
class tt__Direction_ : public xsd__anyType
{ public:
    enum tt__Direction                   __item;                       
};

/// @brief "http://www.onvif.org/ver10/schema":ReceiverMode is a simpleType restriction of type xs:string.
///
/// <PRE><BLOCKQUOTE>
///   Specifies a receiver connection mode.
/// </BLOCKQUOTE></PRE>
///
enum tt__ReceiverMode
{
/// <PRE><BLOCKQUOTE>
///   The receiver connects on demand, as required by consumers of the media streams.
/// </BLOCKQUOTE></PRE>
///
	tt__ReceiverMode__AutoConnect,	///< xs:string value="AutoConnect"
/// <PRE><BLOCKQUOTE>
///   The receiver attempts to maintain a persistent connection to the configured endpoint.
/// </BLOCKQUOTE></PRE>
///
	tt__ReceiverMode__AlwaysConnect,	///< xs:string value="AlwaysConnect"
/// <PRE><BLOCKQUOTE>
///   The receiver does not attempt to connect.
/// </BLOCKQUOTE></PRE>
///
	tt__ReceiverMode__NeverConnect,	///< xs:string value="NeverConnect"
/// <PRE><BLOCKQUOTE>
///   This case should never happen.
/// </BLOCKQUOTE></PRE>
///
	tt__ReceiverMode__Unknown,	///< xs:string value="Unknown"
};

/// @brief Class wrapper for type enum tt__ReceiverMode derived from xsd__anyType.
///
class tt__ReceiverMode_ : public xsd__anyType
{ public:
    enum tt__ReceiverMode                __item;                       
};

/// @brief "http://www.onvif.org/ver10/schema":ReceiverState is a simpleType restriction of type xs:string.
///
/// <PRE><BLOCKQUOTE>
///   Specifies the current connection state of the receiver.
/// </BLOCKQUOTE></PRE>
///
enum tt__ReceiverState
{
/// <PRE><BLOCKQUOTE>
///   The receiver is not connected.
/// </BLOCKQUOTE></PRE>
///
	tt__ReceiverState__NotConnected,	///< xs:string value="NotConnected"
/// <PRE><BLOCKQUOTE>
///   The receiver is attempting to connect.
/// </BLOCKQUOTE></PRE>
///
	tt__ReceiverState__Connecting,	///< xs:string value="Connecting"
/// <PRE><BLOCKQUOTE>
///   The receiver is connected.
/// </BLOCKQUOTE></PRE>
///
	tt__ReceiverState__Connected,	///< xs:string value="Connected"
/// <PRE><BLOCKQUOTE>
///   This case should never happen.
/// </BLOCKQUOTE></PRE>
///
	tt__ReceiverState__Unknown,	///< xs:string value="Unknown"
};

/// @brief Class wrapper for type enum tt__ReceiverState derived from xsd__anyType.
///
class tt__ReceiverState_ : public xsd__anyType
{ public:
    enum tt__ReceiverState               __item;                       
};

/// @brief "http://www.onvif.org/ver10/schema":Description is a simpleType restriction of type xs:string.
///
typedef std::string tt__Description;

/// @brief Class wrapper for type tt__Description derived from xsd__anyType.
///
class tt__Description__ : public xsd__anyType
{ public:
    tt__Description                      __item;                       
};

/// @brief "http://www.onvif.org/ver10/schema":XPathExpression is a simpleType restriction of type xs:string.
///
typedef std::string tt__XPathExpression;

/// @brief Class wrapper for type tt__XPathExpression derived from xsd__anyType.
///
class tt__XPathExpression__ : public xsd__anyType
{ public:
    tt__XPathExpression                  __item;                       
};

/// @brief "http://www.onvif.org/ver10/schema":SearchState is a simpleType restriction of type xs:string.
///
enum tt__SearchState
{
/// <PRE><BLOCKQUOTE>
///   The search is queued and not yet started.
/// </BLOCKQUOTE></PRE>
///
	tt__SearchState__Queued,	///< xs:string value="Queued"
/// <PRE><BLOCKQUOTE>
///   The search is underway and not yet completed.
/// </BLOCKQUOTE></PRE>
///
	tt__SearchState__Searching,	///< xs:string value="Searching"
/// <PRE><BLOCKQUOTE>
///   The search has been completed and no new results will be found.
/// </BLOCKQUOTE></PRE>
///
	tt__SearchState__Completed,	///< xs:string value="Completed"
/// <PRE><BLOCKQUOTE>
///   The state of the search is unknown. (This is not a valid response from GetSearchState.)
/// </BLOCKQUOTE></PRE>
///
	tt__SearchState__Unknown,	///< xs:string value="Unknown"
};

/// @brief Class wrapper for type enum tt__SearchState derived from xsd__anyType.
///
class tt__SearchState_ : public xsd__anyType
{ public:
    enum tt__SearchState                 __item;                       
};

/// @brief "http://www.onvif.org/ver10/schema":RecordingStatus is a simpleType restriction of type xs:string.
///
enum tt__RecordingStatus
{
	tt__RecordingStatus__Initiated,	///< xs:string value="Initiated"
	tt__RecordingStatus__Recording,	///< xs:string value="Recording"
	tt__RecordingStatus__Stopped,	///< xs:string value="Stopped"
	tt__RecordingStatus__Removing,	///< xs:string value="Removing"
	tt__RecordingStatus__Removed,	///< xs:string value="Removed"
/// <PRE><BLOCKQUOTE>
///   This case should never happen.
/// </BLOCKQUOTE></PRE>
///
	tt__RecordingStatus__Unknown,	///< xs:string value="Unknown"
};

/// @brief Class wrapper for type enum tt__RecordingStatus derived from xsd__anyType.
///
class tt__RecordingStatus_ : public xsd__anyType
{ public:
    enum tt__RecordingStatus             __item;                       
};

/// @brief "http://www.onvif.org/ver10/schema":TrackType is a simpleType restriction of type xs:string.
///
enum tt__TrackType
{
	tt__TrackType__Video,	///< xs:string value="Video"
	tt__TrackType__Audio,	///< xs:string value="Audio"
	tt__TrackType__Metadata,	///< xs:string value="Metadata"
/// <PRE><BLOCKQUOTE>
///   Placeholder for future extension.
/// </BLOCKQUOTE></PRE>
///
	tt__TrackType__Extended,	///< xs:string value="Extended"
};

/// @brief Class wrapper for type enum tt__TrackType derived from xsd__anyType.
///
class tt__TrackType_ : public xsd__anyType
{ public:
    enum tt__TrackType                   __item;                       
};

/// @brief "http://www.onvif.org/ver10/schema":RecordingJobMode is a simpleType restriction of type xs:string.
///
typedef std::string tt__RecordingJobMode;

/// @brief Class wrapper for type tt__RecordingJobMode derived from xsd__anyType.
///
class tt__RecordingJobMode__ : public xsd__anyType
{ public:
    tt__RecordingJobMode                 __item;                       
};

/// @brief "http://www.onvif.org/ver10/schema":RecordingJobState is a simpleType restriction of type xs:string.
///
typedef std::string tt__RecordingJobState;

/// @brief Class wrapper for type tt__RecordingJobState derived from xsd__anyType.
///
class tt__RecordingJobState__ : public xsd__anyType
{ public:
    tt__RecordingJobState                __item;                       
};

/// @brief "http://www.onvif.org/ver10/schema":ModeOfOperation is a simpleType restriction of type xs:string.
///
enum tt__ModeOfOperation
{
	tt__ModeOfOperation__Idle,	///< xs:string value="Idle"
	tt__ModeOfOperation__Active,	///< xs:string value="Active"
/// <PRE><BLOCKQUOTE>
///   This case should never happen.
/// </BLOCKQUOTE></PRE>
///
	tt__ModeOfOperation__Unknown,	///< xs:string value="Unknown"
};

/// @brief Class wrapper for type enum tt__ModeOfOperation derived from xsd__anyType.
///
class tt__ModeOfOperation_ : public xsd__anyType
{ public:
    enum tt__ModeOfOperation             __item;                       
};

/// @brief "http://www.onvif.org/ver10/schema":AudioClassType is a simpleType restriction of type xs:string.
///
/// <PRE><BLOCKQUOTE>
///   AudioClassType acceptable values are;
///   gun_shot, scream, glass_breaking, tire_screech
/// </BLOCKQUOTE></PRE>
///
typedef std::string tt__AudioClassType;

/// @brief Class wrapper for type tt__AudioClassType derived from xsd__anyType.
///
class tt__AudioClassType__ : public xsd__anyType
{ public:
    tt__AudioClassType                   __item;                       
};

/// @brief "http://www.onvif.org/ver10/schema":OSDType is a simpleType restriction of type xs:string.
///
enum tt__OSDType
{
	tt__OSDType__Text,	///< xs:string value="Text"
	tt__OSDType__Image,	///< xs:string value="Image"
	tt__OSDType__Extended,	///< xs:string value="Extended"
};

/// @brief Class wrapper for type enum tt__OSDType derived from xsd__anyType.
///
class tt__OSDType_ : public xsd__anyType
{ public:
    enum tt__OSDType                     __item;                       
};


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/media/wsdl                                    *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/search/wsdl                                   *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver20/imaging/wsdl                                  *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver20/imaging/wsdl":ImagingPresetType is a simpleType restriction of type xs:string.
///
/// <PRE><BLOCKQUOTE>
///   Describes standard Imaging Preset types, used to facilitate Multi-language support and client display.
///   "Custom" Type shall be used when Imaging Preset Name does not match any of the types included in the standard classification.
/// </BLOCKQUOTE></PRE>
///
enum timg__ImagingPresetType
{
	timg__ImagingPresetType__Custom,	///< xs:string value="Custom"
	timg__ImagingPresetType__ClearWeather,	///< xs:string value="ClearWeather"
	timg__ImagingPresetType__Cloudy,	///< xs:string value="Cloudy"
	timg__ImagingPresetType__Fog,	///< xs:string value="Fog"
	timg__ImagingPresetType__Rain,	///< xs:string value="Rain"
	timg__ImagingPresetType__Snowing,	///< xs:string value="Snowing"
	timg__ImagingPresetType__Snow,	///< xs:string value="Snow"
	timg__ImagingPresetType__WDR,	///< xs:string value="WDR"
	timg__ImagingPresetType__Shade,	///< xs:string value="Shade"
	timg__ImagingPresetType__Night,	///< xs:string value="Night"
	timg__ImagingPresetType__Indoor,	///< xs:string value="Indoor"
	timg__ImagingPresetType__Fluorescent,	///< xs:string value="Fluorescent"
	timg__ImagingPresetType__Incandescent,	///< xs:string value="Incandescent"
	timg__ImagingPresetType__Sodium_x0028Natrium_x0029,	///< xs:string value="Sodium(Natrium)"
	timg__ImagingPresetType__Sunrise_x0028Horizon_x0029,	///< xs:string value="Sunrise(Horizon)"
	timg__ImagingPresetType__Sunset_x0028Rear_x0029,	///< xs:string value="Sunset(Rear)"
	timg__ImagingPresetType__ExtremeHot,	///< xs:string value="ExtremeHot"
	timg__ImagingPresetType__ExtremeCold,	///< xs:string value="ExtremeCold"
	timg__ImagingPresetType__Underwater,	///< xs:string value="Underwater"
	timg__ImagingPresetType__CloseUp,	///< xs:string value="CloseUp"
	timg__ImagingPresetType__Motion,	///< xs:string value="Motion"
	timg__ImagingPresetType__FlickerFree50,	///< xs:string value="FlickerFree50"
	timg__ImagingPresetType__FlickerFree60,	///< xs:string value="FlickerFree60"
};

/// @brief Class wrapper for type enum timg__ImagingPresetType derived from xsd__anyType.
///
class timg__ImagingPresetType_ : public xsd__anyType
{ public:
    enum timg__ImagingPresetType         __item;                       
};


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsrf/bf-2                                     *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver10/schema":ReceiverReference is a simpleType restriction of type "http://www.onvif.org/ver10/schema":ReferenceToken.
///
typedef tt__ReferenceToken tt__ReceiverReference;

/// @brief Class wrapper for type tt__ReceiverReference derived from xsd__anyType.
///
class tt__ReceiverReference__ : public xsd__anyType
{ public:
    tt__ReceiverReference                __item;                       
};

/// @brief "http://www.onvif.org/ver10/schema":RecordingReference is a simpleType restriction of type "http://www.onvif.org/ver10/schema":ReferenceToken.
///
typedef tt__ReferenceToken tt__RecordingReference;

/// @brief Class wrapper for type tt__RecordingReference derived from xsd__anyType.
///
class tt__RecordingReference__ : public xsd__anyType
{ public:
    tt__RecordingReference               __item;                       
};

/// @brief "http://www.onvif.org/ver10/schema":TrackReference is a simpleType restriction of type "http://www.onvif.org/ver10/schema":ReferenceToken.
///
typedef tt__ReferenceToken tt__TrackReference;

/// @brief Class wrapper for type tt__TrackReference derived from xsd__anyType.
///
class tt__TrackReference__ : public xsd__anyType
{ public:
    tt__TrackReference                   __item;                       
};

/// @brief "http://www.onvif.org/ver10/schema":JobToken is a simpleType restriction of type "http://www.onvif.org/ver10/schema":ReferenceToken.
///
typedef tt__ReferenceToken tt__JobToken;

/// @brief Class wrapper for type tt__JobToken derived from xsd__anyType.
///
class tt__JobToken__ : public xsd__anyType
{ public:
    tt__JobToken                         __item;                       
};

/// @brief "http://www.onvif.org/ver10/schema":RecordingJobReference is a simpleType restriction of type "http://www.onvif.org/ver10/schema":ReferenceToken.
///
typedef tt__ReferenceToken tt__RecordingJobReference;

/// @brief Class wrapper for type tt__RecordingJobReference derived from xsd__anyType.
///
class tt__RecordingJobReference__ : public xsd__anyType
{ public:
    tt__RecordingJobReference            __item;                       
};


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/media/wsdl                                    *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/search/wsdl                                   *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver20/imaging/wsdl                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsrf/bf-2                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://docs.oasis-open.org/wsn/b-2                                       *
 *                                                                            *
\******************************************************************************/

/// @brief "http://docs.oasis-open.org/wsn/b-2":QueryExpressionType is a complexType.
///
class wsnt__QueryExpressionType : public xsd__anyType
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="1">
    xsd__anyType                         __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Attribute "Dialect" of type xs:anyURI.
  @ xsd__anyURI                          Dialect                        1;	///< Required attribute.
/// Mixed content.
    xsd__anyType                         __mixed                       0;	///< Store mixed content as xsd:any (by default a xsd__anyType DOM soap_dom_element linked node structure).
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":TopicExpressionType is a complexType.
///
class wsnt__TopicExpressionType : public xsd__anyType
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="1">
    xsd__anyType                         __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Attribute "Dialect" of type xs:anyURI.
  @ xsd__anyURI                          Dialect                        1;	///< Required attribute.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// Mixed content.
    xsd__anyType                         __mixed                       0;	///< Store mixed content as xsd:any (by default a xsd__anyType DOM soap_dom_element linked node structure).
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":FilterType is a complexType.
///
/// This type is extended by:
/// - "http://www.onvif.org/ver10/schema":EventFilter as tt__EventFilter
///
class wsnt__FilterType : public xsd__anyType
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":SubscriptionPolicyType is a complexType.
///
class wsnt__SubscriptionPolicyType : public xsd__anyType
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":NotificationMessageHolderType is a complexType.
///
class wsnt__NotificationMessageHolderType : public xsd__anyType
{ public:
/// Element reference "http://docs.oasis-open.org/wsn/b-2:""http://docs.oasis-open.org/wsn/b-2":SubscriptionReference.
    wsa5__EndpointReferenceType*         SubscriptionReference          0;	///< Optional element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2:""http://docs.oasis-open.org/wsn/b-2":Topic.
    wsnt__TopicExpressionType*           Topic                          0;	///< Optional element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2:""http://docs.oasis-open.org/wsn/b-2":ProducerReference.
    wsa5__EndpointReferenceType*         ProducerReference              0;	///< Optional element.
    class _wsnt__NotificationMessageHolderType_Message
    { public:
/// <any namespace="##any" minOccurs="1" maxOccurs="1">
    xsd__anyType                         __any                         0;	///< Store any element content in DOM soap_dom_element node.
    }                                    Message                        1;	///< Required element.
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":NotificationProducerRP
/// @brief "http://docs.oasis-open.org/wsn/b-2":NotificationProducerRP is a complexType.
///
class _wsnt__NotificationProducerRP
{ public:
/// Vector of wsnt__TopicExpressionType* element refs of length 0..unbounded.
    std::vector<wsnt__TopicExpressionType*> TopicExpression                0;	///< Multiple elements.
/// Element reference "http://docs.oasis-open.org/wsn/b-2:""http://docs.oasis-open.org/wsn/b-2":FixedTopicSet.
    bool*                                FixedTopicSet                  0 = true;	///< Optional element with default value="true".
/// Vector of xsd__anyURI element refs of length 0..unbounded.
    std::vector<xsd__anyURI            > TopicExpressionDialect         0;	///< Multiple elements.
/// Element reference "http://docs.oasis-open.org/wsn/b-2:""http://docs.oasis-open.org/wsn/t-1":TopicSet.
    wstop__TopicSetType*                 wstop__TopicSet                0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":SubscriptionManagerRP
/// @brief "http://docs.oasis-open.org/wsn/b-2":SubscriptionManagerRP is a complexType.
///
class _wsnt__SubscriptionManagerRP
{ public:
/// Element reference "http://docs.oasis-open.org/wsn/b-2:""http://docs.oasis-open.org/wsn/b-2":ConsumerReference.
    wsa5__EndpointReferenceType          ConsumerReference              1;	///< Required element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2:""http://docs.oasis-open.org/wsn/b-2":Filter.
    wsnt__FilterType*                    Filter                         0;	///< Optional element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2:""http://docs.oasis-open.org/wsn/b-2":SubscriptionPolicy.
    wsnt__SubscriptionPolicyType*        SubscriptionPolicy             0;	///< Optional element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2:""http://docs.oasis-open.org/wsn/b-2":CreationTime.
    xsd__dateTime*                       CreationTime                   0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":Notify
/// @brief "http://docs.oasis-open.org/wsn/b-2":Notify is a complexType.
///
class _wsnt__Notify
{ public:
/// Vector of wsnt__NotificationMessageHolderType* element refs of length 1..unbounded.
    std::vector<wsnt__NotificationMessageHolderType*> NotificationMessage            1;	///< Multiple elements.
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UseRaw
/// @brief "http://docs.oasis-open.org/wsn/b-2":UseRaw is a complexType.
///
class _wsnt__UseRaw
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":Subscribe
/// @brief "http://docs.oasis-open.org/wsn/b-2":Subscribe is a complexType.
///
class _wsnt__Subscribe
{ public:
/// Element "ConsumerReference" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType          ConsumerReference              1;	///< Required element.
/// Element "Filter" of type "http://docs.oasis-open.org/wsn/b-2":FilterType.
    wsnt__FilterType*                    Filter                         0;	///< Optional element.
/// Element "InitialTerminationTime" of type "http://docs.oasis-open.org/wsn/b-2":AbsoluteOrRelativeTimeType.
    wsnt__AbsoluteOrRelativeTimeType*    InitialTerminationTime         0;	///< Optional element.
    class _wsnt__Subscribe_SubscriptionPolicy
    { public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
    }                                   *SubscriptionPolicy             0;	///< Optional element.
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":SubscribeResponse
/// @brief "http://docs.oasis-open.org/wsn/b-2":SubscribeResponse is a complexType.
///
class _wsnt__SubscribeResponse
{ public:
/// Element "SubscriptionReference" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType          SubscriptionReference          1;	///< Required element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2:""http://docs.oasis-open.org/wsn/b-2":CurrentTime.
    xsd__dateTime*                       CurrentTime                    0;	///< Optional element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2:""http://docs.oasis-open.org/wsn/b-2":TerminationTime.
    xsd__dateTime*                       TerminationTime                0;	///< Optional element.
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":GetCurrentMessage
/// @brief "http://docs.oasis-open.org/wsn/b-2":GetCurrentMessage is a complexType.
///
class _wsnt__GetCurrentMessage
{ public:
/// Element "Topic" of type "http://docs.oasis-open.org/wsn/b-2":TopicExpressionType.
    wsnt__TopicExpressionType*           Topic                          1;	///< Required element.
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":GetCurrentMessageResponse
/// @brief "http://docs.oasis-open.org/wsn/b-2":GetCurrentMessageResponse is a complexType.
///
class _wsnt__GetCurrentMessageResponse
{ public:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":GetMessages
/// @brief "http://docs.oasis-open.org/wsn/b-2":GetMessages is a complexType.
///
class _wsnt__GetMessages
{ public:
/// Element "MaximumNumber" of type xs:nonNegativeInteger.
    xsd__nonNegativeInteger*             MaximumNumber                  0;	///< Optional element.
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":GetMessagesResponse
/// @brief "http://docs.oasis-open.org/wsn/b-2":GetMessagesResponse is a complexType.
///
class _wsnt__GetMessagesResponse
{ public:
/// Vector of wsnt__NotificationMessageHolderType* element refs of length 0..unbounded.
    std::vector<wsnt__NotificationMessageHolderType*> NotificationMessage            0;	///< Multiple elements.
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":DestroyPullPoint
/// @brief "http://docs.oasis-open.org/wsn/b-2":DestroyPullPoint is a complexType.
///
class _wsnt__DestroyPullPoint
{ public:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":DestroyPullPointResponse
/// @brief "http://docs.oasis-open.org/wsn/b-2":DestroyPullPointResponse is a complexType.
///
class _wsnt__DestroyPullPointResponse
{ public:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":CreatePullPoint
/// @brief "http://docs.oasis-open.org/wsn/b-2":CreatePullPoint is a complexType.
///
class _wsnt__CreatePullPoint
{ public:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":CreatePullPointResponse
/// @brief "http://docs.oasis-open.org/wsn/b-2":CreatePullPointResponse is a complexType.
///
class _wsnt__CreatePullPointResponse
{ public:
/// Element "PullPoint" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType          PullPoint                      1;	///< Required element.
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":Renew
/// @brief "http://docs.oasis-open.org/wsn/b-2":Renew is a complexType.
///
class _wsnt__Renew
{ public:
/// Element "TerminationTime" of type "http://docs.oasis-open.org/wsn/b-2":AbsoluteOrRelativeTimeType.
    wsnt__AbsoluteOrRelativeTimeType*    TerminationTime                nullptr 1;	///< Required nillable (xsi:nil when NULL) element.
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":RenewResponse
/// @brief "http://docs.oasis-open.org/wsn/b-2":RenewResponse is a complexType.
///
class _wsnt__RenewResponse
{ public:
/// Element reference "http://docs.oasis-open.org/wsn/b-2:""http://docs.oasis-open.org/wsn/b-2":TerminationTime.
    xsd__dateTime                        TerminationTime                1;	///< Required element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2:""http://docs.oasis-open.org/wsn/b-2":CurrentTime.
    xsd__dateTime*                       CurrentTime                    0;	///< Optional element.
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":Unsubscribe
/// @brief "http://docs.oasis-open.org/wsn/b-2":Unsubscribe is a complexType.
///
class _wsnt__Unsubscribe
{ public:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnsubscribeResponse
/// @brief "http://docs.oasis-open.org/wsn/b-2":UnsubscribeResponse is a complexType.
///
class _wsnt__UnsubscribeResponse
{ public:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":PauseSubscription
/// @brief "http://docs.oasis-open.org/wsn/b-2":PauseSubscription is a complexType.
///
class _wsnt__PauseSubscription
{ public:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":PauseSubscriptionResponse
/// @brief "http://docs.oasis-open.org/wsn/b-2":PauseSubscriptionResponse is a complexType.
///
class _wsnt__PauseSubscriptionResponse
{ public:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":ResumeSubscription
/// @brief "http://docs.oasis-open.org/wsn/b-2":ResumeSubscription is a complexType.
///
class _wsnt__ResumeSubscription
{ public:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":ResumeSubscriptionResponse
/// @brief "http://docs.oasis-open.org/wsn/b-2":ResumeSubscriptionResponse is a complexType.
///
class _wsnt__ResumeSubscriptionResponse
{ public:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://docs.oasis-open.org/wsrf/r-2                                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.onvif.org/ver10/display/wsdl                                  *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver10/display/wsdl":Capabilities is a complexType.
///
class tls__Capabilities : public xsd__anyType
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <PRE><BLOCKQUOTE>
///   Indication that the SetLayout command supports only predefined layouts.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "FixedLayout" of type xs:boolean.
  @ bool*                                FixedLayout                    0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/display/wsdl":GetServiceCapabilities
/// @brief "http://www.onvif.org/ver10/display/wsdl":GetServiceCapabilities is a complexType.
///
class _tls__GetServiceCapabilities
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/display/wsdl":GetServiceCapabilitiesResponse
/// @brief "http://www.onvif.org/ver10/display/wsdl":GetServiceCapabilitiesResponse is a complexType.
///
class _tls__GetServiceCapabilitiesResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   The capabilities for the display service is returned in the Capabilities element.
/// </BLOCKQUOTE></PRE>
///
/// Element "Capabilities" of type "http://www.onvif.org/ver10/display/wsdl":Capabilities.
    tls__Capabilities*                   Capabilities                   1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/display/wsdl":GetLayout
/// @brief "http://www.onvif.org/ver10/display/wsdl":GetLayout is a complexType.
///
class _tls__GetLayout
{ public:
/// <PRE><BLOCKQUOTE>
///   Token of the Video Output whose Layout is requested
/// </BLOCKQUOTE></PRE>
///
/// Element "VideoOutput" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   VideoOutput                    1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/display/wsdl":GetLayoutResponse
/// @brief "http://www.onvif.org/ver10/display/wsdl":GetLayoutResponse is a complexType.
///
class _tls__GetLayoutResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Current layout of the video output.
/// </BLOCKQUOTE></PRE>
///
/// Element "Layout" of type "http://www.onvif.org/ver10/schema":Layout.
    tt__Layout*                          Layout                         1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/display/wsdl":SetLayout
/// @brief "http://www.onvif.org/ver10/display/wsdl":SetLayout is a complexType.
///
class _tls__SetLayout
{ public:
/// <PRE><BLOCKQUOTE>
///   Token of the Video Output whose Layout shall be changed.
/// </BLOCKQUOTE></PRE>
///
/// Element "VideoOutput" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   VideoOutput                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Layout to be set
/// </BLOCKQUOTE></PRE>
///
/// Element "Layout" of type "http://www.onvif.org/ver10/schema":Layout.
    tt__Layout*                          Layout                         1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/display/wsdl":SetLayoutResponse
/// @brief "http://www.onvif.org/ver10/display/wsdl":SetLayoutResponse is a complexType.
///
class _tls__SetLayoutResponse
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/display/wsdl":GetDisplayOptions
/// @brief "http://www.onvif.org/ver10/display/wsdl":GetDisplayOptions is a complexType.
///
class _tls__GetDisplayOptions
{ public:
/// <PRE><BLOCKQUOTE>
///   Token of the Video Output whose options are requested
/// </BLOCKQUOTE></PRE>
///
/// Element "VideoOutput" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   VideoOutput                    1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/display/wsdl":GetDisplayOptionsResponse
/// @brief "http://www.onvif.org/ver10/display/wsdl":GetDisplayOptionsResponse is a complexType.
///
class _tls__GetDisplayOptionsResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   The LayoutOptions describe the fixed and predefined layouts of a device. If the device does
///   not offer fixed layouts and allows setting the layout free this element is empty.
/// </BLOCKQUOTE></PRE>
///
/// Element "LayoutOptions" of type "http://www.onvif.org/ver10/schema":LayoutOptions.
    tt__LayoutOptions*                   LayoutOptions                  0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   decoding and encoding capabilities of the device
/// </BLOCKQUOTE></PRE>
///
/// Element "CodingCapabilities" of type "http://www.onvif.org/ver10/schema":CodingCapabilities.
    tt__CodingCapabilities*              CodingCapabilities             1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/display/wsdl":GetPaneConfigurations
/// @brief "http://www.onvif.org/ver10/display/wsdl":GetPaneConfigurations is a complexType.
///
class _tls__GetPaneConfigurations
{ public:
/// <PRE><BLOCKQUOTE>
///   Reference Token of the Video Output whose Pane Configurations are requested
/// </BLOCKQUOTE></PRE>
///
/// Element "VideoOutput" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   VideoOutput                    1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/display/wsdl":GetPaneConfigurationsResponse
/// @brief "http://www.onvif.org/ver10/display/wsdl":GetPaneConfigurationsResponse is a complexType.
///
class _tls__GetPaneConfigurationsResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains a list of defined Panes of the specified VideoOutput. Each VideoOutput has at least one PaneConfiguration.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__PaneConfiguration* of length 1..unbounded.
    std::vector<tt__PaneConfiguration* > PaneConfiguration              1;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/display/wsdl":GetPaneConfiguration
/// @brief "http://www.onvif.org/ver10/display/wsdl":GetPaneConfiguration is a complexType.
///
class _tls__GetPaneConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Reference Token of the Video Output the requested pane belongs to
/// </BLOCKQUOTE></PRE>
///
/// Element "VideoOutput" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   VideoOutput                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Reference Token of the Pane whose Configuration is requested
/// </BLOCKQUOTE></PRE>
///
/// Element "Pane" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   Pane                           1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/display/wsdl":GetPaneConfigurationResponse
/// @brief "http://www.onvif.org/ver10/display/wsdl":GetPaneConfigurationResponse is a complexType.
///
class _tls__GetPaneConfigurationResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   returns the configuration of the requested pane.
/// </BLOCKQUOTE></PRE>
///
/// Element "PaneConfiguration" of type "http://www.onvif.org/ver10/schema":PaneConfiguration.
    tt__PaneConfiguration*               PaneConfiguration              1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/display/wsdl":SetPaneConfigurations
/// @brief "http://www.onvif.org/ver10/display/wsdl":SetPaneConfigurations is a complexType.
///
class _tls__SetPaneConfigurations
{ public:
/// <PRE><BLOCKQUOTE>
///   Token of the video output whose panes to set.
/// </BLOCKQUOTE></PRE>
///
/// Element "VideoOutput" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   VideoOutput                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Pane Configuration to be set.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__PaneConfiguration* of length 1..unbounded.
    std::vector<tt__PaneConfiguration* > PaneConfiguration              1;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/display/wsdl":SetPaneConfigurationsResponse
/// @brief "http://www.onvif.org/ver10/display/wsdl":SetPaneConfigurationsResponse is a complexType.
///
class _tls__SetPaneConfigurationsResponse
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/display/wsdl":SetPaneConfiguration
/// @brief "http://www.onvif.org/ver10/display/wsdl":SetPaneConfiguration is a complexType.
///
class _tls__SetPaneConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Token of the video output whose panes to set.
/// </BLOCKQUOTE></PRE>
///
/// Element "VideoOutput" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   VideoOutput                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Pane Configuration to be set.
/// </BLOCKQUOTE></PRE>
///
/// Element "PaneConfiguration" of type "http://www.onvif.org/ver10/schema":PaneConfiguration.
    tt__PaneConfiguration*               PaneConfiguration              1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/display/wsdl":SetPaneConfigurationResponse
/// @brief "http://www.onvif.org/ver10/display/wsdl":SetPaneConfigurationResponse is a complexType.
///
class _tls__SetPaneConfigurationResponse
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/display/wsdl":CreatePaneConfiguration
/// @brief "http://www.onvif.org/ver10/display/wsdl":CreatePaneConfiguration is a complexType.
///
class _tls__CreatePaneConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Token of the video output where the pane shall be created.
/// </BLOCKQUOTE></PRE>
///
/// Element "VideoOutput" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   VideoOutput                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Configuration of the pane to be created.
/// </BLOCKQUOTE></PRE>
///
/// Element "PaneConfiguration" of type "http://www.onvif.org/ver10/schema":PaneConfiguration.
    tt__PaneConfiguration*               PaneConfiguration              1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/display/wsdl":CreatePaneConfigurationResponse
/// @brief "http://www.onvif.org/ver10/display/wsdl":CreatePaneConfigurationResponse is a complexType.
///
class _tls__CreatePaneConfigurationResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Token of the new pane configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "PaneToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   PaneToken                      1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/display/wsdl":DeletePaneConfiguration
/// @brief "http://www.onvif.org/ver10/display/wsdl":DeletePaneConfiguration is a complexType.
///
class _tls__DeletePaneConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Token of the video output where the pane shall be deleted.
/// </BLOCKQUOTE></PRE>
///
/// Element "VideoOutput" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   VideoOutput                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token of the pane to be deleted.
/// </BLOCKQUOTE></PRE>
///
/// Element "PaneToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   PaneToken                      1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/display/wsdl":DeletePaneConfigurationResponse
/// @brief "http://www.onvif.org/ver10/display/wsdl":DeletePaneConfigurationResponse is a complexType.
///
class _tls__DeletePaneConfigurationResponse
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *                                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://docs.oasis-open.org/wsrf/rw-2                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.onvif.org/ver20/ptz/wsdl                                      *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver20/ptz/wsdl":Capabilities is a complexType.
///
class tptz__Capabilities : public xsd__anyType
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not EFlip is supported.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "EFlip" of type xs:boolean.
  @ bool*                                EFlip                          0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not reversing of PT control direction is supported.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "Reverse" of type xs:boolean.
  @ bool*                                Reverse                        0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for the GetCompatibleConfigurations command.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "GetCompatibleConfigurations" of type xs:boolean.
  @ bool*                                GetCompatibleConfigurations    0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates that the PTZVector includes MoveStatus information.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "MoveStatus" of type xs:boolean.
  @ bool*                                MoveStatus                     0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates that the PTZVector includes Position information.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "StatusPosition" of type xs:boolean.
  @ bool*                                StatusPosition                 0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetServiceCapabilities
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetServiceCapabilities is a complexType.
///
class _tptz__GetServiceCapabilities
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetServiceCapabilitiesResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetServiceCapabilitiesResponse is a complexType.
///
class _tptz__GetServiceCapabilitiesResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   The capabilities for the PTZ service is returned in the Capabilities element.
/// </BLOCKQUOTE></PRE>
///
/// Element "Capabilities" of type "http://www.onvif.org/ver20/ptz/wsdl":Capabilities.
    tptz__Capabilities*                  Capabilities                   1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetNodes
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetNodes is a complexType.
///
class _tptz__GetNodes
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetNodesResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetNodesResponse is a complexType.
///
class _tptz__GetNodesResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   A list of the existing PTZ Nodes on the device.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__PTZNode* of length 0..unbounded.
    std::vector<tt__PTZNode*           > PTZNode                        0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetNode
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetNode is a complexType.
///
class _tptz__GetNode
{ public:
/// <PRE><BLOCKQUOTE>
///   Token of the requested PTZNode.
/// </BLOCKQUOTE></PRE>
///
/// Element "NodeToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   NodeToken                      1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetNodeResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetNodeResponse is a complexType.
///
class _tptz__GetNodeResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   A requested PTZNode.
/// </BLOCKQUOTE></PRE>
///
/// Element "PTZNode" of type "http://www.onvif.org/ver10/schema":PTZNode.
    tt__PTZNode*                         PTZNode                        1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetConfigurations
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetConfigurations is a complexType.
///
class _tptz__GetConfigurations
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetConfigurationsResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetConfigurationsResponse is a complexType.
///
class _tptz__GetConfigurationsResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   A list of all existing PTZConfigurations on the device.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__PTZConfiguration* of length 0..unbounded.
    std::vector<tt__PTZConfiguration*  > PTZConfiguration               0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetConfiguration
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetConfiguration is a complexType.
///
class _tptz__GetConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Token of the requested PTZConfiguration.
/// </BLOCKQUOTE></PRE>
///
/// Element "PTZConfigurationToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   PTZConfigurationToken          1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetConfigurationResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetConfigurationResponse is a complexType.
///
class _tptz__GetConfigurationResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   A requested PTZConfiguration.
/// </BLOCKQUOTE></PRE>
///
/// Element "PTZConfiguration" of type "http://www.onvif.org/ver10/schema":PTZConfiguration.
    tt__PTZConfiguration*                PTZConfiguration               1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":SetConfiguration
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":SetConfiguration is a complexType.
///
class _tptz__SetConfiguration
{ public:

/// </BLOCKQUOTE></PRE>
///
/// Element "PTZConfiguration" of type "http://www.onvif.org/ver10/schema":PTZConfiguration.
    tt__PTZConfiguration*                PTZConfiguration               1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Flag that makes configuration persistent. Example: User wants the configuration to exist after reboot.
/// </BLOCKQUOTE></PRE>
///
/// Element "ForcePersistence" of type xs:boolean.
    bool                                 ForcePersistence               1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":SetConfigurationResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":SetConfigurationResponse is a complexType.
///
class _tptz__SetConfigurationResponse
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    struct __tptz__SetConfigurationResponse_sequence
    {
    }                                   *__SetConfigurationResponse_sequence 0;
//  END OF SEQUENCE
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetConfigurationOptions
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetConfigurationOptions is a complexType.
///
class _tptz__GetConfigurationOptions
{ public:
/// <PRE><BLOCKQUOTE>
///   Token of an existing configuration that the options are intended for.
/// </BLOCKQUOTE></PRE>
///
/// Element "ConfigurationToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetConfigurationOptionsResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetConfigurationOptionsResponse is a complexType.
///
class _tptz__GetConfigurationOptionsResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   The requested PTZ configuration options.
/// </BLOCKQUOTE></PRE>
///
/// Element "PTZConfigurationOptions" of type "http://www.onvif.org/ver10/schema":PTZConfigurationOptions.
    tt__PTZConfigurationOptions*         PTZConfigurationOptions        1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":SendAuxiliaryCommand
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":SendAuxiliaryCommand is a complexType.
///
class _tptz__SendAuxiliaryCommand
{ public:
/// <PRE><BLOCKQUOTE>
///   A reference to the MediaProfile where the operation should take place.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The Auxiliary request data.
/// </BLOCKQUOTE></PRE>
///
/// Element "AuxiliaryData" of type "http://www.onvif.org/ver10/schema":AuxiliaryData.
    tt__AuxiliaryData                    AuxiliaryData                  1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":SendAuxiliaryCommandResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":SendAuxiliaryCommandResponse is a complexType.
///
class _tptz__SendAuxiliaryCommandResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   The response contains the auxiliary response.
/// </BLOCKQUOTE></PRE>
///
/// Element "AuxiliaryResponse" of type "http://www.onvif.org/ver10/schema":AuxiliaryData.
    tt__AuxiliaryData                    AuxiliaryResponse              1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetPresets
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetPresets is a complexType.
///
class _tptz__GetPresets
{ public:
/// <PRE><BLOCKQUOTE>
///   A reference to the MediaProfile where the operation should take place.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetPresetsResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetPresetsResponse is a complexType.
///
class _tptz__GetPresetsResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   A list of presets which are available for the requested MediaProfile.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__PTZPreset* of length 0..unbounded.
    std::vector<tt__PTZPreset*         > Preset                         0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":SetPreset
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":SetPreset is a complexType.
///
class _tptz__SetPreset
{ public:
/// <PRE><BLOCKQUOTE>
///   A reference to the MediaProfile where the operation should take place.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A requested preset name.
/// </BLOCKQUOTE></PRE>
///
/// Element "PresetName" of type xs:string.
    std::string*                         PresetName                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   A requested preset token.
/// </BLOCKQUOTE></PRE>
///
/// Element "PresetToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken*                  PresetToken                    0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":SetPresetResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":SetPresetResponse is a complexType.
///
class _tptz__SetPresetResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   A token to the Preset which has been set.
/// </BLOCKQUOTE></PRE>
///
/// Element "PresetToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   PresetToken                    1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":RemovePreset
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":RemovePreset is a complexType.
///
class _tptz__RemovePreset
{ public:
/// <PRE><BLOCKQUOTE>
///   A reference to the MediaProfile where the operation should take place.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A requested preset token.
/// </BLOCKQUOTE></PRE>
///
/// Element "PresetToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   PresetToken                    1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":RemovePresetResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":RemovePresetResponse is a complexType.
///
class _tptz__RemovePresetResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GotoPreset
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GotoPreset is a complexType.
///
class _tptz__GotoPreset
{ public:
/// <PRE><BLOCKQUOTE>
///   A reference to the MediaProfile where the operation should take place.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A requested preset token.
/// </BLOCKQUOTE></PRE>
///
/// Element "PresetToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   PresetToken                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A requested speed.The speed parameter can only be specified when Speed Spaces are available for the PTZ Node.
/// </BLOCKQUOTE></PRE>
///
/// Element "Speed" of type "http://www.onvif.org/ver10/schema":PTZSpeed.
    tt__PTZSpeed*                        Speed                          0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GotoPresetResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GotoPresetResponse is a complexType.
///
class _tptz__GotoPresetResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetStatus
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetStatus is a complexType.
///
class _tptz__GetStatus
{ public:
/// <PRE><BLOCKQUOTE>
///   A reference to the MediaProfile where the PTZStatus should be requested.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetStatusResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetStatusResponse is a complexType.
///
class _tptz__GetStatusResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   The PTZStatus for the requested MediaProfile.
/// </BLOCKQUOTE></PRE>
///
/// Element "PTZStatus" of type "http://www.onvif.org/ver10/schema":PTZStatus.
    tt__PTZStatus*                       PTZStatus                      1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GotoHomePosition
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GotoHomePosition is a complexType.
///
class _tptz__GotoHomePosition
{ public:
/// <PRE><BLOCKQUOTE>
///   A reference to the MediaProfile where the operation should take place.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A requested speed.The speed parameter can only be specified when Speed Spaces are available for the PTZ Node.
/// </BLOCKQUOTE></PRE>
///
/// Element "Speed" of type "http://www.onvif.org/ver10/schema":PTZSpeed.
    tt__PTZSpeed*                        Speed                          0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GotoHomePositionResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GotoHomePositionResponse is a complexType.
///
class _tptz__GotoHomePositionResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":SetHomePosition
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":SetHomePosition is a complexType.
///
class _tptz__SetHomePosition
{ public:
/// <PRE><BLOCKQUOTE>
///   A reference to the MediaProfile where the home position should be set.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":SetHomePositionResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":SetHomePositionResponse is a complexType.
///
class _tptz__SetHomePositionResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":ContinuousMove
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":ContinuousMove is a complexType.
///
class _tptz__ContinuousMove
{ public:
/// <PRE><BLOCKQUOTE>
///   A reference to the MediaProfile.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A Velocity vector specifying the velocity of pan, tilt and zoom.
/// </BLOCKQUOTE></PRE>
///
/// Element "Velocity" of type "http://www.onvif.org/ver10/schema":PTZSpeed.
    tt__PTZSpeed*                        Velocity                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   An optional Timeout parameter.
/// </BLOCKQUOTE></PRE>
///
/// Element "Timeout" of type xs:duration.
    xsd__duration*                       Timeout                        0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":ContinuousMoveResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":ContinuousMoveResponse is a complexType.
///
class _tptz__ContinuousMoveResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":RelativeMove
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":RelativeMove is a complexType.
///
class _tptz__RelativeMove
{ public:
/// <PRE><BLOCKQUOTE>
///   A reference to the MediaProfile.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A positional Translation relative to the current position
/// </BLOCKQUOTE></PRE>
///
/// Element "Translation" of type "http://www.onvif.org/ver10/schema":PTZVector.
    tt__PTZVector*                       Translation                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   An optional Speed parameter.
/// </BLOCKQUOTE></PRE>
///
/// Element "Speed" of type "http://www.onvif.org/ver10/schema":PTZSpeed.
    tt__PTZSpeed*                        Speed                          0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":RelativeMoveResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":RelativeMoveResponse is a complexType.
///
class _tptz__RelativeMoveResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":AbsoluteMove
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":AbsoluteMove is a complexType.
///
class _tptz__AbsoluteMove
{ public:
/// <PRE><BLOCKQUOTE>
///   A reference to the MediaProfile.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A Position vector specifying the absolute target position.
/// </BLOCKQUOTE></PRE>
///
/// Element "Position" of type "http://www.onvif.org/ver10/schema":PTZVector.
    tt__PTZVector*                       Position                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   An optional Speed.
/// </BLOCKQUOTE></PRE>
///
/// Element "Speed" of type "http://www.onvif.org/ver10/schema":PTZSpeed.
    tt__PTZSpeed*                        Speed                          0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":AbsoluteMoveResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":AbsoluteMoveResponse is a complexType.
///
class _tptz__AbsoluteMoveResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":Stop
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":Stop is a complexType.
///
class _tptz__Stop
{ public:
/// <PRE><BLOCKQUOTE>
///   A reference to the MediaProfile that indicate what should be stopped.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Set true when we want to stop ongoing pan and tilt movements.If PanTilt arguments are not present, this command stops these movements.
/// </BLOCKQUOTE></PRE>
///
/// Element "PanTilt" of type xs:boolean.
    bool*                                PanTilt                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Set true when we want to stop ongoing zoom movement.If Zoom arguments are not present, this command stops ongoing zoom movement.
/// </BLOCKQUOTE></PRE>
///
/// Element "Zoom" of type xs:boolean.
    bool*                                Zoom                           0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":StopResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":StopResponse is a complexType.
///
class _tptz__StopResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetPresetTours
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetPresetTours is a complexType.
///
class _tptz__GetPresetTours
{ public:
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetPresetToursResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetPresetToursResponse is a complexType.
///
class _tptz__GetPresetToursResponse
{ public:
/// Vector of tt__PresetTour* of length 0..unbounded.
    std::vector<tt__PresetTour*        > PresetTour                     0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetPresetTour
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetPresetTour is a complexType.
///
class _tptz__GetPresetTour
{ public:
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// Element "PresetTourToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   PresetTourToken                1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetPresetTourResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetPresetTourResponse is a complexType.
///
class _tptz__GetPresetTourResponse
{ public:
/// Element "PresetTour" of type "http://www.onvif.org/ver10/schema":PresetTour.
    tt__PresetTour*                      PresetTour                     1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetPresetTourOptions
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetPresetTourOptions is a complexType.
///
class _tptz__GetPresetTourOptions
{ public:
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// Element "PresetTourToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken*                  PresetTourToken                0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetPresetTourOptionsResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetPresetTourOptionsResponse is a complexType.
///
class _tptz__GetPresetTourOptionsResponse
{ public:
/// Element "Options" of type "http://www.onvif.org/ver10/schema":PTZPresetTourOptions.
    tt__PTZPresetTourOptions*            Options                        1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":CreatePresetTour
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":CreatePresetTour is a complexType.
///
class _tptz__CreatePresetTour
{ public:
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":CreatePresetTourResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":CreatePresetTourResponse is a complexType.
///
class _tptz__CreatePresetTourResponse
{ public:
/// Element "PresetTourToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   PresetTourToken                1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":ModifyPresetTour
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":ModifyPresetTour is a complexType.
///
class _tptz__ModifyPresetTour
{ public:
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// Element "PresetTour" of type "http://www.onvif.org/ver10/schema":PresetTour.
    tt__PresetTour*                      PresetTour                     1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":ModifyPresetTourResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":ModifyPresetTourResponse is a complexType.
///
class _tptz__ModifyPresetTourResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":OperatePresetTour
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":OperatePresetTour is a complexType.
///
class _tptz__OperatePresetTour
{ public:
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// Element "PresetTourToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   PresetTourToken                1;	///< Required element.
/// Element "Operation" of type "http://www.onvif.org/ver10/schema":PTZPresetTourOperation.
    enum tt__PTZPresetTourOperation      Operation                      1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":OperatePresetTourResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":OperatePresetTourResponse is a complexType.
///
class _tptz__OperatePresetTourResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":RemovePresetTour
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":RemovePresetTour is a complexType.
///
class _tptz__RemovePresetTour
{ public:
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// Element "PresetTourToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   PresetTourToken                1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":RemovePresetTourResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":RemovePresetTourResponse is a complexType.
///
class _tptz__RemovePresetTourResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetCompatibleConfigurations
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetCompatibleConfigurations is a complexType.
///
class _tptz__GetCompatibleConfigurations
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains the token of an existing media profile the configurations shall be compatible with.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetCompatibleConfigurationsResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetCompatibleConfigurationsResponse is a complexType.
///
class _tptz__GetCompatibleConfigurationsResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   A list of all existing PTZConfigurations on the NVT that is suitable to be added to the addressed media profile.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__PTZConfiguration* of length 0..unbounded.
    std::vector<tt__PTZConfiguration*  > PTZConfiguration               0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.onvif.org/ver10/replay/wsdl                                   *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver10/replay/wsdl":Capabilities is a complexType.
///
class trp__Capabilities : public xsd__anyType
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <PRE><BLOCKQUOTE>
///   Indicator that the Device supports reverse playback as defined in the ONVIF Streaming Specification.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "ReversePlayback" of type xs:boolean.
  @ bool                                 ReversePlayback                0 = 0;	///< Optional attribute with default value="0".
/// <PRE><BLOCKQUOTE>
///   The list contains two elements defining the minimum and maximum valid values supported as session timeout in seconds.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "SessionTimeoutRange" of type "http://www.onvif.org/ver10/schema":FloatAttrList.
  @ tt__FloatAttrList*                   SessionTimeoutRange            0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for RTP/RTSP/TCP.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "RTP_RTSP_TCP" of type xs:boolean.
  @ bool*                                RTP_USCORERTSP_USCORETCP       0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/replay/wsdl":GetServiceCapabilities
/// @brief "http://www.onvif.org/ver10/replay/wsdl":GetServiceCapabilities is a complexType.
///
class _trp__GetServiceCapabilities
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/replay/wsdl":GetServiceCapabilitiesResponse
/// @brief "http://www.onvif.org/ver10/replay/wsdl":GetServiceCapabilitiesResponse is a complexType.
///
class _trp__GetServiceCapabilitiesResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   The capabilities for the replay service is returned in the Capabilities element.
/// </BLOCKQUOTE></PRE>
///
/// Element "Capabilities" of type "http://www.onvif.org/ver10/replay/wsdl":Capabilities.
    trp__Capabilities*                   Capabilities                   1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/replay/wsdl":GetReplayUri
/// @brief "http://www.onvif.org/ver10/replay/wsdl":GetReplayUri is a complexType.
///
class _trp__GetReplayUri
{ public:
/// <PRE><BLOCKQUOTE>
///   Specifies the connection parameters to be used for the stream. The URI that is returned may depend on these parameters.
/// </BLOCKQUOTE></PRE>
///
/// Element "StreamSetup" of type "http://www.onvif.org/ver10/schema":StreamSetup.
    tt__StreamSetup*                     StreamSetup                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The identifier of the recording to be streamed.
/// </BLOCKQUOTE></PRE>
///
/// Element "RecordingToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   RecordingToken                 1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/replay/wsdl":GetReplayUriResponse
/// @brief "http://www.onvif.org/ver10/replay/wsdl":GetReplayUriResponse is a complexType.
///
class _trp__GetReplayUriResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   The URI to which the client should connect in order to stream the recording.
/// </BLOCKQUOTE></PRE>
///
/// Element "Uri" of type xs:anyURI.
    xsd__anyURI                          Uri                            1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/replay/wsdl":SetReplayConfiguration
/// @brief "http://www.onvif.org/ver10/replay/wsdl":SetReplayConfiguration is a complexType.
///
class _trp__SetReplayConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Description of the new replay configuration parameters.
/// </BLOCKQUOTE></PRE>
///
/// Element "Configuration" of type "http://www.onvif.org/ver10/schema":ReplayConfiguration.
    tt__ReplayConfiguration*             Configuration                  1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/replay/wsdl":SetReplayConfigurationResponse
/// @brief "http://www.onvif.org/ver10/replay/wsdl":SetReplayConfigurationResponse is a complexType.
///
class _trp__SetReplayConfigurationResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/replay/wsdl":GetReplayConfiguration
/// @brief "http://www.onvif.org/ver10/replay/wsdl":GetReplayConfiguration is a complexType.
///
class _trp__GetReplayConfiguration
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/replay/wsdl":GetReplayConfigurationResponse
/// @brief "http://www.onvif.org/ver10/replay/wsdl":GetReplayConfigurationResponse is a complexType.
///
class _trp__GetReplayConfigurationResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   The current replay configuration parameters.
/// </BLOCKQUOTE></PRE>
///
/// Element "Configuration" of type "http://www.onvif.org/ver10/schema":ReplayConfiguration.
    tt__ReplayConfiguration*             Configuration                  1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.onvif.org/ver10/device/wsdl                                   *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver10/device/wsdl":Service is a complexType.
///
class tds__Service : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Namespace of the service being described. This parameter allows to match the service capabilities to the service. Note that only one set of capabilities is supported per namespace.
/// </BLOCKQUOTE></PRE>
///
/// Element "Namespace" of type xs:anyURI.
    xsd__anyURI                          Namespace                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The transport addresses where the service can be reached. The scheme and IP part shall match the one used in the request (i.e. the GetServices request).
/// </BLOCKQUOTE></PRE>
///
/// Element "XAddr" of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
    class _tds__Service_Capabilities
    { public:
/// <any namespace="##any">
    xsd__anyType                         __any                         0;	///< Store any element content in DOM soap_dom_element node.
    }                                   *Capabilities                   0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The version of the service (not the ONVIF core spec version).
/// </BLOCKQUOTE></PRE>
///
/// Element "Version" of type "http://www.onvif.org/ver10/schema":OnvifVersion.
    tt__OnvifVersion*                    Version                        1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/device/wsdl":DeviceServiceCapabilities is a complexType.
///
class tds__DeviceServiceCapabilities : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Network capabilities.
/// </BLOCKQUOTE></PRE>
///
/// Element "Network" of type "http://www.onvif.org/ver10/device/wsdl":NetworkCapabilities.
    tds__NetworkCapabilities*            Network                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Security capabilities.
/// </BLOCKQUOTE></PRE>
///
/// Element "Security" of type "http://www.onvif.org/ver10/device/wsdl":SecurityCapabilities.
    tds__SecurityCapabilities*           Security                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   System capabilities.
/// </BLOCKQUOTE></PRE>
///
/// Element "System" of type "http://www.onvif.org/ver10/device/wsdl":SystemCapabilities.
    tds__SystemCapabilities*             System                         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Capabilities that do not fit in any of the other categories.
/// </BLOCKQUOTE></PRE>
///
/// Element "Misc" of type "http://www.onvif.org/ver10/device/wsdl":MiscCapabilities.
    tds__MiscCapabilities*               Misc                           0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/device/wsdl":NetworkCapabilities is a complexType.
///
class tds__NetworkCapabilities : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicates support for IP filtering.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "IPFilter" of type xs:boolean.
  @ bool*                                IPFilter                       0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for zeroconf.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "ZeroConfiguration" of type xs:boolean.
  @ bool*                                ZeroConfiguration              0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for IPv6.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "IPVersion6" of type xs:boolean.
  @ bool*                                IPVersion6                     0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for dynamic DNS configuration.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "DynDNS" of type xs:boolean.
  @ bool*                                DynDNS                         0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for IEEE 802.11 configuration.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "Dot11Configuration" of type xs:boolean.
  @ bool*                                Dot11Configuration             0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates the maximum number of Dot1X configurations supported by the device
/// </BLOCKQUOTE></PRE>
///
/// Attribute "Dot1XConfigurations" of type xs:int.
  @ int*                                 Dot1XConfigurations            0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for retrieval of hostname from DHCP.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "HostnameFromDHCP" of type xs:boolean.
  @ bool*                                HostnameFromDHCP               0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Maximum number of NTP servers supported by the devices SetNTP command.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "NTP" of type xs:int.
  @ int*                                 NTP                            0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for Stateful IPv6 DHCP.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "DHCPv6" of type xs:boolean.
  @ bool*                                DHCPv6                         0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/device/wsdl":SecurityCapabilities is a complexType.
///
class tds__SecurityCapabilities : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicates support for TLS 1.0.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "TLS1.0" of type xs:boolean.
  @ bool*                                TLS1_x002e0                    0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for TLS 1.1.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "TLS1.1" of type xs:boolean.
  @ bool*                                TLS1_x002e1                    0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for TLS 1.2.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "TLS1.2" of type xs:boolean.
  @ bool*                                TLS1_x002e2                    0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for onboard key generation.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "OnboardKeyGeneration" of type xs:boolean.
  @ bool*                                OnboardKeyGeneration           0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for access policy configuration.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "AccessPolicyConfig" of type xs:boolean.
  @ bool*                                AccessPolicyConfig             0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for the ONVIF default access policy.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "DefaultAccessPolicy" of type xs:boolean.
  @ bool*                                DefaultAccessPolicy            0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for IEEE 802.1X configuration.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "Dot1X" of type xs:boolean.
  @ bool*                                Dot1X                          0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for remote user configuration. Used when accessing another device.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "RemoteUserHandling" of type xs:boolean.
  @ bool*                                RemoteUserHandling             0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for WS-Security X.509 token.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "X.509Token" of type xs:boolean.
  @ bool*                                X_x002e509Token                0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for WS-Security SAML token.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "SAMLToken" of type xs:boolean.
  @ bool*                                SAMLToken                      0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for WS-Security Kerberos token.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "KerberosToken" of type xs:boolean.
  @ bool*                                KerberosToken                  0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for WS-Security Username token.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "UsernameToken" of type xs:boolean.
  @ bool*                                UsernameToken                  0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for WS over HTTP digest authenticated communication layer.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "HttpDigest" of type xs:boolean.
  @ bool*                                HttpDigest                     0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for WS-Security REL token.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "RELToken" of type xs:boolean.
  @ bool*                                RELToken                       0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   EAP Methods supported by the device. The int values refer to the <a href="http://www.iana.org/assignments/eap-numbers/eap-numbers.xhtml">IANA EAP Registry</a>.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "SupportedEAPMethods" of type "http://www.onvif.org/ver10/device/wsdl":EAPMethodTypes.
  @ tds__EAPMethodTypes*                 SupportedEAPMethods            0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   The maximum number of users that the device supports.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "MaxUsers" of type xs:int.
  @ int*                                 MaxUsers                       0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Maximum number of characters supported for the username by CreateUsers.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "MaxUserNameLength" of type xs:int.
  @ int*                                 MaxUserNameLength              0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Maximum number of characters supported for the password by CreateUsers and SetUser.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "MaxPasswordLength" of type xs:int.
  @ int*                                 MaxPasswordLength              0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/device/wsdl":SystemCapabilities is a complexType.
///
class tds__SystemCapabilities : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicates support for WS Discovery resolve requests.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "DiscoveryResolve" of type xs:boolean.
  @ bool*                                DiscoveryResolve               0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for WS-Discovery Bye.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "DiscoveryBye" of type xs:boolean.
  @ bool*                                DiscoveryBye                   0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for remote discovery.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "RemoteDiscovery" of type xs:boolean.
  @ bool*                                RemoteDiscovery                0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for system backup through MTOM.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "SystemBackup" of type xs:boolean.
  @ bool*                                SystemBackup                   0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for retrieval of system logging through MTOM.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "SystemLogging" of type xs:boolean.
  @ bool*                                SystemLogging                  0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for firmware upgrade through MTOM.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "FirmwareUpgrade" of type xs:boolean.
  @ bool*                                FirmwareUpgrade                0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for firmware upgrade through HTTP.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "HttpFirmwareUpgrade" of type xs:boolean.
  @ bool*                                HttpFirmwareUpgrade            0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for system backup through HTTP.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "HttpSystemBackup" of type xs:boolean.
  @ bool*                                HttpSystemBackup               0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for retrieval of system logging through HTTP.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "HttpSystemLogging" of type xs:boolean.
  @ bool*                                HttpSystemLogging              0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for retrieving support information through HTTP.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "HttpSupportInformation" of type xs:boolean.
  @ bool*                                HttpSupportInformation         0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for storage configuration interfaces.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "StorageConfiguration" of type xs:boolean.
  @ bool*                                StorageConfiguration           0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates maximum number of storage configurations supported.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "MaxStorageConfigurations" of type xs:int.
  @ int*                                 MaxStorageConfigurations       0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   If present signals support for geo location. The value signals the supported number of entries.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "GeoLocationEntries" of type xs:int.
  @ int*                                 GeoLocationEntries             0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   List of supported automatic GeoLocation adjustment supported by the device. Valid items are defined by tds:AutoGeoMode.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "AutoGeo" of type "http://www.onvif.org/ver10/schema":StringAttrList.
  @ tt__StringAttrList*                  AutoGeo                        0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Enumerates the supported StorageTypes, see tds:StorageType.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "StorageTypesSupported" of type "http://www.onvif.org/ver10/schema":StringAttrList.
  @ tt__StringAttrList*                  StorageTypesSupported          0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/device/wsdl":MiscCapabilities is a complexType.
///
class tds__MiscCapabilities : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Lists of commands supported by SendAuxiliaryCommand.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "AuxiliaryCommands" of type "http://www.onvif.org/ver10/schema":StringAttrList.
  @ tt__StringAttrList*                  AuxiliaryCommands              0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/device/wsdl":UserCredential is a complexType.
///
class tds__UserCredential : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   User name
/// </BLOCKQUOTE></PRE>
///
/// Element "UserName" of type xs:string.
    std::string                          UserName                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   optional password
/// </BLOCKQUOTE></PRE>
///
/// Element "Password" of type xs:string.
    std::string*                         Password                       0;	///< Optional element.
    class _tds__UserCredential_Extension
    { public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
    }                                   *Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/device/wsdl":StorageConfigurationData is a complexType.
///
class tds__StorageConfigurationData : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   local path
/// </BLOCKQUOTE></PRE>
///
/// Element "LocalPath" of type xs:anyURI.
    xsd__anyURI*                         LocalPath                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Storage server address
/// </BLOCKQUOTE></PRE>
///
/// Element "StorageUri" of type xs:anyURI.
    xsd__anyURI*                         StorageUri                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   User credential for the storage server
/// </BLOCKQUOTE></PRE>
///
/// Element "User" of type "http://www.onvif.org/ver10/device/wsdl":UserCredential.
    tds__UserCredential*                 User                           0;	///< Optional element.
    class _tds__StorageConfigurationData_Extension
    { public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
    }                                   *Extension                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   StorageType lists the acceptable values for type attribute
/// </BLOCKQUOTE></PRE>
///
/// Attribute "type" of type xs:string.
  @ std::string                          type                           1;	///< Required attribute.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetServices
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetServices is a complexType.
///
class _tds__GetServices
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicates if the service capabilities (untyped) should be included in the response.
/// </BLOCKQUOTE></PRE>
///
/// Element "IncludeCapability" of type xs:boolean.
    bool                                 IncludeCapability              1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetServicesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetServicesResponse is a complexType.
///
class _tds__GetServicesResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Each Service element contains information about one service.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tds__Service* of length 1..unbounded.
    std::vector<tds__Service*          > Service                        1;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetServiceCapabilities
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetServiceCapabilities is a complexType.
///
class _tds__GetServiceCapabilities
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetServiceCapabilitiesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetServiceCapabilitiesResponse is a complexType.
///
class _tds__GetServiceCapabilitiesResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   The capabilities for the device service is returned in the Capabilities element.
/// </BLOCKQUOTE></PRE>
///
/// Element "Capabilities" of type "http://www.onvif.org/ver10/device/wsdl":DeviceServiceCapabilities.
    tds__DeviceServiceCapabilities*      Capabilities                   1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDeviceInformation
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDeviceInformation is a complexType.
///
class _tds__GetDeviceInformation
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDeviceInformationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDeviceInformationResponse is a complexType.
///
class _tds__GetDeviceInformationResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   The manufactor of the device.
/// </BLOCKQUOTE></PRE>
///
/// Element "Manufacturer" of type xs:string.
    std::string                          Manufacturer                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The device model.
/// </BLOCKQUOTE></PRE>
///
/// Element "Model" of type xs:string.
    std::string                          Model                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The firmware version in the device.
/// </BLOCKQUOTE></PRE>
///
/// Element "FirmwareVersion" of type xs:string.
    std::string                          FirmwareVersion                1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The serial number of the device.
/// </BLOCKQUOTE></PRE>
///
/// Element "SerialNumber" of type xs:string.
    std::string                          SerialNumber                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The hardware ID of the device.
/// </BLOCKQUOTE></PRE>
///
/// Element "HardwareId" of type xs:string.
    std::string                          HardwareId                     1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetSystemDateAndTime
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetSystemDateAndTime is a complexType.
///
class _tds__SetSystemDateAndTime
{ public:
/// <PRE><BLOCKQUOTE>
///   Defines if the date and time is set via NTP or manually.
/// </BLOCKQUOTE></PRE>
///
/// Element "DateTimeType" of type "http://www.onvif.org/ver10/schema":SetDateTimeType.
    enum tt__SetDateTimeType             DateTimeType                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Automatically adjust Daylight savings if defined in TimeZone.
/// </BLOCKQUOTE></PRE>
///
/// Element "DaylightSavings" of type xs:boolean.
    bool                                 DaylightSavings                1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The time zone in POSIX 1003.1 format
/// </BLOCKQUOTE></PRE>
///
/// Element "TimeZone" of type "http://www.onvif.org/ver10/schema":TimeZone.
    tt__TimeZone*                        TimeZone                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Date and time in UTC. If time is obtained via NTP, UTCDateTime has no meaning
/// </BLOCKQUOTE></PRE>
///
/// Element "UTCDateTime" of type "http://www.onvif.org/ver10/schema":DateTime.
    tt__DateTime*                        UTCDateTime                    0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetSystemDateAndTimeResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetSystemDateAndTimeResponse is a complexType.
///
class _tds__SetSystemDateAndTimeResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetSystemDateAndTime
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetSystemDateAndTime is a complexType.
///
class _tds__GetSystemDateAndTime
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetSystemDateAndTimeResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetSystemDateAndTimeResponse is a complexType.
///
class _tds__GetSystemDateAndTimeResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains information whether system date and time are set manually or by NTP, daylight savings is on or off, time zone in POSIX 1003.1 format and system date and time in UTC and also local system date and time.
/// </BLOCKQUOTE></PRE>
///
/// Element "SystemDateAndTime" of type "http://www.onvif.org/ver10/schema":SystemDateTime.
    tt__SystemDateTime*                  SystemDateAndTime              1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetSystemFactoryDefault
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetSystemFactoryDefault is a complexType.
///
class _tds__SetSystemFactoryDefault
{ public:
/// <PRE><BLOCKQUOTE>
///   Specifies the factory default action type.
/// </BLOCKQUOTE></PRE>
///
/// Element "FactoryDefault" of type "http://www.onvif.org/ver10/schema":FactoryDefaultType.
    enum tt__FactoryDefaultType          FactoryDefault                 1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetSystemFactoryDefaultResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetSystemFactoryDefaultResponse is a complexType.
///
class _tds__SetSystemFactoryDefaultResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":UpgradeSystemFirmware
/// @brief "http://www.onvif.org/ver10/device/wsdl":UpgradeSystemFirmware is a complexType.
///
class _tds__UpgradeSystemFirmware
{ public:
/// Element "Firmware" of type "http://www.onvif.org/ver10/schema":AttachmentData.
    tt__AttachmentData*                  Firmware                       1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":UpgradeSystemFirmwareResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":UpgradeSystemFirmwareResponse is a complexType.
///
class _tds__UpgradeSystemFirmwareResponse
{ public:
/// Element "Message" of type xs:string.
    std::string*                         Message                        0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SystemReboot
/// @brief "http://www.onvif.org/ver10/device/wsdl":SystemReboot is a complexType.
///
class _tds__SystemReboot
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SystemRebootResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SystemRebootResponse is a complexType.
///
class _tds__SystemRebootResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains the reboot message sent by the device.
/// </BLOCKQUOTE></PRE>
///
/// Element "Message" of type xs:string.
    std::string                          Message                        1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":RestoreSystem
/// @brief "http://www.onvif.org/ver10/device/wsdl":RestoreSystem is a complexType.
///
class _tds__RestoreSystem
{ public:
/// Vector of tt__BackupFile* of length 1..unbounded.
    std::vector<tt__BackupFile*        > BackupFiles                    1;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":RestoreSystemResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":RestoreSystemResponse is a complexType.
///
class _tds__RestoreSystemResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetSystemBackup
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetSystemBackup is a complexType.
///
class _tds__GetSystemBackup
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetSystemBackupResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetSystemBackupResponse is a complexType.
///
class _tds__GetSystemBackupResponse
{ public:
/// Vector of tt__BackupFile* of length 1..unbounded.
    std::vector<tt__BackupFile*        > BackupFiles                    1;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetSystemSupportInformation
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetSystemSupportInformation is a complexType.
///
class _tds__GetSystemSupportInformation
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetSystemSupportInformationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetSystemSupportInformationResponse is a complexType.
///
class _tds__GetSystemSupportInformationResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains the arbitary device diagnostics information.
/// </BLOCKQUOTE></PRE>
///
/// Element "SupportInformation" of type "http://www.onvif.org/ver10/schema":SupportInformation.
    tt__SupportInformation*              SupportInformation             1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetSystemLog
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetSystemLog is a complexType.
///
class _tds__GetSystemLog
{ public:
/// <PRE><BLOCKQUOTE>
///   Specifies the type of system log to get.
/// </BLOCKQUOTE></PRE>
///
/// Element "LogType" of type "http://www.onvif.org/ver10/schema":SystemLogType.
    enum tt__SystemLogType               LogType                        1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetSystemLogResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetSystemLogResponse is a complexType.
///
class _tds__GetSystemLogResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains the system log information.
/// </BLOCKQUOTE></PRE>
///
/// Element "SystemLog" of type "http://www.onvif.org/ver10/schema":SystemLog.
    tt__SystemLog*                       SystemLog                      1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetScopes
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetScopes is a complexType.
///
class _tds__GetScopes
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetScopesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetScopesResponse is a complexType.
///
class _tds__GetScopesResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains a list of URI definining the device scopes. Scope parameters can be of two types: fixed and configurable. Fixed parameters can not be altered.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__Scope* of length 1..unbounded.
    std::vector<tt__Scope*             > Scopes                         1;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetScopes
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetScopes is a complexType.
///
class _tds__SetScopes
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains a list of scope parameters that will replace all existing configurable scope parameters.
/// </BLOCKQUOTE></PRE>
///
/// Vector of xsd__anyURI of length 1..unbounded.
    std::vector<xsd__anyURI            > Scopes                         1;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetScopesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetScopesResponse is a complexType.
///
class _tds__SetScopesResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":AddScopes
/// @brief "http://www.onvif.org/ver10/device/wsdl":AddScopes is a complexType.
///
class _tds__AddScopes
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains a list of new configurable scope parameters that will be added to the existing configurable scope.
/// </BLOCKQUOTE></PRE>
///
/// Vector of xsd__anyURI of length 1..unbounded.
    std::vector<xsd__anyURI            > ScopeItem                      1;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":AddScopesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":AddScopesResponse is a complexType.
///
class _tds__AddScopesResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":RemoveScopes
/// @brief "http://www.onvif.org/ver10/device/wsdl":RemoveScopes is a complexType.
///
class _tds__RemoveScopes
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains a list of URIs that should be removed from the device scope.<br/>
///   Note that the response message always will match the request or an error will be returned. The use of the response is for that reason deprecated.
/// </BLOCKQUOTE></PRE>
///
/// Vector of xsd__anyURI of length 1..unbounded.
    std::vector<xsd__anyURI            > ScopeItem                      1;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":RemoveScopesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":RemoveScopesResponse is a complexType.
///
class _tds__RemoveScopesResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains a list of URIs that has been removed from the device scope
/// </BLOCKQUOTE></PRE>
///
/// Vector of xsd__anyURI of length 0..unbounded.
    std::vector<xsd__anyURI            > ScopeItem                      0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDiscoveryMode
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDiscoveryMode is a complexType.
///
class _tds__GetDiscoveryMode
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDiscoveryModeResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDiscoveryModeResponse is a complexType.
///
class _tds__GetDiscoveryModeResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicator of discovery mode: Discoverable, NonDiscoverable.
/// </BLOCKQUOTE></PRE>
///
/// Element "DiscoveryMode" of type "http://www.onvif.org/ver10/schema":DiscoveryMode.
    enum tt__DiscoveryMode               DiscoveryMode                  1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetDiscoveryMode
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetDiscoveryMode is a complexType.
///
class _tds__SetDiscoveryMode
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicator of discovery mode: Discoverable, NonDiscoverable.
/// </BLOCKQUOTE></PRE>
///
/// Element "DiscoveryMode" of type "http://www.onvif.org/ver10/schema":DiscoveryMode.
    enum tt__DiscoveryMode               DiscoveryMode                  1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetDiscoveryModeResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetDiscoveryModeResponse is a complexType.
///
class _tds__SetDiscoveryModeResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetRemoteDiscoveryMode
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetRemoteDiscoveryMode is a complexType.
///
class _tds__GetRemoteDiscoveryMode
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetRemoteDiscoveryModeResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetRemoteDiscoveryModeResponse is a complexType.
///
class _tds__GetRemoteDiscoveryModeResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicator of discovery mode: Discoverable, NonDiscoverable.
/// </BLOCKQUOTE></PRE>
///
/// Element "RemoteDiscoveryMode" of type "http://www.onvif.org/ver10/schema":DiscoveryMode.
    enum tt__DiscoveryMode               RemoteDiscoveryMode            1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetRemoteDiscoveryMode
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetRemoteDiscoveryMode is a complexType.
///
class _tds__SetRemoteDiscoveryMode
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicator of discovery mode: Discoverable, NonDiscoverable.
/// </BLOCKQUOTE></PRE>
///
/// Element "RemoteDiscoveryMode" of type "http://www.onvif.org/ver10/schema":DiscoveryMode.
    enum tt__DiscoveryMode               RemoteDiscoveryMode            1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetRemoteDiscoveryModeResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetRemoteDiscoveryModeResponse is a complexType.
///
class _tds__SetRemoteDiscoveryModeResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDPAddresses
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDPAddresses is a complexType.
///
class _tds__GetDPAddresses
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDPAddressesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDPAddressesResponse is a complexType.
///
class _tds__GetDPAddressesResponse
{ public:
/// Vector of tt__NetworkHost* of length 0..unbounded.
    std::vector<tt__NetworkHost*       > DPAddress                      0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetDPAddresses
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetDPAddresses is a complexType.
///
class _tds__SetDPAddresses
{ public:
/// Vector of tt__NetworkHost* of length 0..unbounded.
    std::vector<tt__NetworkHost*       > DPAddress                      0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetDPAddressesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetDPAddressesResponse is a complexType.
///
class _tds__SetDPAddressesResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetEndpointReference
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetEndpointReference is a complexType.
///
class _tds__GetEndpointReference
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetEndpointReferenceResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetEndpointReferenceResponse is a complexType.
///
class _tds__GetEndpointReferenceResponse
{ public:
/// Element "GUID" of type xs:string.
    std::string                          GUID                           1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetRemoteUser
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetRemoteUser is a complexType.
///
class _tds__GetRemoteUser
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetRemoteUserResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetRemoteUserResponse is a complexType.
///
class _tds__GetRemoteUserResponse
{ public:
/// Element "RemoteUser" of type "http://www.onvif.org/ver10/schema":RemoteUser.
    tt__RemoteUser*                      RemoteUser                     0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetRemoteUser
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetRemoteUser is a complexType.
///
class _tds__SetRemoteUser
{ public:
/// Element "RemoteUser" of type "http://www.onvif.org/ver10/schema":RemoteUser.
    tt__RemoteUser*                      RemoteUser                     0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetRemoteUserResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetRemoteUserResponse is a complexType.
///
class _tds__SetRemoteUserResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetUsers
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetUsers is a complexType.
///
class _tds__GetUsers
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetUsersResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetUsersResponse is a complexType.
///
class _tds__GetUsersResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains a list of the onvif users and following information is included in each entry: username and user level.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__User* of length 0..unbounded.
    std::vector<tt__User*              > User                           0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":CreateUsers
/// @brief "http://www.onvif.org/ver10/device/wsdl":CreateUsers is a complexType.
///
class _tds__CreateUsers
{ public:
/// <PRE><BLOCKQUOTE>
///   Creates new device users and corresponding credentials. Each user entry includes: username, password and user level. Either all users are created successfully or a fault message MUST be returned without creating any user. If trying to create several users with exactly the same username the request is rejected and no users are created. If password is missing, then fault message Too weak password is returned.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__User* of length 1..unbounded.
    std::vector<tt__User*              > User                           1;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":CreateUsersResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":CreateUsersResponse is a complexType.
///
class _tds__CreateUsersResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":DeleteUsers
/// @brief "http://www.onvif.org/ver10/device/wsdl":DeleteUsers is a complexType.
///
class _tds__DeleteUsers
{ public:
/// <PRE><BLOCKQUOTE>
///   Deletes users on an device and there may exist users that cannot be deleted to ensure access to the unit. Either all users are deleted successfully or a fault message MUST be returned and no users be deleted. If a username exists multiple times in the request, then a fault message is returned.
/// </BLOCKQUOTE></PRE>
///
/// Vector of std::string of length 1..unbounded.
    std::vector<std::string            > Username                       1;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":DeleteUsersResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":DeleteUsersResponse is a complexType.
///
class _tds__DeleteUsersResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetUser
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetUser is a complexType.
///
class _tds__SetUser
{ public:
/// <PRE><BLOCKQUOTE>
///   Updates the credentials for one or several users on an device. Either all change requests are processed successfully or a fault message MUST be returned. If the request contains the same username multiple times, a fault message is returned.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__User* of length 1..unbounded.
    std::vector<tt__User*              > User                           1;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetUserResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetUserResponse is a complexType.
///
class _tds__SetUserResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetWsdlUrl
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetWsdlUrl is a complexType.
///
class _tds__GetWsdlUrl
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetWsdlUrlResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetWsdlUrlResponse is a complexType.
///
class _tds__GetWsdlUrlResponse
{ public:
/// Element "WsdlUrl" of type xs:anyURI.
    xsd__anyURI                          WsdlUrl                        1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetCapabilities
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetCapabilities is a complexType.
///
class _tds__GetCapabilities
{ public:
/// <PRE><BLOCKQUOTE>
///   List of categories to retrieve capability information on.
/// </BLOCKQUOTE></PRE>
///
/// Vector of enum tt__CapabilityCategory of length 0..unbounded.
    std::vector<enum tt__CapabilityCategory> Category                       0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetCapabilitiesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetCapabilitiesResponse is a complexType.
///
class _tds__GetCapabilitiesResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Capability information.
/// </BLOCKQUOTE></PRE>
///
/// Element "Capabilities" of type "http://www.onvif.org/ver10/schema":Capabilities.
    tt__Capabilities*                    Capabilities                   1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetHostname
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetHostname is a complexType.
///
class _tds__GetHostname
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetHostnameResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetHostnameResponse is a complexType.
///
class _tds__GetHostnameResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains the hostname information.
/// </BLOCKQUOTE></PRE>
///
/// Element "HostnameInformation" of type "http://www.onvif.org/ver10/schema":HostnameInformation.
    tt__HostnameInformation*             HostnameInformation            1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetHostname
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetHostname is a complexType.
///
class _tds__SetHostname
{ public:
/// <PRE><BLOCKQUOTE>
///   The hostname to set.
/// </BLOCKQUOTE></PRE>
///
/// Element "Name" of type xs:token.
    xsd__token                           Name                           1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetHostnameResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetHostnameResponse is a complexType.
///
class _tds__SetHostnameResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetHostnameFromDHCP
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetHostnameFromDHCP is a complexType.
///
class _tds__SetHostnameFromDHCP
{ public:
/// <PRE><BLOCKQUOTE>
///   True if the hostname shall be obtained via DHCP.
/// </BLOCKQUOTE></PRE>
///
/// Element "FromDHCP" of type xs:boolean.
    bool                                 FromDHCP                       1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetHostnameFromDHCPResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetHostnameFromDHCPResponse is a complexType.
///
class _tds__SetHostnameFromDHCPResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not a reboot is required after configuration updates.
/// </BLOCKQUOTE></PRE>
///
/// Element "RebootNeeded" of type xs:boolean.
    bool                                 RebootNeeded                   1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDNS
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDNS is a complexType.
///
class _tds__GetDNS
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDNSResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDNSResponse is a complexType.
///
class _tds__GetDNSResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   DNS information.
/// </BLOCKQUOTE></PRE>
///
/// Element "DNSInformation" of type "http://www.onvif.org/ver10/schema":DNSInformation.
    tt__DNSInformation*                  DNSInformation                 1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetDNS
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetDNS is a complexType.
///
class _tds__SetDNS
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicate if the DNS address is to be retrieved using DHCP.
/// </BLOCKQUOTE></PRE>
///
/// Element "FromDHCP" of type xs:boolean.
    bool                                 FromDHCP                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   DNS search domain.
/// </BLOCKQUOTE></PRE>
///
/// Vector of xsd__token of length 0..unbounded.
    std::vector<xsd__token             > SearchDomain                   0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   DNS address(es) set manually.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__IPAddress* of length 0..unbounded.
    std::vector<tt__IPAddress*         > DNSManual                      0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetDNSResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetDNSResponse is a complexType.
///
class _tds__SetDNSResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetNTP
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetNTP is a complexType.
///
class _tds__GetNTP
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetNTPResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetNTPResponse is a complexType.
///
class _tds__GetNTPResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   NTP information.
/// </BLOCKQUOTE></PRE>
///
/// Element "NTPInformation" of type "http://www.onvif.org/ver10/schema":NTPInformation.
    tt__NTPInformation*                  NTPInformation                 1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetNTP
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetNTP is a complexType.
///
class _tds__SetNTP
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicate if NTP address information is to be retrieved using DHCP.
/// </BLOCKQUOTE></PRE>
///
/// Element "FromDHCP" of type xs:boolean.
    bool                                 FromDHCP                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Manual NTP settings.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__NetworkHost* of length 0..unbounded.
    std::vector<tt__NetworkHost*       > NTPManual                      0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetNTPResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetNTPResponse is a complexType.
///
class _tds__SetNTPResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDynamicDNS
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDynamicDNS is a complexType.
///
class _tds__GetDynamicDNS
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDynamicDNSResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDynamicDNSResponse is a complexType.
///
class _tds__GetDynamicDNSResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Dynamic DNS information.
/// </BLOCKQUOTE></PRE>
///
/// Element "DynamicDNSInformation" of type "http://www.onvif.org/ver10/schema":DynamicDNSInformation.
    tt__DynamicDNSInformation*           DynamicDNSInformation          1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetDynamicDNS
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetDynamicDNS is a complexType.
///
class _tds__SetDynamicDNS
{ public:
/// <PRE><BLOCKQUOTE>
///   Dynamic DNS type.
/// </BLOCKQUOTE></PRE>
///
/// Element "Type" of type "http://www.onvif.org/ver10/schema":DynamicDNSType.
    enum tt__DynamicDNSType              Type                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   DNS name.
/// </BLOCKQUOTE></PRE>
///
/// Element "Name" of type "http://www.onvif.org/ver10/schema":DNSName.
    tt__DNSName*                         Name                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   DNS record time to live.
/// </BLOCKQUOTE></PRE>
///
/// Element "TTL" of type xs:duration.
    xsd__duration*                       TTL                            0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetDynamicDNSResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetDynamicDNSResponse is a complexType.
///
class _tds__SetDynamicDNSResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetNetworkInterfaces
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetNetworkInterfaces is a complexType.
///
class _tds__GetNetworkInterfaces
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetNetworkInterfacesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetNetworkInterfacesResponse is a complexType.
///
class _tds__GetNetworkInterfacesResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   List of network interfaces.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__NetworkInterface* of length 1..unbounded.
    std::vector<tt__NetworkInterface*  > NetworkInterfaces              1;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetNetworkInterfaces
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetNetworkInterfaces is a complexType.
///
class _tds__SetNetworkInterfaces
{ public:
/// <PRE><BLOCKQUOTE>
///   Symbolic network interface name.
/// </BLOCKQUOTE></PRE>
///
/// Element "InterfaceToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   InterfaceToken                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Network interface name.
/// </BLOCKQUOTE></PRE>
///
/// Element "NetworkInterface" of type "http://www.onvif.org/ver10/schema":NetworkInterfaceSetConfiguration.
    tt__NetworkInterfaceSetConfiguration*  NetworkInterface               1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetNetworkInterfacesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetNetworkInterfacesResponse is a complexType.
///
class _tds__SetNetworkInterfacesResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not a reboot is required after configuration updates.
///   If a device responds with RebootNeeded set to false, the device can be reached
///   via the new IP address without further action. A client should be aware that a device
///   may not be responsive for a short period of time until it signals availability at
///   the new address via the discovery Hello messages.
///   If a device responds with RebootNeeded set to true, it will be further available under
///   its previous IP address. The settings will only be activated when the device is
///   rebooted via the SystemReboot command.
/// </BLOCKQUOTE></PRE>
///
/// Element "RebootNeeded" of type xs:boolean.
    bool                                 RebootNeeded                   1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetNetworkProtocols
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetNetworkProtocols is a complexType.
///
class _tds__GetNetworkProtocols
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetNetworkProtocolsResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetNetworkProtocolsResponse is a complexType.
///
class _tds__GetNetworkProtocolsResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains an array of defined protocols supported by the device. There are three protocols defined; HTTP, HTTPS and RTSP. The following parameters can be retrieved for each protocol: port and enable/disable.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__NetworkProtocol* of length 0..unbounded.
    std::vector<tt__NetworkProtocol*   > NetworkProtocols               0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetNetworkProtocols
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetNetworkProtocols is a complexType.
///
class _tds__SetNetworkProtocols
{ public:
/// <PRE><BLOCKQUOTE>
///   Configures one or more defined network protocols supported by the device. There are currently three protocols defined; HTTP, HTTPS and RTSP. The following parameters can be set for each protocol: port and enable/disable.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__NetworkProtocol* of length 1..unbounded.
    std::vector<tt__NetworkProtocol*   > NetworkProtocols               1;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetNetworkProtocolsResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetNetworkProtocolsResponse is a complexType.
///
class _tds__SetNetworkProtocolsResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetNetworkDefaultGateway
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetNetworkDefaultGateway is a complexType.
///
class _tds__GetNetworkDefaultGateway
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetNetworkDefaultGatewayResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetNetworkDefaultGatewayResponse is a complexType.
///
class _tds__GetNetworkDefaultGatewayResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Gets the default IPv4 and IPv6 gateway settings from the device.
/// </BLOCKQUOTE></PRE>
///
/// Element "NetworkGateway" of type "http://www.onvif.org/ver10/schema":NetworkGateway.
    tt__NetworkGateway*                  NetworkGateway                 1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetNetworkDefaultGateway
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetNetworkDefaultGateway is a complexType.
///
class _tds__SetNetworkDefaultGateway
{ public:
/// <PRE><BLOCKQUOTE>
///   Sets IPv4 gateway address used as default setting.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__IPv4Address of length 0..unbounded.
    std::vector<tt__IPv4Address        > IPv4Address                    0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Sets IPv6 gateway address used as default setting.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__IPv6Address of length 0..unbounded.
    std::vector<tt__IPv6Address        > IPv6Address                    0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetNetworkDefaultGatewayResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetNetworkDefaultGatewayResponse is a complexType.
///
class _tds__SetNetworkDefaultGatewayResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetZeroConfiguration
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetZeroConfiguration is a complexType.
///
class _tds__GetZeroConfiguration
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetZeroConfigurationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetZeroConfigurationResponse is a complexType.
///
class _tds__GetZeroConfigurationResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains the zero-configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "ZeroConfiguration" of type "http://www.onvif.org/ver10/schema":NetworkZeroConfiguration.
    tt__NetworkZeroConfiguration*        ZeroConfiguration              1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetZeroConfiguration
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetZeroConfiguration is a complexType.
///
class _tds__SetZeroConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Unique identifier referencing the physical interface.
/// </BLOCKQUOTE></PRE>
///
/// Element "InterfaceToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   InterfaceToken                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Specifies if the zero-configuration should be enabled or not.
/// </BLOCKQUOTE></PRE>
///
/// Element "Enabled" of type xs:boolean.
    bool                                 Enabled                        1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetZeroConfigurationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetZeroConfigurationResponse is a complexType.
///
class _tds__SetZeroConfigurationResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetIPAddressFilter
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetIPAddressFilter is a complexType.
///
class _tds__GetIPAddressFilter
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetIPAddressFilterResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetIPAddressFilterResponse is a complexType.
///
class _tds__GetIPAddressFilterResponse
{ public:
/// Element "IPAddressFilter" of type "http://www.onvif.org/ver10/schema":IPAddressFilter.
    tt__IPAddressFilter*                 IPAddressFilter                1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetIPAddressFilter
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetIPAddressFilter is a complexType.
///
class _tds__SetIPAddressFilter
{ public:
/// Element "IPAddressFilter" of type "http://www.onvif.org/ver10/schema":IPAddressFilter.
    tt__IPAddressFilter*                 IPAddressFilter                1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetIPAddressFilterResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetIPAddressFilterResponse is a complexType.
///
class _tds__SetIPAddressFilterResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":AddIPAddressFilter
/// @brief "http://www.onvif.org/ver10/device/wsdl":AddIPAddressFilter is a complexType.
///
class _tds__AddIPAddressFilter
{ public:
/// Element "IPAddressFilter" of type "http://www.onvif.org/ver10/schema":IPAddressFilter.
    tt__IPAddressFilter*                 IPAddressFilter                1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":AddIPAddressFilterResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":AddIPAddressFilterResponse is a complexType.
///
class _tds__AddIPAddressFilterResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":RemoveIPAddressFilter
/// @brief "http://www.onvif.org/ver10/device/wsdl":RemoveIPAddressFilter is a complexType.
///
class _tds__RemoveIPAddressFilter
{ public:
/// Element "IPAddressFilter" of type "http://www.onvif.org/ver10/schema":IPAddressFilter.
    tt__IPAddressFilter*                 IPAddressFilter                1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":RemoveIPAddressFilterResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":RemoveIPAddressFilterResponse is a complexType.
///
class _tds__RemoveIPAddressFilterResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetAccessPolicy
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetAccessPolicy is a complexType.
///
class _tds__GetAccessPolicy
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetAccessPolicyResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetAccessPolicyResponse is a complexType.
///
class _tds__GetAccessPolicyResponse
{ public:
/// Element "PolicyFile" of type "http://www.onvif.org/ver10/schema":BinaryData.
    tt__BinaryData*                      PolicyFile                     1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetAccessPolicy
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetAccessPolicy is a complexType.
///
class _tds__SetAccessPolicy
{ public:
/// Element "PolicyFile" of type "http://www.onvif.org/ver10/schema":BinaryData.
    tt__BinaryData*                      PolicyFile                     1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetAccessPolicyResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetAccessPolicyResponse is a complexType.
///
class _tds__SetAccessPolicyResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":CreateCertificate
/// @brief "http://www.onvif.org/ver10/device/wsdl":CreateCertificate is a complexType.
///
class _tds__CreateCertificate
{ public:
/// <PRE><BLOCKQUOTE>
///   Certificate id.
/// </BLOCKQUOTE></PRE>
///
/// Element "CertificateID" of type xs:token.
    xsd__token*                          CertificateID                  0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Identification of the entity associated with the public-key.
/// </BLOCKQUOTE></PRE>
///
/// Element "Subject" of type xs:string.
    std::string*                         Subject                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Certificate validity start date.
/// </BLOCKQUOTE></PRE>
///
/// Element "ValidNotBefore" of type xs:dateTime.
    xsd__dateTime*                       ValidNotBefore                 0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Certificate expiry start date.
/// </BLOCKQUOTE></PRE>
///
/// Element "ValidNotAfter" of type xs:dateTime.
    xsd__dateTime*                       ValidNotAfter                  0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":CreateCertificateResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":CreateCertificateResponse is a complexType.
///
class _tds__CreateCertificateResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   base64 encoded DER representation of certificate.
/// </BLOCKQUOTE></PRE>
///
/// Element "NvtCertificate" of type "http://www.onvif.org/ver10/schema":Certificate.
    tt__Certificate*                     NvtCertificate                 1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetCertificates
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetCertificates is a complexType.
///
class _tds__GetCertificates
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetCertificatesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetCertificatesResponse is a complexType.
///
class _tds__GetCertificatesResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Id and base64 encoded DER representation of all available certificates.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__Certificate* of length 0..unbounded.
    std::vector<tt__Certificate*       > NvtCertificate                 0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetCertificatesStatus
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetCertificatesStatus is a complexType.
///
class _tds__GetCertificatesStatus
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetCertificatesStatusResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetCertificatesStatusResponse is a complexType.
///
class _tds__GetCertificatesStatusResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicates if a certificate is used in an optional HTTPS configuration of the device.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__CertificateStatus* of length 0..unbounded.
    std::vector<tt__CertificateStatus* > CertificateStatus              0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetCertificatesStatus
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetCertificatesStatus is a complexType.
///
class _tds__SetCertificatesStatus
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicates if a certificate is to be used in an optional HTTPS configuration of the device.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__CertificateStatus* of length 0..unbounded.
    std::vector<tt__CertificateStatus* > CertificateStatus              0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetCertificatesStatusResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetCertificatesStatusResponse is a complexType.
///
class _tds__SetCertificatesStatusResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":DeleteCertificates
/// @brief "http://www.onvif.org/ver10/device/wsdl":DeleteCertificates is a complexType.
///
class _tds__DeleteCertificates
{ public:
/// <PRE><BLOCKQUOTE>
///   List of ids of certificates to delete.
/// </BLOCKQUOTE></PRE>
///
/// Vector of xsd__token of length 1..unbounded.
    std::vector<xsd__token             > CertificateID                  1;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":DeleteCertificatesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":DeleteCertificatesResponse is a complexType.
///
class _tds__DeleteCertificatesResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetPkcs10Request
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetPkcs10Request is a complexType.
///
class _tds__GetPkcs10Request
{ public:
/// <PRE><BLOCKQUOTE>
///   List of ids of certificates to delete.
/// </BLOCKQUOTE></PRE>
///
/// Element "CertificateID" of type xs:token.
    xsd__token                           CertificateID                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Relative Dinstinguished Name(RDN) CommonName(CN).
/// </BLOCKQUOTE></PRE>
///
/// Element "Subject" of type xs:string.
    std::string*                         Subject                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional base64 encoded DER attributes.
/// </BLOCKQUOTE></PRE>
///
/// Element "Attributes" of type "http://www.onvif.org/ver10/schema":BinaryData.
    tt__BinaryData*                      Attributes                     0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetPkcs10RequestResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetPkcs10RequestResponse is a complexType.
///
class _tds__GetPkcs10RequestResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   base64 encoded DER representation of certificate.
/// </BLOCKQUOTE></PRE>
///
/// Element "Pkcs10Request" of type "http://www.onvif.org/ver10/schema":BinaryData.
    tt__BinaryData*                      Pkcs10Request                  1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":LoadCertificates
/// @brief "http://www.onvif.org/ver10/device/wsdl":LoadCertificates is a complexType.
///
class _tds__LoadCertificates
{ public:
/// <PRE><BLOCKQUOTE>
///   Optional id and base64 encoded DER representation of certificate.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__Certificate* of length 1..unbounded.
    std::vector<tt__Certificate*       > NVTCertificate                 1;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":LoadCertificatesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":LoadCertificatesResponse is a complexType.
///
class _tds__LoadCertificatesResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetClientCertificateMode
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetClientCertificateMode is a complexType.
///
class _tds__GetClientCertificateMode
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetClientCertificateModeResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetClientCertificateModeResponse is a complexType.
///
class _tds__GetClientCertificateModeResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not client certificates are required by device.
/// </BLOCKQUOTE></PRE>
///
/// Element "Enabled" of type xs:boolean.
    bool                                 Enabled                        1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetClientCertificateMode
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetClientCertificateMode is a complexType.
///
class _tds__SetClientCertificateMode
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not client certificates are required by device.
/// </BLOCKQUOTE></PRE>
///
/// Element "Enabled" of type xs:boolean.
    bool                                 Enabled                        1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetClientCertificateModeResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetClientCertificateModeResponse is a complexType.
///
class _tds__SetClientCertificateModeResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetCACertificates
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetCACertificates is a complexType.
///
class _tds__GetCACertificates
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetCACertificatesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetCACertificatesResponse is a complexType.
///
class _tds__GetCACertificatesResponse
{ public:
/// Vector of tt__Certificate* of length 0..unbounded.
    std::vector<tt__Certificate*       > CACertificate                  0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":LoadCertificateWithPrivateKey
/// @brief "http://www.onvif.org/ver10/device/wsdl":LoadCertificateWithPrivateKey is a complexType.
///
class _tds__LoadCertificateWithPrivateKey
{ public:
/// Vector of tt__CertificateWithPrivateKey* of length 1..unbounded.
    std::vector<tt__CertificateWithPrivateKey*> CertificateWithPrivateKey      1;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":LoadCertificateWithPrivateKeyResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":LoadCertificateWithPrivateKeyResponse is a complexType.
///
class _tds__LoadCertificateWithPrivateKeyResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetCertificateInformation
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetCertificateInformation is a complexType.
///
class _tds__GetCertificateInformation
{ public:
/// Element "CertificateID" of type xs:token.
    xsd__token                           CertificateID                  1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetCertificateInformationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetCertificateInformationResponse is a complexType.
///
class _tds__GetCertificateInformationResponse
{ public:
/// Element "CertificateInformation" of type "http://www.onvif.org/ver10/schema":CertificateInformation.
    tt__CertificateInformation*          CertificateInformation         1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":LoadCACertificates
/// @brief "http://www.onvif.org/ver10/device/wsdl":LoadCACertificates is a complexType.
///
class _tds__LoadCACertificates
{ public:
/// Vector of tt__Certificate* of length 1..unbounded.
    std::vector<tt__Certificate*       > CACertificate                  1;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":LoadCACertificatesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":LoadCACertificatesResponse is a complexType.
///
class _tds__LoadCACertificatesResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":CreateDot1XConfiguration
/// @brief "http://www.onvif.org/ver10/device/wsdl":CreateDot1XConfiguration is a complexType.
///
class _tds__CreateDot1XConfiguration
{ public:
/// Element "Dot1XConfiguration" of type "http://www.onvif.org/ver10/schema":Dot1XConfiguration.
    tt__Dot1XConfiguration*              Dot1XConfiguration             1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":CreateDot1XConfigurationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":CreateDot1XConfigurationResponse is a complexType.
///
class _tds__CreateDot1XConfigurationResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetDot1XConfiguration
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetDot1XConfiguration is a complexType.
///
class _tds__SetDot1XConfiguration
{ public:
/// Element "Dot1XConfiguration" of type "http://www.onvif.org/ver10/schema":Dot1XConfiguration.
    tt__Dot1XConfiguration*              Dot1XConfiguration             1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetDot1XConfigurationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetDot1XConfigurationResponse is a complexType.
///
class _tds__SetDot1XConfigurationResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDot1XConfiguration
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDot1XConfiguration is a complexType.
///
class _tds__GetDot1XConfiguration
{ public:
/// Element "Dot1XConfigurationToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   Dot1XConfigurationToken        1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDot1XConfigurationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDot1XConfigurationResponse is a complexType.
///
class _tds__GetDot1XConfigurationResponse
{ public:
/// Element "Dot1XConfiguration" of type "http://www.onvif.org/ver10/schema":Dot1XConfiguration.
    tt__Dot1XConfiguration*              Dot1XConfiguration             1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDot1XConfigurations
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDot1XConfigurations is a complexType.
///
class _tds__GetDot1XConfigurations
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDot1XConfigurationsResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDot1XConfigurationsResponse is a complexType.
///
class _tds__GetDot1XConfigurationsResponse
{ public:
/// Vector of tt__Dot1XConfiguration* of length 0..unbounded.
    std::vector<tt__Dot1XConfiguration*> Dot1XConfiguration             0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":DeleteDot1XConfiguration
/// @brief "http://www.onvif.org/ver10/device/wsdl":DeleteDot1XConfiguration is a complexType.
///
class _tds__DeleteDot1XConfiguration
{ public:
/// Vector of tt__ReferenceToken of length 0..unbounded.
    std::vector<tt__ReferenceToken     > Dot1XConfigurationToken        0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":DeleteDot1XConfigurationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":DeleteDot1XConfigurationResponse is a complexType.
///
class _tds__DeleteDot1XConfigurationResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetRelayOutputs
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetRelayOutputs is a complexType.
///
class _tds__GetRelayOutputs
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetRelayOutputsResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetRelayOutputsResponse is a complexType.
///
class _tds__GetRelayOutputsResponse
{ public:
/// Vector of tt__RelayOutput* of length 0..unbounded.
    std::vector<tt__RelayOutput*       > RelayOutputs                   0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetRelayOutputSettings
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetRelayOutputSettings is a complexType.
///
class _tds__SetRelayOutputSettings
{ public:
/// Element "RelayOutputToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   RelayOutputToken               1;	///< Required element.
/// Element "Properties" of type "http://www.onvif.org/ver10/schema":RelayOutputSettings.
    tt__RelayOutputSettings*             Properties                     1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetRelayOutputSettingsResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetRelayOutputSettingsResponse is a complexType.
///
class _tds__SetRelayOutputSettingsResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetRelayOutputState
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetRelayOutputState is a complexType.
///
class _tds__SetRelayOutputState
{ public:
/// Element "RelayOutputToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   RelayOutputToken               1;	///< Required element.
/// Element "LogicalState" of type "http://www.onvif.org/ver10/schema":RelayLogicalState.
    enum tt__RelayLogicalState           LogicalState                   1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetRelayOutputStateResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetRelayOutputStateResponse is a complexType.
///
class _tds__SetRelayOutputStateResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SendAuxiliaryCommand
/// @brief "http://www.onvif.org/ver10/device/wsdl":SendAuxiliaryCommand is a complexType.
///
class _tds__SendAuxiliaryCommand
{ public:
/// Element "AuxiliaryCommand" of type "http://www.onvif.org/ver10/schema":AuxiliaryData.
    tt__AuxiliaryData                    AuxiliaryCommand               1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SendAuxiliaryCommandResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SendAuxiliaryCommandResponse is a complexType.
///
class _tds__SendAuxiliaryCommandResponse
{ public:
/// Element "AuxiliaryCommandResponse" of type "http://www.onvif.org/ver10/schema":AuxiliaryData.
    tt__AuxiliaryData*                   AuxiliaryCommandResponse       0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDot11Capabilities
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDot11Capabilities is a complexType.
///
class _tds__GetDot11Capabilities
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDot11CapabilitiesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDot11CapabilitiesResponse is a complexType.
///
class _tds__GetDot11CapabilitiesResponse
{ public:
/// Element "Capabilities" of type "http://www.onvif.org/ver10/schema":Dot11Capabilities.
    tt__Dot11Capabilities*               Capabilities                   1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDot11Status
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDot11Status is a complexType.
///
class _tds__GetDot11Status
{ public:
/// Element "InterfaceToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   InterfaceToken                 1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDot11StatusResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDot11StatusResponse is a complexType.
///
class _tds__GetDot11StatusResponse
{ public:
/// Element "Status" of type "http://www.onvif.org/ver10/schema":Dot11Status.
    tt__Dot11Status*                     Status                         1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":ScanAvailableDot11Networks
/// @brief "http://www.onvif.org/ver10/device/wsdl":ScanAvailableDot11Networks is a complexType.
///
class _tds__ScanAvailableDot11Networks
{ public:
/// Element "InterfaceToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   InterfaceToken                 1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":ScanAvailableDot11NetworksResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":ScanAvailableDot11NetworksResponse is a complexType.
///
class _tds__ScanAvailableDot11NetworksResponse
{ public:
/// Vector of tt__Dot11AvailableNetworks* of length 0..unbounded.
    std::vector<tt__Dot11AvailableNetworks*> Networks                       0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetSystemUris
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetSystemUris is a complexType.
///
class _tds__GetSystemUris
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetSystemUrisResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetSystemUrisResponse is a complexType.
///
class _tds__GetSystemUrisResponse
{ public:
/// Element "SystemLogUris" of type "http://www.onvif.org/ver10/schema":SystemLogUriList.
    tt__SystemLogUriList*                SystemLogUris                  0;	///< Optional element.
/// Element "SupportInfoUri" of type xs:anyURI.
    xsd__anyURI*                         SupportInfoUri                 0;	///< Optional element.
/// Element "SystemBackupUri" of type xs:anyURI.
    xsd__anyURI*                         SystemBackupUri                0;	///< Optional element.
    class _tds__GetSystemUrisResponse_Extension
    { public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
    }                                   *Extension                      0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":StartFirmwareUpgrade
/// @brief "http://www.onvif.org/ver10/device/wsdl":StartFirmwareUpgrade is a complexType.
///
class _tds__StartFirmwareUpgrade
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":StartFirmwareUpgradeResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":StartFirmwareUpgradeResponse is a complexType.
///
class _tds__StartFirmwareUpgradeResponse
{ public:
/// Element "UploadUri" of type xs:anyURI.
    xsd__anyURI                          UploadUri                      1;	///< Required element.
/// Element "UploadDelay" of type xs:duration.
    xsd__duration                        UploadDelay                    1;	///< Required element.
/// Element "ExpectedDownTime" of type xs:duration.
    xsd__duration                        ExpectedDownTime               1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":StartSystemRestore
/// @brief "http://www.onvif.org/ver10/device/wsdl":StartSystemRestore is a complexType.
///
class _tds__StartSystemRestore
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":StartSystemRestoreResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":StartSystemRestoreResponse is a complexType.
///
class _tds__StartSystemRestoreResponse
{ public:
/// Element "UploadUri" of type xs:anyURI.
    xsd__anyURI                          UploadUri                      1;	///< Required element.
/// Element "ExpectedDownTime" of type xs:duration.
    xsd__duration                        ExpectedDownTime               1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetStorageConfigurations
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetStorageConfigurations is a complexType.
///
class _tds__GetStorageConfigurations
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetStorageConfigurationsResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetStorageConfigurationsResponse is a complexType.
///
class _tds__GetStorageConfigurationsResponse
{ public:
/// Vector of tds__StorageConfiguration* of length 0..unbounded.
    std::vector<tds__StorageConfiguration*> StorageConfigurations          0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":CreateStorageConfiguration
/// @brief "http://www.onvif.org/ver10/device/wsdl":CreateStorageConfiguration is a complexType.
///
class _tds__CreateStorageConfiguration
{ public:
/// Element "StorageConfiguration" of type "http://www.onvif.org/ver10/device/wsdl":StorageConfigurationData.
    tds__StorageConfigurationData*       StorageConfiguration           1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":CreateStorageConfigurationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":CreateStorageConfigurationResponse is a complexType.
///
class _tds__CreateStorageConfigurationResponse
{ public:
/// Element "Token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   Token                          1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetStorageConfiguration
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetStorageConfiguration is a complexType.
///
class _tds__GetStorageConfiguration
{ public:
/// Element "Token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   Token                          1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetStorageConfigurationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetStorageConfigurationResponse is a complexType.
///
class _tds__GetStorageConfigurationResponse
{ public:
/// Element "StorageConfiguration" of type "http://www.onvif.org/ver10/device/wsdl":StorageConfiguration.
    tds__StorageConfiguration*           StorageConfiguration           1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetStorageConfiguration
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetStorageConfiguration is a complexType.
///
class _tds__SetStorageConfiguration
{ public:
/// Element "StorageConfiguration" of type "http://www.onvif.org/ver10/device/wsdl":StorageConfiguration.
    tds__StorageConfiguration*           StorageConfiguration           1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetStorageConfigurationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetStorageConfigurationResponse is a complexType.
///
class _tds__SetStorageConfigurationResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":DeleteStorageConfiguration
/// @brief "http://www.onvif.org/ver10/device/wsdl":DeleteStorageConfiguration is a complexType.
///
class _tds__DeleteStorageConfiguration
{ public:
/// Element "Token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   Token                          1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":DeleteStorageConfigurationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":DeleteStorageConfigurationResponse is a complexType.
///
class _tds__DeleteStorageConfigurationResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetGeoLocation
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetGeoLocation is a complexType.
///
class _tds__GetGeoLocation
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetGeoLocationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetGeoLocationResponse is a complexType.
///
class _tds__GetGeoLocationResponse
{ public:
/// Vector of tt__LocationEntity* of length 0..unbounded.
    std::vector<tt__LocationEntity*    > Location                       0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetGeoLocation
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetGeoLocation is a complexType.
///
class _tds__SetGeoLocation
{ public:
/// Vector of tt__LocationEntity* of length 1..unbounded.
    std::vector<tt__LocationEntity*    > Location                       1;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetGeoLocationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetGeoLocationResponse is a complexType.
///
class _tds__SetGeoLocationResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":DeleteGeoLocation
/// @brief "http://www.onvif.org/ver10/device/wsdl":DeleteGeoLocation is a complexType.
///
class _tds__DeleteGeoLocation
{ public:
/// Vector of tt__LocationEntity* of length 1..unbounded.
    std::vector<tt__LocationEntity*    > Location                       1;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":DeleteGeoLocationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":DeleteGeoLocationResponse is a complexType.
///
class _tds__DeleteGeoLocationResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.onvif.org/ver10/deviceIO/wsdl                                 *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":Capabilities is a complexType.
///
class tmd__Capabilities : public xsd__anyType
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <PRE><BLOCKQUOTE>
///   Number of video sources (defaults to none).
/// </BLOCKQUOTE></PRE>
///
/// Attribute "VideoSources" of type xs:int.
  @ int                                  VideoSources                   0 = 0;	///< Optional attribute with default value="0".
/// <PRE><BLOCKQUOTE>
///   Number of video outputs (defaults to none).
/// </BLOCKQUOTE></PRE>
///
/// Attribute "VideoOutputs" of type xs:int.
  @ int                                  VideoOutputs                   0 = 0;	///< Optional attribute with default value="0".
/// <PRE><BLOCKQUOTE>
///   Number of audio sources (defaults to none).
/// </BLOCKQUOTE></PRE>
///
/// Attribute "AudioSources" of type xs:int.
  @ int                                  AudioSources                   0 = 0;	///< Optional attribute with default value="0".
/// <PRE><BLOCKQUOTE>
///   Number of audio outputs (defaults to none).
/// </BLOCKQUOTE></PRE>
///
/// Attribute "AudioOutputs" of type xs:int.
  @ int                                  AudioOutputs                   0 = 0;	///< Optional attribute with default value="0".
/// <PRE><BLOCKQUOTE>
///   Number of relay outputs (defaults to none).
/// </BLOCKQUOTE></PRE>
///
/// Attribute "RelayOutputs" of type xs:int.
  @ int                                  RelayOutputs                   0 = 0;	///< Optional attribute with default value="0".
/// <PRE><BLOCKQUOTE>
///   Number of serial ports (defaults to none).
/// </BLOCKQUOTE></PRE>
///
/// Attribute "SerialPorts" of type xs:int.
  @ int                                  SerialPorts                    0 = 0;	///< Optional attribute with default value="0".
/// <PRE><BLOCKQUOTE>
///   Number of digital inputs (defaults to none).
/// </BLOCKQUOTE></PRE>
///
/// Attribute "DigitalInputs" of type xs:int.
  @ int                                  DigitalInputs                  0 = 0;	///< Optional attribute with default value="0".
/// <PRE><BLOCKQUOTE>
///   Indicates support for DigitalInput configuration of the idle state (defaults to false).
/// </BLOCKQUOTE></PRE>
///
/// Attribute "DigitalInputOptions" of type xs:boolean.
  @ bool                                 DigitalInputOptions            0 = false;	///< Optional attribute with default value="false".
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":RelayOutputOptions is a complexType.
///
class tmd__RelayOutputOptions : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Supported Modes.
/// </BLOCKQUOTE></PRE>
///
/// Vector of enum tt__RelayMode of length 1..unbounded.
    std::vector<enum tt__RelayMode     > Mode                           1;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Supported delay time range or discrete values in seconds. This element must be present if MonoStable mode is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "DelayTimes" of type "http://www.onvif.org/ver10/deviceIO/wsdl":DelayTimes.
    tmd__DelayTimes*                     DelayTimes                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   True if the relay only supports the exact values for the DelayTimes listed. Default is false.
/// </BLOCKQUOTE></PRE>
///
/// Element "Discrete" of type xs:boolean.
    bool*                                Discrete                       0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/deviceIO/wsdl":RelayOutputOptionsExtension.
    tmd__RelayOutputOptionsExtension*    Extension                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Token of the relay output.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   token                          1;	///< Required attribute.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":RelayOutputOptionsExtension is a complexType.
///
class tmd__RelayOutputOptionsExtension : public xsd__anyType
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
};

/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":Get is a complexType.
///
class tmd__Get : public xsd__anyType
{ public:
};

/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":GetResponse is a complexType.
///
class tmd__GetResponse : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   List tokens of a physical IO of a device.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__ReferenceToken of length 0..unbounded.
    std::vector<tt__ReferenceToken     > Token                          0;	///< Multiple elements.
};

/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":DigitalInputConfigurationInputOptions is a complexType.
///
class tmd__DigitalInputConfigurationInputOptions : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Configuration Options for a digital input.
/// </BLOCKQUOTE></PRE>
///
/// Vector of enum tt__DigitalIdleState of length 1..unbounded.
    std::vector<enum tt__DigitalIdleState> IdleState                      1;	///< Multiple elements.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":SerialData is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   The serial port data.
/// </BLOCKQUOTE></PRE>
///
class tmd__SerialData : public xsd__anyType
{ public:
//  BEGIN CHOICE <xs:choice>
  $ int                                  __union_SerialData            ;	///< Union _tmd__union_SerialData selector: set to SOAP_UNION__tmd__union_SerialData_<fieldname>
/// Union for choice in tmd__SerialData.
    union _tmd__union_SerialData
    {
/// Element "Binary" of type xs:base64Binary.
    xsd__base64Binary*                   Binary                        ;	///< Choice of element (one of multiple choices).
/// Element "String" of type xs:string.
    std::string*                         String                        ;	///< Choice of element (one of multiple choices).
    }                                    union_SerialData              ;
//  END OF CHOICE
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":SerialPortConfiguration is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   The parameters for configuring the serial port.
/// </BLOCKQUOTE></PRE>
///
class tmd__SerialPortConfiguration : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   The transfer bitrate.
/// </BLOCKQUOTE></PRE>
///
/// Element "BaudRate" of type xs:int.
    int                                  BaudRate                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The parity for the data error detection.
/// </BLOCKQUOTE></PRE>
///
/// Element "ParityBit" of type "http://www.onvif.org/ver10/deviceIO/wsdl":ParityBit.
    enum tmd__ParityBit                  ParityBit                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The bit length for each character.
/// </BLOCKQUOTE></PRE>
///
/// Element "CharacterLength" of type xs:int.
    int                                  CharacterLength                1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The number of stop bits used to terminate each character.
/// </BLOCKQUOTE></PRE>
///
/// Element "StopBit" of type xs:float.
    float                                StopBit                        1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   token                          1;	///< Required attribute.
/// Attribute "type" of type "http://www.onvif.org/ver10/deviceIO/wsdl":SerialPortType.
  @ enum tmd__SerialPortType             type                           1;	///< Required attribute.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":SerialPortConfigurationOptions is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   The configuration options that relates to serial port.
/// </BLOCKQUOTE></PRE>
///
class tmd__SerialPortConfigurationOptions : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   The list of configurable transfer bitrate.
/// </BLOCKQUOTE></PRE>
///
/// Element "BaudRateList" of type "http://www.onvif.org/ver10/schema":IntList.
    tt__IntList                          BaudRateList                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The list of configurable parity for the data error detection.
/// </BLOCKQUOTE></PRE>
///
/// Element "ParityBitList" of type "http://www.onvif.org/ver10/deviceIO/wsdl":ParityBitList.
    tmd__ParityBitList*                  ParityBitList                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The list of configurable bit length for each character.
/// </BLOCKQUOTE></PRE>
///
/// Element "CharacterLengthList" of type "http://www.onvif.org/ver10/schema":IntList.
    tt__IntList                          CharacterLengthList            1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The list of configurable number of stop bits used to terminate each character.
/// </BLOCKQUOTE></PRE>
///
/// Element "StopBitList" of type "http://www.onvif.org/ver10/schema":FloatList.
    tt__FloatList                        StopBitList                    1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   token                          1;	///< Required attribute.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":ParityBitList is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   The list of configurable parity for the data error detection.
/// </BLOCKQUOTE></PRE>
///
class tmd__ParityBitList : public xsd__anyType
{ public:
/// Vector of enum tmd__ParityBit of length 0..unbounded.
    std::vector<enum tmd__ParityBit    > Items                          0;	///< Multiple elements.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetServiceCapabilities
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":GetServiceCapabilities is a complexType.
///
class _tmd__GetServiceCapabilities
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetServiceCapabilitiesResponse
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":GetServiceCapabilitiesResponse is a complexType.
///
class _tmd__GetServiceCapabilitiesResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   The capabilities for the device IO service is returned in the Capabilities element.
/// </BLOCKQUOTE></PRE>
///
/// Element "Capabilities" of type "http://www.onvif.org/ver10/deviceIO/wsdl":Capabilities.
    tmd__Capabilities*                   Capabilities                   1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetRelayOutputOptions
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":GetRelayOutputOptions is a complexType.
///
class _tmd__GetRelayOutputOptions
{ public:
/// <PRE><BLOCKQUOTE>
///   Optional reference token to the relay for which the options are requested.
/// </BLOCKQUOTE></PRE>
///
/// Element "RelayOutputToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken*                  RelayOutputToken               0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetRelayOutputOptionsResponse
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":GetRelayOutputOptionsResponse is a complexType.
///
class _tmd__GetRelayOutputOptionsResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Valid values and ranges for the configuration of a relay output.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tmd__RelayOutputOptions* of length 0..unbounded.
    std::vector<tmd__RelayOutputOptions*> RelayOutputOptions             0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetVideoOutputs
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":GetVideoOutputs is a complexType.
///
class _tmd__GetVideoOutputs
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetVideoOutputsResponse
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":GetVideoOutputsResponse is a complexType.
///
class _tmd__GetVideoOutputsResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   List containing all physical Video output connections of a device.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__VideoOutput* of length 0..unbounded.
    std::vector<tt__VideoOutput*       > VideoOutputs                   0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetAudioSourceConfiguration
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":GetAudioSourceConfiguration is a complexType.
///
class _tmd__GetAudioSourceConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Token of the requested AudioSource.
/// </BLOCKQUOTE></PRE>
///
/// Element "AudioSourceToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   AudioSourceToken               1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetAudioSourceConfigurationResponse
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":GetAudioSourceConfigurationResponse is a complexType.
///
class _tmd__GetAudioSourceConfigurationResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Current configuration of the Audio input.
/// </BLOCKQUOTE></PRE>
///
/// Element "AudioSourceConfiguration" of type "http://www.onvif.org/ver10/schema":AudioSourceConfiguration.
    tt__AudioSourceConfiguration*        AudioSourceConfiguration       1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetAudioOutputConfiguration
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":GetAudioOutputConfiguration is a complexType.
///
class _tmd__GetAudioOutputConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Token of the physical Audio output.
/// </BLOCKQUOTE></PRE>
///
/// Element "AudioOutputToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   AudioOutputToken               1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetAudioOutputConfigurationResponse
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":GetAudioOutputConfigurationResponse is a complexType.
///
class _tmd__GetAudioOutputConfigurationResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Current configuration of the Audio output.
/// </BLOCKQUOTE></PRE>
///
/// Element "AudioOutputConfiguration" of type "http://www.onvif.org/ver10/schema":AudioOutputConfiguration.
    tt__AudioOutputConfiguration*        AudioOutputConfiguration       1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetVideoSourceConfiguration
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":GetVideoSourceConfiguration is a complexType.
///
class _tmd__GetVideoSourceConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Token of the requested VideoSource.
/// </BLOCKQUOTE></PRE>
///
/// Element "VideoSourceToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   VideoSourceToken               1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetVideoSourceConfigurationResponse
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":GetVideoSourceConfigurationResponse is a complexType.
///
class _tmd__GetVideoSourceConfigurationResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Current configuration of the Video input.
/// </BLOCKQUOTE></PRE>
///
/// Element "VideoSourceConfiguration" of type "http://www.onvif.org/ver10/schema":VideoSourceConfiguration.
    tt__VideoSourceConfiguration*        VideoSourceConfiguration       1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetVideoOutputConfiguration
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":GetVideoOutputConfiguration is a complexType.
///
class _tmd__GetVideoOutputConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Token of the requested VideoOutput.
/// </BLOCKQUOTE></PRE>
///
/// Element "VideoOutputToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   VideoOutputToken               1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetVideoOutputConfigurationResponse
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":GetVideoOutputConfigurationResponse is a complexType.
///
class _tmd__GetVideoOutputConfigurationResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Current configuration of the Video output.
/// </BLOCKQUOTE></PRE>
///
/// Element "VideoOutputConfiguration" of type "http://www.onvif.org/ver10/schema":VideoOutputConfiguration.
    tt__VideoOutputConfiguration*        VideoOutputConfiguration       1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":SetAudioSourceConfiguration
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":SetAudioSourceConfiguration is a complexType.
///
class _tmd__SetAudioSourceConfiguration
{ public:
/// Element "Configuration" of type "http://www.onvif.org/ver10/schema":AudioSourceConfiguration.
    tt__AudioSourceConfiguration*        Configuration                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The ForcePersistence element determines how configuration
///   changes shall be stored. If true, changes shall be persistent. If false, changes MAY revert to previous values
///   after reboot.
/// </BLOCKQUOTE></PRE>
///
/// Element "ForcePersistence" of type xs:boolean.
    bool                                 ForcePersistence               1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":SetAudioSourceConfigurationResponse
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":SetAudioSourceConfigurationResponse is a complexType.
///
class _tmd__SetAudioSourceConfigurationResponse
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":SetAudioOutputConfiguration
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":SetAudioOutputConfiguration is a complexType.
///
class _tmd__SetAudioOutputConfiguration
{ public:
/// Element "Configuration" of type "http://www.onvif.org/ver10/schema":AudioOutputConfiguration.
    tt__AudioOutputConfiguration*        Configuration                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The ForcePersistence element determines how configuration
///   changes shall be stored. If true, changes shall be persistent. If false, changes MAY revert to previous values
///   after reboot.
/// </BLOCKQUOTE></PRE>
///
/// Element "ForcePersistence" of type xs:boolean.
    bool                                 ForcePersistence               1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":SetAudioOutputConfigurationResponse
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":SetAudioOutputConfigurationResponse is a complexType.
///
class _tmd__SetAudioOutputConfigurationResponse
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":SetVideoSourceConfiguration
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":SetVideoSourceConfiguration is a complexType.
///
class _tmd__SetVideoSourceConfiguration
{ public:
/// Element "Configuration" of type "http://www.onvif.org/ver10/schema":VideoSourceConfiguration.
    tt__VideoSourceConfiguration*        Configuration                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The ForcePersistence element determines how configuration
///   changes shall be stored. If true, changes shall be persistent. If false, changes MAY revert to previous values
///   after reboot.
/// </BLOCKQUOTE></PRE>
///
/// Element "ForcePersistence" of type xs:boolean.
    bool                                 ForcePersistence               1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":SetVideoSourceConfigurationResponse
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":SetVideoSourceConfigurationResponse is a complexType.
///
class _tmd__SetVideoSourceConfigurationResponse
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":SetVideoOutputConfiguration
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":SetVideoOutputConfiguration is a complexType.
///
class _tmd__SetVideoOutputConfiguration
{ public:
/// Element "Configuration" of type "http://www.onvif.org/ver10/schema":VideoOutputConfiguration.
    tt__VideoOutputConfiguration*        Configuration                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The ForcePersistence element determines how configuration
///   changes shall be stored. If true, changes shall be persistent. If false, changes MAY revert to previous values
///   after reboot.
/// </BLOCKQUOTE></PRE>
///
/// Element "ForcePersistence" of type xs:boolean.
    bool                                 ForcePersistence               1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":SetVideoOutputConfigurationResponse
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":SetVideoOutputConfigurationResponse is a complexType.
///
class _tmd__SetVideoOutputConfigurationResponse
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetVideoSourceConfigurationOptions
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":GetVideoSourceConfigurationOptions is a complexType.
///
class _tmd__GetVideoSourceConfigurationOptions
{ public:
/// <PRE><BLOCKQUOTE>
///   Token of the Video input whose options are requested..
/// </BLOCKQUOTE></PRE>
///
/// Element "VideoSourceToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   VideoSourceToken               1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetVideoSourceConfigurationOptionsResponse
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":GetVideoSourceConfigurationOptionsResponse is a complexType.
///
class _tmd__GetVideoSourceConfigurationOptionsResponse
{ public:
/// Element "VideoSourceConfigurationOptions" of type "http://www.onvif.org/ver10/schema":VideoSourceConfigurationOptions.
    tt__VideoSourceConfigurationOptions*  VideoSourceConfigurationOptions 1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetVideoOutputConfigurationOptions
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":GetVideoOutputConfigurationOptions is a complexType.
///
class _tmd__GetVideoOutputConfigurationOptions
{ public:
/// <PRE><BLOCKQUOTE>
///   Token of the Video Output whose options are requested..
/// </BLOCKQUOTE></PRE>
///
/// Element "VideoOutputToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   VideoOutputToken               1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetVideoOutputConfigurationOptionsResponse
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":GetVideoOutputConfigurationOptionsResponse is a complexType.
///
class _tmd__GetVideoOutputConfigurationOptionsResponse
{ public:
/// Element "VideoOutputConfigurationOptions" of type "http://www.onvif.org/ver10/schema":VideoOutputConfigurationOptions.
    tt__VideoOutputConfigurationOptions*  VideoOutputConfigurationOptions 1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetAudioSourceConfigurationOptions
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":GetAudioSourceConfigurationOptions is a complexType.
///
class _tmd__GetAudioSourceConfigurationOptions
{ public:
/// <PRE><BLOCKQUOTE>
///   Token of the physical Audio input whose options are requested..
/// </BLOCKQUOTE></PRE>
///
/// Element "AudioSourceToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   AudioSourceToken               1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetAudioSourceConfigurationOptionsResponse
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":GetAudioSourceConfigurationOptionsResponse is a complexType.
///
class _tmd__GetAudioSourceConfigurationOptionsResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Returns the AudioSourceToken available.
/// </BLOCKQUOTE></PRE>
///
/// Element "AudioSourceOptions" of type "http://www.onvif.org/ver10/schema":AudioSourceConfigurationOptions.
    tt__AudioSourceConfigurationOptions*  AudioSourceOptions             1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetAudioOutputConfigurationOptions
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":GetAudioOutputConfigurationOptions is a complexType.
///
class _tmd__GetAudioOutputConfigurationOptions
{ public:
/// <PRE><BLOCKQUOTE>
///   Token of the physical Audio Output whose options are requested..
/// </BLOCKQUOTE></PRE>
///
/// Element "AudioOutputToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   AudioOutputToken               1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetAudioOutputConfigurationOptionsResponse
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":GetAudioOutputConfigurationOptionsResponse is a complexType.
///
class _tmd__GetAudioOutputConfigurationOptionsResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Available settings and ranges for the requested Audio output.
/// </BLOCKQUOTE></PRE>
///
/// Element "AudioOutputOptions" of type "http://www.onvif.org/ver10/schema":AudioOutputConfigurationOptions.
    tt__AudioOutputConfigurationOptions*  AudioOutputOptions             1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":SetRelayOutputSettings
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":SetRelayOutputSettings is a complexType.
///
class _tmd__SetRelayOutputSettings
{ public:
/// Element "RelayOutput" of type "http://www.onvif.org/ver10/schema":RelayOutput.
    tt__RelayOutput*                     RelayOutput                    1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":SetRelayOutputSettingsResponse
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":SetRelayOutputSettingsResponse is a complexType.
///
class _tmd__SetRelayOutputSettingsResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetDigitalInputs
/// <PRE><BLOCKQUOTE>
///   Get the available digital inputs of a device.
/// </BLOCKQUOTE></PRE>
///
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":GetDigitalInputs is a complexType.
///
class _tmd__GetDigitalInputs
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetDigitalInputsResponse
/// <PRE><BLOCKQUOTE>
///   Requested digital inputs.
/// </BLOCKQUOTE></PRE>
///
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":GetDigitalInputsResponse is a complexType.
///
class _tmd__GetDigitalInputsResponse
{ public:
/// Vector of tt__DigitalInput* of length 0..unbounded.
    std::vector<tt__DigitalInput*      > DigitalInputs                  0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetDigitalInputConfigurationOptions
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":GetDigitalInputConfigurationOptions is a complexType.
///
class _tmd__GetDigitalInputConfigurationOptions
{ public:
/// Element "Token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken*                  Token                          0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetDigitalInputConfigurationOptionsResponse
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":GetDigitalInputConfigurationOptionsResponse is a complexType.
///
class _tmd__GetDigitalInputConfigurationOptionsResponse
{ public:
/// Element "DigitalInputOptions" of type "http://www.onvif.org/ver10/deviceIO/wsdl":DigitalInputConfigurationInputOptions.
    tmd__DigitalInputConfigurationInputOptions*  DigitalInputOptions            1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":SetDigitalInputConfigurations
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":SetDigitalInputConfigurations is a complexType.
///
class _tmd__SetDigitalInputConfigurations
{ public:
/// Vector of tt__DigitalInput* of length 1..unbounded.
    std::vector<tt__DigitalInput*      > DigitalInputs                  1;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":SetDigitalInputConfigurationsResponse
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":SetDigitalInputConfigurationsResponse is a complexType.
///
class _tmd__SetDigitalInputConfigurationsResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetSerialPorts
/// <PRE><BLOCKQUOTE>
///   The physical serial port on the device that allows serial data to be read and written.
/// </BLOCKQUOTE></PRE>
///
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":GetSerialPorts is a complexType.
///
class _tmd__GetSerialPorts
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetSerialPortsResponse
/// <PRE><BLOCKQUOTE>
///   Requested serial ports.
/// </BLOCKQUOTE></PRE>
///
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":GetSerialPortsResponse is a complexType.
///
class _tmd__GetSerialPortsResponse
{ public:
/// Vector of tmd__SerialPort* of length 0..unbounded.
    std::vector<tmd__SerialPort*       > SerialPort                     0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetSerialPortConfiguration
/// <PRE><BLOCKQUOTE>
///   Gets the configuration that relates to serial port configuration.
/// </BLOCKQUOTE></PRE>
///
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":GetSerialPortConfiguration is a complexType.
///
class _tmd__GetSerialPortConfiguration
{ public:
/// Element "SerialPortToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   SerialPortToken                1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetSerialPortConfigurationResponse
/// <PRE><BLOCKQUOTE>
///   Requested serial port configuration.
/// </BLOCKQUOTE></PRE>
///
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":GetSerialPortConfigurationResponse is a complexType.
///
class _tmd__GetSerialPortConfigurationResponse
{ public:
/// Element "SerialPortConfiguration" of type "http://www.onvif.org/ver10/deviceIO/wsdl":SerialPortConfiguration.
    tmd__SerialPortConfiguration*        SerialPortConfiguration        1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":SetSerialPortConfiguration
/// <PRE><BLOCKQUOTE>
///   Sets the configuration that relates to serial port configuration.
/// </BLOCKQUOTE></PRE>
///
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":SetSerialPortConfiguration is a complexType.
///
class _tmd__SetSerialPortConfiguration
{ public:
/// Element "SerialPortConfiguration" of type "http://www.onvif.org/ver10/deviceIO/wsdl":SerialPortConfiguration.
    tmd__SerialPortConfiguration*        SerialPortConfiguration        1;	///< Required element.
/// Element "ForcePersistance" of type xs:boolean.
    bool                                 ForcePersistance               1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":SetSerialPortConfigurationResponse
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":SetSerialPortConfigurationResponse is a complexType.
///
class _tmd__SetSerialPortConfigurationResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetSerialPortConfigurationOptions
/// <PRE><BLOCKQUOTE>
///   Gets the configuration options that relates to serial port configuration.
/// </BLOCKQUOTE></PRE>
///
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":GetSerialPortConfigurationOptions is a complexType.
///
class _tmd__GetSerialPortConfigurationOptions
{ public:
/// Element "SerialPortToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   SerialPortToken                1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetSerialPortConfigurationOptionsResponse
/// <PRE><BLOCKQUOTE>
///   Requested serial port configuration options.
/// </BLOCKQUOTE></PRE>
///
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":GetSerialPortConfigurationOptionsResponse is a complexType.
///
class _tmd__GetSerialPortConfigurationOptionsResponse
{ public:
/// Element "SerialPortOptions" of type "http://www.onvif.org/ver10/deviceIO/wsdl":SerialPortConfigurationOptions.
    tmd__SerialPortConfigurationOptions*  SerialPortOptions              1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":SendReceiveSerialCommand
/// <PRE><BLOCKQUOTE>
///   Transmitting arbitrary data to the connected serial device and then receiving its response data.
/// </BLOCKQUOTE></PRE>
///
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":SendReceiveSerialCommand is a complexType.
///
class _tmd__SendReceiveSerialCommand
{ public:
/// <PRE><BLOCKQUOTE>
///   The serial port data.
/// </BLOCKQUOTE></PRE>
///
/// Element "SerialData" of type "http://www.onvif.org/ver10/deviceIO/wsdl":SerialData.
    tmd__SerialData*                     SerialData                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Indicates that the command should be responded back within the specified period of time.
/// </BLOCKQUOTE></PRE>
///
/// Element "TimeOut" of type xs:duration.
    xsd__duration*                       TimeOut                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   This element may be put in the case that data length returned from the connected serial device is already determined as some fixed bytes length. It indicates the length of received data which can be regarded as available.
/// </BLOCKQUOTE></PRE>
///
/// Element "DataLength" of type xs:integer.
    xsd__integer*                        DataLength                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   This element may be put in the case that the delimiter codes returned from the connected serial device is already known. It indicates the termination data sequence of the responded data. In case the string has more than one character a device shall interpret the whole string as a single delimiter. Furthermore a device shall return the delimiter character(s) to the client.
/// </BLOCKQUOTE></PRE>
///
/// Element "Delimiter" of type xs:string.
    std::string*                         Delimiter                      0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":SendReceiveSerialCommandResponse
/// <PRE><BLOCKQUOTE>
///   Receiving the response data.
/// </BLOCKQUOTE></PRE>
///
/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":SendReceiveSerialCommandResponse is a complexType.
///
class _tmd__SendReceiveSerialCommandResponse
{ public:
/// Element "SerialData" of type "http://www.onvif.org/ver10/deviceIO/wsdl":SerialData.
    tmd__SerialData*                     SerialData                     0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.onvif.org/ver10/events/wsdl                                   *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver10/events/wsdl":Capabilities is a complexType.
///
class tev__Capabilities : public xsd__anyType
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <PRE><BLOCKQUOTE>
///   Indicates that the WS Subscription policy is supported.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "WSSubscriptionPolicySupport" of type xs:boolean.
  @ bool*                                WSSubscriptionPolicySupport    0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates that the WS Pull Point is supported.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "WSPullPointSupport" of type xs:boolean.
  @ bool*                                WSPullPointSupport             0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates that the WS Pausable Subscription Manager Interface is supported.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "WSPausableSubscriptionManagerInterfaceSupport" of type xs:boolean.
  @ bool*                                WSPausableSubscriptionManagerInterfaceSupport 0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Maximum number of supported notification producers as defined by WS-BaseNotification.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "MaxNotificationProducers" of type xs:int.
  @ int*                                 MaxNotificationProducers       0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Maximum supported number of notification pull points.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "MaxPullPoints" of type xs:int.
  @ int*                                 MaxPullPoints                  0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indication if the device supports persistent notification storage.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "PersistentNotificationStorage" of type xs:boolean.
  @ bool*                                PersistentNotificationStorage  0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/events/wsdl":SubscriptionPolicy is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Optional ONVIF defined pull point subscription policies
/// </BLOCKQUOTE></PRE>
///
class tev__SubscriptionPolicy : public xsd__anyType
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <PRE><BLOCKQUOTE>
///   The pullpoint should not provide Initialized nor Deleted events for Properties.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "ChangedOnly" of type xs:boolean.
  @ bool*                                ChangedOnly                    0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/events/wsdl":GetServiceCapabilities
/// @brief "http://www.onvif.org/ver10/events/wsdl":GetServiceCapabilities is a complexType.
///
class _tev__GetServiceCapabilities
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/events/wsdl":GetServiceCapabilitiesResponse
/// @brief "http://www.onvif.org/ver10/events/wsdl":GetServiceCapabilitiesResponse is a complexType.
///
class _tev__GetServiceCapabilitiesResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   The capabilities for the event service is returned in the Capabilities element.
/// </BLOCKQUOTE></PRE>
///
/// Element "Capabilities" of type "http://www.onvif.org/ver10/events/wsdl":Capabilities.
    tev__Capabilities*                   Capabilities                   1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/events/wsdl":CreatePullPointSubscription
/// @brief "http://www.onvif.org/ver10/events/wsdl":CreatePullPointSubscription is a complexType.
///
class _tev__CreatePullPointSubscription
{ public:
/// <PRE><BLOCKQUOTE>
///   Optional XPATH expression to select specific topics.
/// </BLOCKQUOTE></PRE>
///
/// Element "Filter" of type "http://docs.oasis-open.org/wsn/b-2":FilterType.
    wsnt__FilterType*                    Filter                         0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Initial termination time.
/// </BLOCKQUOTE></PRE>
///
/// Element "InitialTerminationTime" of type "http://docs.oasis-open.org/wsn/b-2":AbsoluteOrRelativeTimeType.
    wsnt__AbsoluteOrRelativeTimeType*    InitialTerminationTime         0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Refer to <a href="http://docs.oasis-open.org/wsn/wsn-ws_base_notification-1.3-spec-os.htm">Web Services Base Notification 1.3 (WS-BaseNotification)</a>.
/// </BLOCKQUOTE></PRE>
///
    class _tev__CreatePullPointSubscription_SubscriptionPolicy
    { public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
    }                                   *SubscriptionPolicy             0;	///< Optional element.
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/events/wsdl":CreatePullPointSubscriptionResponse
/// @brief "http://www.onvif.org/ver10/events/wsdl":CreatePullPointSubscriptionResponse is a complexType.
///
class _tev__CreatePullPointSubscriptionResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Endpoint reference of the subscription to be used for pulling the messages.
/// </BLOCKQUOTE></PRE>
///
/// Element "SubscriptionReference" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType          SubscriptionReference          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Current time of the server for synchronization purposes.
/// </BLOCKQUOTE></PRE>
///
/// Element reference "http://www.onvif.org/ver10/events/wsdl:""http://docs.oasis-open.org/wsn/b-2":CurrentTime.
    xsd__dateTime                        wsnt__CurrentTime              1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Date time when the PullPoint will be shut down without further pull requests.
/// </BLOCKQUOTE></PRE>
///
/// Element reference "http://www.onvif.org/ver10/events/wsdl:""http://docs.oasis-open.org/wsn/b-2":TerminationTime.
    xsd__dateTime                        wsnt__TerminationTime          1;	///< Required element.
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/events/wsdl":PullMessages
/// @brief "http://www.onvif.org/ver10/events/wsdl":PullMessages is a complexType.
///
class _tev__PullMessages
{ public:
/// <PRE><BLOCKQUOTE>
///   Maximum time to block until this method returns.
/// </BLOCKQUOTE></PRE>
///
/// Element "Timeout" of type xs:duration.
    xsd__duration                        Timeout                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Upper limit for the number of messages to return at once. A server implementation may decide to return less messages.
/// </BLOCKQUOTE></PRE>
///
/// Element "MessageLimit" of type xs:int.
    int                                  MessageLimit                   1;	///< Required element.
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/events/wsdl":PullMessagesResponse
/// @brief "http://www.onvif.org/ver10/events/wsdl":PullMessagesResponse is a complexType.
///
class _tev__PullMessagesResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   The date and time when the messages have been delivered by the web server to the client.
/// </BLOCKQUOTE></PRE>
///
/// Element "CurrentTime" of type xs:dateTime.
    xsd__dateTime                        CurrentTime                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Date time when the PullPoint will be shut down without further pull requests.
/// </BLOCKQUOTE></PRE>
///
/// Element "TerminationTime" of type xs:dateTime.
    xsd__dateTime                        TerminationTime                1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of messages. This list shall be empty in case of a timeout.
/// </BLOCKQUOTE></PRE>
///
/// Vector of wsnt__NotificationMessageHolderType* element refs of length 0..unbounded.
    std::vector<wsnt__NotificationMessageHolderType*> wsnt__NotificationMessage      0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/events/wsdl":PullMessagesFaultResponse
/// @brief "http://www.onvif.org/ver10/events/wsdl":PullMessagesFaultResponse is a complexType.
///
class _tev__PullMessagesFaultResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Maximum timeout supported by the device.
/// </BLOCKQUOTE></PRE>
///
/// Element "MaxTimeout" of type xs:duration.
    xsd__duration                        MaxTimeout                     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Maximum message limit supported by the device.
/// </BLOCKQUOTE></PRE>
///
/// Element "MaxMessageLimit" of type xs:int.
    int                                  MaxMessageLimit                1;	///< Required element.
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/events/wsdl":Seek
/// @brief "http://www.onvif.org/ver10/events/wsdl":Seek is a complexType.
///
class _tev__Seek
{ public:
/// <PRE><BLOCKQUOTE>
///   The date and time to match against stored messages.
/// </BLOCKQUOTE></PRE>
///
/// Element "UtcTime" of type xs:dateTime.
    xsd__dateTime                        UtcTime                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Reverse the pull direction of PullMessages.
/// </BLOCKQUOTE></PRE>
///
/// Element "Reverse" of type xs:boolean.
    bool*                                Reverse                        0;	///< Optional element.
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/events/wsdl":SeekResponse
/// @brief "http://www.onvif.org/ver10/events/wsdl":SeekResponse is a complexType.
///
class _tev__SeekResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/events/wsdl":SetSynchronizationPoint
/// @brief "http://www.onvif.org/ver10/events/wsdl":SetSynchronizationPoint is a complexType.
///
class _tev__SetSynchronizationPoint
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/events/wsdl":SetSynchronizationPointResponse
/// @brief "http://www.onvif.org/ver10/events/wsdl":SetSynchronizationPointResponse is a complexType.
///
class _tev__SetSynchronizationPointResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/events/wsdl":GetEventProperties
/// @brief "http://www.onvif.org/ver10/events/wsdl":GetEventProperties is a complexType.
///
class _tev__GetEventProperties
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/events/wsdl":GetEventPropertiesResponse
/// @brief "http://www.onvif.org/ver10/events/wsdl":GetEventPropertiesResponse is a complexType.
///
class _tev__GetEventPropertiesResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   List of topic namespaces supported.
/// </BLOCKQUOTE></PRE>
///
/// Vector of xsd__anyURI of length 1..unbounded.
    std::vector<xsd__anyURI            > TopicNamespaceLocation         1;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   True when topicset is fixed for all times.
/// </BLOCKQUOTE></PRE>
///
/// Element reference "http://www.onvif.org/ver10/events/wsdl:""http://docs.oasis-open.org/wsn/b-2":FixedTopicSet.
    bool                                 wsnt__FixedTopicSet            1 = true;	///< Required element with default value="true".
/// <PRE><BLOCKQUOTE>
///   Set of topics supported.
/// </BLOCKQUOTE></PRE>
///
/// Element reference "http://www.onvif.org/ver10/events/wsdl:""http://docs.oasis-open.org/wsn/t-1":TopicSet.
    wstop__TopicSetType*                 wstop__TopicSet                1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Defines the XPath expression syntax supported for matching topic expressions. <br/>
///   The following TopicExpressionDialects are mandatory for an ONVIF compliant device :
///   <ul type="disc">
///   <li>http://docs.oasis-open.org/wsn/t-1/TopicExpression/Concrete</li>
///   <li>http://www.onvif.org/ver10/tev/topicExpression/ConcreteSet.</li>
///   </ul>
/// </BLOCKQUOTE></PRE>
///
/// Vector of xsd__anyURI element refs of length 1..unbounded.
    std::vector<xsd__anyURI            > wsnt__TopicExpressionDialect   1;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Defines the XPath function set supported for message content filtering.<br/> The following MessageContentFilterDialects should be returned if a device supports the message content filtering:
///   <ul type="disc">
///   <li>http://www.onvif.org/ver10/tev/messageContentFilter/ItemFilter.</li>
///   </ul>
///   A device that does not support any MessageContentFilterDialect returns a single empty url.
/// </BLOCKQUOTE></PRE>
///
/// Vector of xsd__anyURI of length 1..unbounded.
    std::vector<xsd__anyURI            > MessageContentFilterDialect    1;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Optional ProducerPropertiesDialects. Refer to <a href="http://docs.oasis-open.org/wsn/wsn-ws_base_notification-1.3-spec-os.htm">Web Services Base Notification 1.3 (WS-BaseNotification)</a> for advanced filtering.
/// </BLOCKQUOTE></PRE>
///
/// Vector of xsd__anyURI of length 0..unbounded.
    std::vector<xsd__anyURI            > ProducerPropertiesFilterDialect 0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   The Message Content Description Language allows referencing
///   of vendor-specific types. In order to ease the integration of such types into a client application,
///   the GetEventPropertiesResponse shall list all URI locations to schema files whose types are
///   used in the description of notifications, with MessageContentSchemaLocation elements.<br/> This list shall at least contain the URI of the ONVIF schema file.
/// </BLOCKQUOTE></PRE>
///
/// Vector of xsd__anyURI of length 1..unbounded.
    std::vector<xsd__anyURI            > MessageContentSchemaLocation   1;	///< Multiple elements.
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.onvif.org/ver10/receiver/wsdl                                 *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver10/receiver/wsdl":Capabilities is a complexType.
///
class trv__Capabilities : public xsd__anyType
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <PRE><BLOCKQUOTE>
///   Indicates that the device can receive RTP multicast streams.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "RTP_Multicast" of type xs:boolean.
  @ bool*                                RTP_USCOREMulticast            0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates that the device can receive RTP/TCP streams
/// </BLOCKQUOTE></PRE>
///
/// Attribute "RTP_TCP" of type xs:boolean.
  @ bool*                                RTP_USCORETCP                  0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates that the device can receive RTP/RTSP/TCP streams.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "RTP_RTSP_TCP" of type xs:boolean.
  @ bool*                                RTP_USCORERTSP_USCORETCP       0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   The maximum number of receivers supported by the device.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "SupportedReceivers" of type xs:int.
  @ int                                  SupportedReceivers             1;	///< Required attribute.
/// <PRE><BLOCKQUOTE>
///   The maximum allowed length for RTSP URIs (Minimum and default value is 128 octet).
/// </BLOCKQUOTE></PRE>
///
/// Attribute "MaximumRTSPURILength" of type xs:int.
  @ int*                                 MaximumRTSPURILength           0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/receiver/wsdl":GetServiceCapabilities
/// @brief "http://www.onvif.org/ver10/receiver/wsdl":GetServiceCapabilities is a complexType.
///
class _trv__GetServiceCapabilities
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/receiver/wsdl":GetServiceCapabilitiesResponse
/// @brief "http://www.onvif.org/ver10/receiver/wsdl":GetServiceCapabilitiesResponse is a complexType.
///
class _trv__GetServiceCapabilitiesResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   The capabilities for the receiver service is returned in the Capabilities element.
/// </BLOCKQUOTE></PRE>
///
/// Element "Capabilities" of type "http://www.onvif.org/ver10/receiver/wsdl":Capabilities.
    trv__Capabilities*                   Capabilities                   1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/receiver/wsdl":GetReceivers
/// @brief "http://www.onvif.org/ver10/receiver/wsdl":GetReceivers is a complexType.
///
class _trv__GetReceivers
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/receiver/wsdl":GetReceiversResponse
/// @brief "http://www.onvif.org/ver10/receiver/wsdl":GetReceiversResponse is a complexType.
///
class _trv__GetReceiversResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   A list of all receivers that currently exist on the device.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__Receiver* of length 0..unbounded.
    std::vector<tt__Receiver*          > Receivers                      0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/receiver/wsdl":GetReceiver
/// @brief "http://www.onvif.org/ver10/receiver/wsdl":GetReceiver is a complexType.
///
class _trv__GetReceiver
{ public:
/// <PRE><BLOCKQUOTE>
///   The token of the receiver to be retrieved.
/// </BLOCKQUOTE></PRE>
///
/// Element "ReceiverToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ReceiverToken                  1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/receiver/wsdl":GetReceiverResponse
/// @brief "http://www.onvif.org/ver10/receiver/wsdl":GetReceiverResponse is a complexType.
///
class _trv__GetReceiverResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   The details of the receiver.
/// </BLOCKQUOTE></PRE>
///
/// Element "Receiver" of type "http://www.onvif.org/ver10/schema":Receiver.
    tt__Receiver*                        Receiver                       1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/receiver/wsdl":CreateReceiver
/// @brief "http://www.onvif.org/ver10/receiver/wsdl":CreateReceiver is a complexType.
///
class _trv__CreateReceiver
{ public:
/// <PRE><BLOCKQUOTE>
///   The initial configuration for the new receiver.
/// </BLOCKQUOTE></PRE>
///
/// Element "Configuration" of type "http://www.onvif.org/ver10/schema":ReceiverConfiguration.
    tt__ReceiverConfiguration*           Configuration                  1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/receiver/wsdl":CreateReceiverResponse
/// @brief "http://www.onvif.org/ver10/receiver/wsdl":CreateReceiverResponse is a complexType.
///
class _trv__CreateReceiverResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   The details of the receiver that was created.
/// </BLOCKQUOTE></PRE>
///
/// Element "Receiver" of type "http://www.onvif.org/ver10/schema":Receiver.
    tt__Receiver*                        Receiver                       1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/receiver/wsdl":DeleteReceiver
/// @brief "http://www.onvif.org/ver10/receiver/wsdl":DeleteReceiver is a complexType.
///
class _trv__DeleteReceiver
{ public:
/// <PRE><BLOCKQUOTE>
///   The token of the receiver to be deleted.
/// </BLOCKQUOTE></PRE>
///
/// Element "ReceiverToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ReceiverToken                  1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/receiver/wsdl":DeleteReceiverResponse
/// @brief "http://www.onvif.org/ver10/receiver/wsdl":DeleteReceiverResponse is a complexType.
///
class _trv__DeleteReceiverResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/receiver/wsdl":ConfigureReceiver
/// @brief "http://www.onvif.org/ver10/receiver/wsdl":ConfigureReceiver is a complexType.
///
class _trv__ConfigureReceiver
{ public:
/// <PRE><BLOCKQUOTE>
///   The token of the receiver to be configured.
/// </BLOCKQUOTE></PRE>
///
/// Element "ReceiverToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ReceiverToken                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The new configuration for the receiver.
/// </BLOCKQUOTE></PRE>
///
/// Element "Configuration" of type "http://www.onvif.org/ver10/schema":ReceiverConfiguration.
    tt__ReceiverConfiguration*           Configuration                  1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/receiver/wsdl":ConfigureReceiverResponse
/// @brief "http://www.onvif.org/ver10/receiver/wsdl":ConfigureReceiverResponse is a complexType.
///
class _trv__ConfigureReceiverResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/receiver/wsdl":SetReceiverMode
/// @brief "http://www.onvif.org/ver10/receiver/wsdl":SetReceiverMode is a complexType.
///
class _trv__SetReceiverMode
{ public:
/// <PRE><BLOCKQUOTE>
///   The token of the receiver to be changed.
/// </BLOCKQUOTE></PRE>
///
/// Element "ReceiverToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ReceiverToken                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The new receiver mode. Options available are:
/// </BLOCKQUOTE></PRE>
///
/// Element "Mode" of type "http://www.onvif.org/ver10/schema":ReceiverMode.
    enum tt__ReceiverMode                Mode                           1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/receiver/wsdl":SetReceiverModeResponse
/// @brief "http://www.onvif.org/ver10/receiver/wsdl":SetReceiverModeResponse is a complexType.
///
class _trv__SetReceiverModeResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/receiver/wsdl":GetReceiverState
/// @brief "http://www.onvif.org/ver10/receiver/wsdl":GetReceiverState is a complexType.
///
class _trv__GetReceiverState
{ public:
/// <PRE><BLOCKQUOTE>
///   The token of the receiver to be queried.
/// </BLOCKQUOTE></PRE>
///
/// Element "ReceiverToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ReceiverToken                  1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/receiver/wsdl":GetReceiverStateResponse
/// @brief "http://www.onvif.org/ver10/receiver/wsdl":GetReceiverStateResponse is a complexType.
///
class _trv__GetReceiverStateResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Description of the current receiver state.
/// </BLOCKQUOTE></PRE>
///
/// Element "ReceiverState" of type "http://www.onvif.org/ver10/schema":ReceiverStateInformation.
    tt__ReceiverStateInformation*        ReceiverState                  1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://docs.oasis-open.org/wsn/t-1                                       *
 *                                                                            *
\******************************************************************************/

/// @brief "http://docs.oasis-open.org/wsn/t-1":Documentation is a complexType.
///
class wstop__Documentation : public xsd__anyType
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Mixed content.
    xsd__anyType                         __mixed                       0;	///< Store mixed content as xsd:any (by default a xsd__anyType DOM soap_dom_element linked node structure).
};

/// @brief "http://docs.oasis-open.org/wsn/t-1":ExtensibleDocumented is an abstract complexType.
///
/// This type is extended by:
/// - "http://docs.oasis-open.org/wsn/t-1":TopicNamespaceType as wstop__TopicNamespaceType
/// - "http://docs.oasis-open.org/wsn/t-1":TopicType as wstop__TopicType
/// - "http://docs.oasis-open.org/wsn/t-1":TopicSetType as wstop__TopicSetType
///
class wstop__ExtensibleDocumented : public xsd__anyType
{ public:
/// Element "documentation" of type "http://docs.oasis-open.org/wsn/t-1":Documentation.
    wstop__Documentation*                documentation                  0;	///< Optional element.
/// <anyAttribute namespace="##other">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://docs.oasis-open.org/wsn/t-1":QueryExpressionType is a complexType.
///
class wstop__QueryExpressionType : public xsd__anyType
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="1">
    xsd__anyType                         __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Attribute "Dialect" of type xs:anyURI.
  @ xsd__anyURI                          Dialect                        1;	///< Required attribute.
/// Mixed content.
    xsd__anyType                         __mixed                       0;	///< Store mixed content as xsd:any (by default a xsd__anyType DOM soap_dom_element linked node structure).
};


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.w3.org/2004/08/xop/include                                    *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.w3.org/2004/08/xop/include":Include is a complexType.
///
class xop__Include : public xsd__anyType
{ public:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Attribute "href" of type xs:anyURI.
  @ xsd__anyURI                          href                           1;	///< Required attribute.
/// <anyAttribute namespace="##other">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.onvif.org/ver10/recording/wsdl                                *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver10/recording/wsdl":Capabilities is a complexType.
///
class trc__Capabilities : public xsd__anyType
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <PRE><BLOCKQUOTE>
///   Indication if the device supports dynamic creation and deletion of recordings
/// </BLOCKQUOTE></PRE>
///
/// Attribute "DynamicRecordings" of type xs:boolean.
  @ bool*                                DynamicRecordings              0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indication if the device supports dynamic creation and deletion of tracks
/// </BLOCKQUOTE></PRE>
///
/// Attribute "DynamicTracks" of type xs:boolean.
  @ bool*                                DynamicTracks                  0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indication which encodings are supported for recording. The list may contain one or more enumeration values of tt:VideoEncoding and tt:AudioEncoding. If device does not support audio recording tt:AudioEncoding shall not be listed.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "Encoding" of type "http://www.onvif.org/ver10/recording/wsdl":EncodingTypes.
  @ trc__EncodingTypes*                  Encoding                       0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Maximum supported bit rate for all tracks of a recording in kBit/s.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "MaxRate" of type xs:float.
  @ float*                               MaxRate                        0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Maximum supported bit rate for all recordings in kBit/s.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "MaxTotalRate" of type xs:float.
  @ float*                               MaxTotalRate                   0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Maximum number of recordings supported. (Integer values only.)
/// </BLOCKQUOTE></PRE>
///
/// Attribute "MaxRecordings" of type xs:float.
  @ float*                               MaxRecordings                  0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Maximum total number of supported recording jobs by the device.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "MaxRecordingJobs" of type xs:int.
  @ int*                                 MaxRecordingJobs               0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indication if the device supports the GetRecordingOptions command.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "Options" of type xs:boolean.
  @ bool*                                Options                        0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indication if the device supports recording metadata.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "MetadataRecording" of type xs:boolean.
  @ bool*                                MetadataRecording              0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indication that the device supports ExportRecordedData command for the listed export file formats.
///   The list shall return at least one export file format value. The value of 'ONVIF' refers to
///   ONVIF Export File Format specification.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "SupportedExportFileFormats" of type "http://www.onvif.org/ver10/schema":StringAttrList.
  @ tt__StringAttrList*                  SupportedExportFileFormats     0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/recording/wsdl":RecordingOptions is a complexType.
///
class trc__RecordingOptions : public xsd__anyType
{ public:
/// Element "Job" of type "http://www.onvif.org/ver10/recording/wsdl":JobOptions.
    trc__JobOptions*                     Job                            1;	///< Required element.
/// Element "Track" of type "http://www.onvif.org/ver10/recording/wsdl":TrackOptions.
    trc__TrackOptions*                   Track                          1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
};

/// @brief "http://www.onvif.org/ver10/recording/wsdl":JobOptions is a complexType.
///
class trc__JobOptions : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Number of spare jobs that can be created for the recording.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "Spare" of type xs:int.
  @ int*                                 Spare                          0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   A device that supports recording of a restricted set of Media Service Profiles returns the list of profiles that can be recorded on the given Recording.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "CompatibleSources" of type "http://www.onvif.org/ver10/schema":StringAttrList.
  @ tt__StringAttrList*                  CompatibleSources              0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/recording/wsdl":TrackOptions is a complexType.
///
class trc__TrackOptions : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Total spare number of tracks that can be added to this recording.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "SpareTotal" of type xs:int.
  @ int*                                 SpareTotal                     0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Number of spare Video tracks that can be added to this recording.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "SpareVideo" of type xs:int.
  @ int*                                 SpareVideo                     0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Number of spare Aduio tracks that can be added to this recording.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "SpareAudio" of type xs:int.
  @ int*                                 SpareAudio                     0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Number of spare Metadata tracks that can be added to this recording.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "SpareMetadata" of type xs:int.
  @ int*                                 SpareMetadata                  0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/recording/wsdl":GetServiceCapabilities
/// @brief "http://www.onvif.org/ver10/recording/wsdl":GetServiceCapabilities is a complexType.
///
class _trc__GetServiceCapabilities
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/recording/wsdl":GetServiceCapabilitiesResponse
/// @brief "http://www.onvif.org/ver10/recording/wsdl":GetServiceCapabilitiesResponse is a complexType.
///
class _trc__GetServiceCapabilitiesResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   The capabilities for the recording service is returned in the Capabilities element.
/// </BLOCKQUOTE></PRE>
///
/// Element "Capabilities" of type "http://www.onvif.org/ver10/recording/wsdl":Capabilities.
    trc__Capabilities*                   Capabilities                   1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/recording/wsdl":CreateRecording
/// @brief "http://www.onvif.org/ver10/recording/wsdl":CreateRecording is a complexType.
///
class _trc__CreateRecording
{ public:
/// <PRE><BLOCKQUOTE>
///   Initial configuration for the recording.
/// </BLOCKQUOTE></PRE>
///
/// Element "RecordingConfiguration" of type "http://www.onvif.org/ver10/schema":RecordingConfiguration.
    tt__RecordingConfiguration*          RecordingConfiguration         1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/recording/wsdl":CreateRecordingResponse
/// @brief "http://www.onvif.org/ver10/recording/wsdl":CreateRecordingResponse is a complexType.
///
class _trc__CreateRecordingResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   The reference to the created recording.
/// </BLOCKQUOTE></PRE>
///
/// Element "RecordingToken" of type "http://www.onvif.org/ver10/schema":RecordingReference.
    tt__RecordingReference               RecordingToken                 1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/recording/wsdl":DeleteRecording
/// @brief "http://www.onvif.org/ver10/recording/wsdl":DeleteRecording is a complexType.
///
class _trc__DeleteRecording
{ public:
/// <PRE><BLOCKQUOTE>
///   The reference of the recording to be deleted.
/// </BLOCKQUOTE></PRE>
///
/// Element "RecordingToken" of type "http://www.onvif.org/ver10/schema":RecordingReference.
    tt__RecordingReference               RecordingToken                 1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/recording/wsdl":DeleteRecordingResponse
/// @brief "http://www.onvif.org/ver10/recording/wsdl":DeleteRecordingResponse is a complexType.
///
class _trc__DeleteRecordingResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/recording/wsdl":GetRecordings
/// @brief "http://www.onvif.org/ver10/recording/wsdl":GetRecordings is a complexType.
///
class _trc__GetRecordings
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/recording/wsdl":GetRecordingsResponse
/// @brief "http://www.onvif.org/ver10/recording/wsdl":GetRecordingsResponse is a complexType.
///
class _trc__GetRecordingsResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   List of recording items.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__GetRecordingsResponseItem* of length 0..unbounded.
    std::vector<tt__GetRecordingsResponseItem*> RecordingItem                  0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/recording/wsdl":SetRecordingConfiguration
/// @brief "http://www.onvif.org/ver10/recording/wsdl":SetRecordingConfiguration is a complexType.
///
class _trc__SetRecordingConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Token of the recording that shall be changed.
/// </BLOCKQUOTE></PRE>
///
/// Element "RecordingToken" of type "http://www.onvif.org/ver10/schema":RecordingReference.
    tt__RecordingReference               RecordingToken                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The new configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "RecordingConfiguration" of type "http://www.onvif.org/ver10/schema":RecordingConfiguration.
    tt__RecordingConfiguration*          RecordingConfiguration         1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/recording/wsdl":SetRecordingConfigurationResponse
/// @brief "http://www.onvif.org/ver10/recording/wsdl":SetRecordingConfigurationResponse is a complexType.
///
class _trc__SetRecordingConfigurationResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/recording/wsdl":GetRecordingConfiguration
/// @brief "http://www.onvif.org/ver10/recording/wsdl":GetRecordingConfiguration is a complexType.
///
class _trc__GetRecordingConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Token of the configuration to be retrieved.
/// </BLOCKQUOTE></PRE>
///
/// Element "RecordingToken" of type "http://www.onvif.org/ver10/schema":RecordingReference.
    tt__RecordingReference               RecordingToken                 1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/recording/wsdl":GetRecordingConfigurationResponse
/// @brief "http://www.onvif.org/ver10/recording/wsdl":GetRecordingConfigurationResponse is a complexType.
///
class _trc__GetRecordingConfigurationResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Configuration of the recording.
/// </BLOCKQUOTE></PRE>
///
/// Element "RecordingConfiguration" of type "http://www.onvif.org/ver10/schema":RecordingConfiguration.
    tt__RecordingConfiguration*          RecordingConfiguration         1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/recording/wsdl":CreateTrack
/// @brief "http://www.onvif.org/ver10/recording/wsdl":CreateTrack is a complexType.
///
class _trc__CreateTrack
{ public:
/// <PRE><BLOCKQUOTE>
///   Identifies the recording to which a track shall be added.
/// </BLOCKQUOTE></PRE>
///
/// Element "RecordingToken" of type "http://www.onvif.org/ver10/schema":RecordingReference.
    tt__RecordingReference               RecordingToken                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The configuration of the new track.
/// </BLOCKQUOTE></PRE>
///
/// Element "TrackConfiguration" of type "http://www.onvif.org/ver10/schema":TrackConfiguration.
    tt__TrackConfiguration*              TrackConfiguration             1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/recording/wsdl":CreateTrackResponse
/// @brief "http://www.onvif.org/ver10/recording/wsdl":CreateTrackResponse is a complexType.
///
class _trc__CreateTrackResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   The TrackToken shall identify the newly created track. The
///   TrackToken shall be unique within the recoding to which
///   the new track belongs.
/// </BLOCKQUOTE></PRE>
///
/// Element "TrackToken" of type "http://www.onvif.org/ver10/schema":TrackReference.
    tt__TrackReference                   TrackToken                     1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/recording/wsdl":DeleteTrack
/// @brief "http://www.onvif.org/ver10/recording/wsdl":DeleteTrack is a complexType.
///
class _trc__DeleteTrack
{ public:
/// <PRE><BLOCKQUOTE>
///   Token of the recording the track belongs to.
/// </BLOCKQUOTE></PRE>
///
/// Element "RecordingToken" of type "http://www.onvif.org/ver10/schema":RecordingReference.
    tt__RecordingReference               RecordingToken                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token of the track to be deleted.
/// </BLOCKQUOTE></PRE>
///
/// Element "TrackToken" of type "http://www.onvif.org/ver10/schema":TrackReference.
    tt__TrackReference                   TrackToken                     1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/recording/wsdl":DeleteTrackResponse
/// @brief "http://www.onvif.org/ver10/recording/wsdl":DeleteTrackResponse is a complexType.
///
class _trc__DeleteTrackResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/recording/wsdl":GetTrackConfiguration
/// @brief "http://www.onvif.org/ver10/recording/wsdl":GetTrackConfiguration is a complexType.
///
class _trc__GetTrackConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Token of the recording the track belongs to.
/// </BLOCKQUOTE></PRE>
///
/// Element "RecordingToken" of type "http://www.onvif.org/ver10/schema":RecordingReference.
    tt__RecordingReference               RecordingToken                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token of the track.
/// </BLOCKQUOTE></PRE>
///
/// Element "TrackToken" of type "http://www.onvif.org/ver10/schema":TrackReference.
    tt__TrackReference                   TrackToken                     1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/recording/wsdl":GetTrackConfigurationResponse
/// @brief "http://www.onvif.org/ver10/recording/wsdl":GetTrackConfigurationResponse is a complexType.
///
class _trc__GetTrackConfigurationResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Configuration of the track.
/// </BLOCKQUOTE></PRE>
///
/// Element "TrackConfiguration" of type "http://www.onvif.org/ver10/schema":TrackConfiguration.
    tt__TrackConfiguration*              TrackConfiguration             1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/recording/wsdl":SetTrackConfiguration
/// @brief "http://www.onvif.org/ver10/recording/wsdl":SetTrackConfiguration is a complexType.
///
class _trc__SetTrackConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Token of the recording the track belongs to.
/// </BLOCKQUOTE></PRE>
///
/// Element "RecordingToken" of type "http://www.onvif.org/ver10/schema":RecordingReference.
    tt__RecordingReference               RecordingToken                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token of the track to be modified.
/// </BLOCKQUOTE></PRE>
///
/// Element "TrackToken" of type "http://www.onvif.org/ver10/schema":TrackReference.
    tt__TrackReference                   TrackToken                     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   New configuration for the track.
/// </BLOCKQUOTE></PRE>
///
/// Element "TrackConfiguration" of type "http://www.onvif.org/ver10/schema":TrackConfiguration.
    tt__TrackConfiguration*              TrackConfiguration             1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/recording/wsdl":SetTrackConfigurationResponse
/// @brief "http://www.onvif.org/ver10/recording/wsdl":SetTrackConfigurationResponse is a complexType.
///
class _trc__SetTrackConfigurationResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/recording/wsdl":CreateRecordingJob
/// @brief "http://www.onvif.org/ver10/recording/wsdl":CreateRecordingJob is a complexType.
///
class _trc__CreateRecordingJob
{ public:
/// <PRE><BLOCKQUOTE>
///   The initial configuration of the new recording job.
/// </BLOCKQUOTE></PRE>
///
/// Element "JobConfiguration" of type "http://www.onvif.org/ver10/schema":RecordingJobConfiguration.
    tt__RecordingJobConfiguration*       JobConfiguration               1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/recording/wsdl":CreateRecordingJobResponse
/// @brief "http://www.onvif.org/ver10/recording/wsdl":CreateRecordingJobResponse is a complexType.
///
class _trc__CreateRecordingJobResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   The JobToken shall identify the created recording job.
/// </BLOCKQUOTE></PRE>
///
/// Element "JobToken" of type "http://www.onvif.org/ver10/schema":RecordingJobReference.
    tt__RecordingJobReference            JobToken                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The JobConfiguration structure shall be the configuration as it is used by the device. This may be different from the
///   JobConfiguration passed to CreateRecordingJob.
/// </BLOCKQUOTE></PRE>
///
/// Element "JobConfiguration" of type "http://www.onvif.org/ver10/schema":RecordingJobConfiguration.
    tt__RecordingJobConfiguration*       JobConfiguration               1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/recording/wsdl":DeleteRecordingJob
/// @brief "http://www.onvif.org/ver10/recording/wsdl":DeleteRecordingJob is a complexType.
///
class _trc__DeleteRecordingJob
{ public:
/// <PRE><BLOCKQUOTE>
///   The token of the job to be deleted.
/// </BLOCKQUOTE></PRE>
///
/// Element "JobToken" of type "http://www.onvif.org/ver10/schema":RecordingJobReference.
    tt__RecordingJobReference            JobToken                       1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/recording/wsdl":DeleteRecordingJobResponse
/// @brief "http://www.onvif.org/ver10/recording/wsdl":DeleteRecordingJobResponse is a complexType.
///
class _trc__DeleteRecordingJobResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/recording/wsdl":GetRecordingJobs
/// @brief "http://www.onvif.org/ver10/recording/wsdl":GetRecordingJobs is a complexType.
///
class _trc__GetRecordingJobs
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/recording/wsdl":GetRecordingJobsResponse
/// @brief "http://www.onvif.org/ver10/recording/wsdl":GetRecordingJobsResponse is a complexType.
///
class _trc__GetRecordingJobsResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   List of recording jobs.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__GetRecordingJobsResponseItem* of length 0..unbounded.
    std::vector<tt__GetRecordingJobsResponseItem*> JobItem                        0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/recording/wsdl":SetRecordingJobConfiguration
/// @brief "http://www.onvif.org/ver10/recording/wsdl":SetRecordingJobConfiguration is a complexType.
///
class _trc__SetRecordingJobConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Token of the job to be modified.
/// </BLOCKQUOTE></PRE>
///
/// Element "JobToken" of type "http://www.onvif.org/ver10/schema":RecordingJobReference.
    tt__RecordingJobReference            JobToken                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   New configuration of the recording job.
/// </BLOCKQUOTE></PRE>
///
/// Element "JobConfiguration" of type "http://www.onvif.org/ver10/schema":RecordingJobConfiguration.
    tt__RecordingJobConfiguration*       JobConfiguration               1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/recording/wsdl":SetRecordingJobConfigurationResponse
/// @brief "http://www.onvif.org/ver10/recording/wsdl":SetRecordingJobConfigurationResponse is a complexType.
///
class _trc__SetRecordingJobConfigurationResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   The JobConfiguration structure shall be the configuration
///   as it is used by the device. This may be different from the JobConfiguration passed to SetRecordingJobConfiguration.
/// </BLOCKQUOTE></PRE>
///
/// Element "JobConfiguration" of type "http://www.onvif.org/ver10/schema":RecordingJobConfiguration.
    tt__RecordingJobConfiguration*       JobConfiguration               1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/recording/wsdl":GetRecordingJobConfiguration
/// @brief "http://www.onvif.org/ver10/recording/wsdl":GetRecordingJobConfiguration is a complexType.
///
class _trc__GetRecordingJobConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Token of the recording job.
/// </BLOCKQUOTE></PRE>
///
/// Element "JobToken" of type "http://www.onvif.org/ver10/schema":RecordingJobReference.
    tt__RecordingJobReference            JobToken                       1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/recording/wsdl":GetRecordingJobConfigurationResponse
/// @brief "http://www.onvif.org/ver10/recording/wsdl":GetRecordingJobConfigurationResponse is a complexType.
///
class _trc__GetRecordingJobConfigurationResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Current configuration of the recording job.
/// </BLOCKQUOTE></PRE>
///
/// Element "JobConfiguration" of type "http://www.onvif.org/ver10/schema":RecordingJobConfiguration.
    tt__RecordingJobConfiguration*       JobConfiguration               1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/recording/wsdl":SetRecordingJobMode
/// @brief "http://www.onvif.org/ver10/recording/wsdl":SetRecordingJobMode is a complexType.
///
class _trc__SetRecordingJobMode
{ public:
/// <PRE><BLOCKQUOTE>
///   Token of the recording job.
/// </BLOCKQUOTE></PRE>
///
/// Element "JobToken" of type "http://www.onvif.org/ver10/schema":RecordingJobReference.
    tt__RecordingJobReference            JobToken                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The new mode for the recording job.
/// </BLOCKQUOTE></PRE>
///
/// Element "Mode" of type "http://www.onvif.org/ver10/schema":RecordingJobMode.
    tt__RecordingJobMode                 Mode                           1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/recording/wsdl":SetRecordingJobModeResponse
/// @brief "http://www.onvif.org/ver10/recording/wsdl":SetRecordingJobModeResponse is a complexType.
///
class _trc__SetRecordingJobModeResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/recording/wsdl":GetRecordingJobState
/// @brief "http://www.onvif.org/ver10/recording/wsdl":GetRecordingJobState is a complexType.
///
class _trc__GetRecordingJobState
{ public:
/// <PRE><BLOCKQUOTE>
///   Token of the recording job.
/// </BLOCKQUOTE></PRE>
///
/// Element "JobToken" of type "http://www.onvif.org/ver10/schema":RecordingJobReference.
    tt__RecordingJobReference            JobToken                       1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/recording/wsdl":GetRecordingJobStateResponse
/// @brief "http://www.onvif.org/ver10/recording/wsdl":GetRecordingJobStateResponse is a complexType.
///
class _trc__GetRecordingJobStateResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   The current state of the recording job.
/// </BLOCKQUOTE></PRE>
///
/// Element "State" of type "http://www.onvif.org/ver10/schema":RecordingJobStateInformation.
    tt__RecordingJobStateInformation*    State                          1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/recording/wsdl":GetRecordingOptions
/// @brief "http://www.onvif.org/ver10/recording/wsdl":GetRecordingOptions is a complexType.
///
class _trc__GetRecordingOptions
{ public:
/// <PRE><BLOCKQUOTE>
///   Token of the recording.
/// </BLOCKQUOTE></PRE>
///
/// Element "RecordingToken" of type "http://www.onvif.org/ver10/schema":RecordingReference.
    tt__RecordingReference               RecordingToken                 1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/recording/wsdl":GetRecordingOptionsResponse
/// @brief "http://www.onvif.org/ver10/recording/wsdl":GetRecordingOptionsResponse is a complexType.
///
class _trc__GetRecordingOptionsResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Configuration of the recording.
/// </BLOCKQUOTE></PRE>
///
/// Element "Options" of type "http://www.onvif.org/ver10/recording/wsdl":RecordingOptions.
    trc__RecordingOptions*               Options                        1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/recording/wsdl":ExportRecordedData
/// @brief "http://www.onvif.org/ver10/recording/wsdl":ExportRecordedData is a complexType.
///
class _trc__ExportRecordedData
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicates the selection criterion on the existing recordings. .
/// </BLOCKQUOTE></PRE>
///
/// Element "SearchScope" of type "http://www.onvif.org/ver10/schema":SearchScope.
    tt__SearchScope*                     SearchScope                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates which export file format to be used.
/// </BLOCKQUOTE></PRE>
///
/// Element "FileFormat" of type xs:string.
    std::string                          FileFormat                     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates the target storage and relative directory path.
/// </BLOCKQUOTE></PRE>
///
/// Element "StorageDestination" of type "http://www.onvif.org/ver10/schema":StorageReferencePath.
    tt__StorageReferencePath*            StorageDestination             1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/recording/wsdl":ExportRecordedDataResponse
/// @brief "http://www.onvif.org/ver10/recording/wsdl":ExportRecordedDataResponse is a complexType.
///
class _trc__ExportRecordedDataResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Unique operation token for client to associate the relevant events.
/// </BLOCKQUOTE></PRE>
///
/// Element "OperationToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   OperationToken                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of exported file names. The device can also use AsyncronousOperationStatus event to publish this list.
/// </BLOCKQUOTE></PRE>
///
/// Vector of std::string of length 0..unbounded.
    std::vector<std::string            > FileNames                      0;	///< Multiple elements.
    class _trc__ExportRecordedDataResponse_Extension
    { public:
/// <any namespace="##any">
    xsd__anyType                         __any                         0;	///< Store any element content in DOM soap_dom_element node.
    }                                   *Extension                      0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/recording/wsdl":StopExportRecordedData
/// @brief "http://www.onvif.org/ver10/recording/wsdl":StopExportRecordedData is a complexType.
///
class _trc__StopExportRecordedData
{ public:
/// <PRE><BLOCKQUOTE>
///   Unique ExportRecordedData operation token
/// </BLOCKQUOTE></PRE>
///
/// Element "OperationToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   OperationToken                 1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/recording/wsdl":StopExportRecordedDataResponse
/// @brief "http://www.onvif.org/ver10/recording/wsdl":StopExportRecordedDataResponse is a complexType.
///
class _trc__StopExportRecordedDataResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Progress percentage of ExportRecordedData operation.
/// </BLOCKQUOTE></PRE>
///
/// Element "Progress" of type xs:float.
    float                                Progress                       1;	///< Required element.

/// </BLOCKQUOTE></PRE>
///
/// Element "FileProgressStatus" of type "http://www.onvif.org/ver10/schema":ArrayOfFileProgress.
    tt__ArrayOfFileProgress*             FileProgressStatus             1;	///< Required element.
/// <any namespace="##any">
    xsd__anyType                         __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/recording/wsdl":GetExportRecordedDataState
/// @brief "http://www.onvif.org/ver10/recording/wsdl":GetExportRecordedDataState is a complexType.
///
class _trc__GetExportRecordedDataState
{ public:
/// <PRE><BLOCKQUOTE>
///   Unique ExportRecordedData operation token
/// </BLOCKQUOTE></PRE>
///
/// Element "OperationToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   OperationToken                 1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/recording/wsdl":GetExportRecordedDataStateResponse
/// @brief "http://www.onvif.org/ver10/recording/wsdl":GetExportRecordedDataStateResponse is a complexType.
///
class _trc__GetExportRecordedDataStateResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Progress percentage of ExportRecordedData operation.
/// </BLOCKQUOTE></PRE>
///
/// Element "Progress" of type xs:float.
    float                                Progress                       1;	///< Required element.

/// </BLOCKQUOTE></PRE>
///
/// Element "FileProgressStatus" of type "http://www.onvif.org/ver10/schema":ArrayOfFileProgress.
    tt__ArrayOfFileProgress*             FileProgressStatus             1;	///< Required element.
/// <any namespace="##any">
    xsd__anyType                         __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.onvif.org/ver10/schema                                        *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver10/schema":IntRange is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Range of values greater equal Min value and less equal Max value.
/// </BLOCKQUOTE></PRE>
///
class tt__IntRange : public xsd__anyType
{ public:
/// Element "Min" of type xs:int.
    int                                  Min                            1;	///< Required element.
/// Element "Max" of type xs:int.
    int                                  Max                            1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":Vector2D is a complexType.
///
class tt__Vector2D : public xsd__anyType
{ public:
/// Attribute "x" of type xs:float.
  @ float                                x                              1;	///< Required attribute.
/// Attribute "y" of type xs:float.
  @ float                                y                              1;	///< Required attribute.
/// <PRE><BLOCKQUOTE>
///   Pan/tilt coordinate space selector. The following options are defined:<ul>
///   <li> http://www.onvif.org/ver10/tptz/PanTiltSpaces/PositionGenericSpace</li>
///   <li> http://www.onvif.org/ver10/tptz/PanTiltSpaces/TranslationGenericSpace</li>
///   <li> http://www.onvif.org/ver10/tptz/PanTiltSpaces/VelocityGenericSpace</li>
///   <li> http://www.onvif.org/ver10/tptz/PanTiltSpaces/GenericSpeedSpace</li>
///   </ul>
/// </BLOCKQUOTE></PRE>
///
/// Attribute "space" of type xs:anyURI.
  @ xsd__anyURI*                         space                          0;	///< Optional attribute.
};

/// @brief "http://www.onvif.org/ver10/schema":Vector1D is a complexType.
///
class tt__Vector1D : public xsd__anyType
{ public:
/// Attribute "x" of type xs:float.
  @ float                                x                              1;	///< Required attribute.
/// <PRE><BLOCKQUOTE>
///   Zoom coordinate space selector. The following options are defined:<ul style="">
///   <li> http://www.onvif.org/ver10/tptz/ZoomSpaces/PositionGenericSpace</li>
///   <li> http://www.onvif.org/ver10/tptz/ZoomSpaces/TranslationGenericSpace</li>
///   <li> http://www.onvif.org/ver10/tptz/ZoomSpaces/VelocityGenericSpace</li>
///   <li> http://www.onvif.org/ver10/tptz/ZoomSpaces/ZoomGenericSpeedSpace</li>
///   </ul>
/// </BLOCKQUOTE></PRE>
///
/// Attribute "space" of type xs:anyURI.
  @ xsd__anyURI*                         space                          0;	///< Optional attribute.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZVector is a complexType.
///
class tt__PTZVector : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Pan and tilt position. The x component corresponds to pan and the y component to tilt.
/// </BLOCKQUOTE></PRE>
///
/// Element "PanTilt" of type "http://www.onvif.org/ver10/schema":Vector2D.
    tt__Vector2D*                        PanTilt                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   A zoom position.
/// </BLOCKQUOTE></PRE>
///
/// Element "Zoom" of type "http://www.onvif.org/ver10/schema":Vector1D.
    tt__Vector1D*                        Zoom                           0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZStatus is a complexType.
///
class tt__PTZStatus : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Specifies the absolute position of the PTZ unit together with the Space references. The default absolute spaces of the corresponding PTZ configuration MUST be referenced within the Position element.
/// </BLOCKQUOTE></PRE>
///
/// Element "Position" of type "http://www.onvif.org/ver10/schema":PTZVector.
    tt__PTZVector*                       Position                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Indicates if the Pan/Tilt/Zoom device unit is currently moving, idle or in an unknown state.
/// </BLOCKQUOTE></PRE>
///
/// Element "MoveStatus" of type "http://www.onvif.org/ver10/schema":PTZMoveStatus.
    tt__PTZMoveStatus*                   MoveStatus                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   States a current PTZ error.
/// </BLOCKQUOTE></PRE>
///
/// Element "Error" of type xs:string.
    std::string*                         Error                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Specifies the UTC time when this status was generated.
/// </BLOCKQUOTE></PRE>
///
/// Element "UtcTime" of type xs:dateTime.
    xsd__dateTime                        UtcTime                        1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZMoveStatus is a complexType.
///
class tt__PTZMoveStatus : public xsd__anyType
{ public:

/// </BLOCKQUOTE></PRE>
///
/// Element "PanTilt" of type "http://www.onvif.org/ver10/schema":MoveStatus.
    enum tt__MoveStatus*                 PanTilt                        0;	///< Optional element.

/// </BLOCKQUOTE></PRE>
///
/// Element "Zoom" of type "http://www.onvif.org/ver10/schema":MoveStatus.
    enum tt__MoveStatus*                 Zoom                           0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":Vector is a complexType.
///
class tt__Vector : public xsd__anyType
{ public:
/// Attribute "x" of type xs:float.
  @ float*                               x                              0;	///< Optional attribute.
/// Attribute "y" of type xs:float.
  @ float*                               y                              0;	///< Optional attribute.
};

/// @brief "http://www.onvif.org/ver10/schema":Rectangle is a complexType.
///
class tt__Rectangle : public xsd__anyType
{ public:
/// Attribute "bottom" of type xs:float.
  @ float*                               bottom                         0;	///< Optional attribute.
/// Attribute "top" of type xs:float.
  @ float*                               top                            0;	///< Optional attribute.
/// Attribute "right" of type xs:float.
  @ float*                               right                          0;	///< Optional attribute.
/// Attribute "left" of type xs:float.
  @ float*                               left                           0;	///< Optional attribute.
};

/// @brief "http://www.onvif.org/ver10/schema":Polygon is a complexType.
///
class tt__Polygon : public xsd__anyType
{ public:
/// Vector of tt__Vector* of length 3..unbounded.
    std::vector<tt__Vector*            > Point                          3;	///< Multiple elements.
};

/// @brief "http://www.onvif.org/ver10/schema":Color is a complexType.
///
class tt__Color : public xsd__anyType
{ public:
/// Attribute "X" of type xs:float.
  @ float                                X                              1;	///< Required attribute.
/// Attribute "Y" of type xs:float.
  @ float                                Y                              1;	///< Required attribute.
/// Attribute "Z" of type xs:float.
  @ float                                Z                              1;	///< Required attribute.
/// <PRE><BLOCKQUOTE>
///   Acceptable values:
///   <ul>
///   <li>http://www.onvif.org/ver10/colorspace/YCbCr - YCbCr
///   <ul><li>X attribute = Y value</li>
///   <li>Y attribute = Cb value</li>
///   <li>Z attribute = Cr value</li></ul>
///   </li>
///   <li>http://www.onvif.org/ver10/colorspace/RGB - RGB
///   <ul><li>X attribute = R value</li>
///   <li>Y attribute = G value</li>
///   <li>Z attribute = B value</li></ul>
///   </li>
///   </ul>
///   If the Colorspace attribute is absent, YCbCr is implied.
///   Deprecated values:
///   <ul>
///   <li>http://www.onvif.org/ver10/colorspace/CIELUV - CIE LUV</li>
///   <li>http://www.onvif.org/ver10/colorspace/CIELAB - CIE 1976 (L*a*b*)</li>
///   <li>http://www.onvif.org/ver10/colorspace/HSV - HSV</li>
///   </ul>
/// </BLOCKQUOTE></PRE>
///
/// Attribute "Colorspace" of type xs:anyURI.
  @ xsd__anyURI*                         Colorspace                     0;	///< Optional attribute.
};

/// @brief "http://www.onvif.org/ver10/schema":ColorCovariance is a complexType.
///
class tt__ColorCovariance : public xsd__anyType
{ public:
/// Attribute "XX" of type xs:float.
  @ float                                XX                             1;	///< Required attribute.
/// Attribute "YY" of type xs:float.
  @ float                                YY                             1;	///< Required attribute.
/// Attribute "ZZ" of type xs:float.
  @ float                                ZZ                             1;	///< Required attribute.
/// Attribute "XY" of type xs:float.
  @ float*                               XY                             0;	///< Optional attribute.
/// Attribute "XZ" of type xs:float.
  @ float*                               XZ                             0;	///< Optional attribute.
/// Attribute "YZ" of type xs:float.
  @ float*                               YZ                             0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Acceptable values are the same as in tt:Color.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "Colorspace" of type xs:anyURI.
  @ xsd__anyURI*                         Colorspace                     0;	///< Optional attribute.
};

/// @brief "http://www.onvif.org/ver10/schema":ColorDescriptor is a complexType.
///
class tt__ColorDescriptor : public xsd__anyType
{ public:
/// Vector of ColorCluster of length 0..unbounded.
    std::vector<
    class _tt__ColorDescriptor_ColorCluster
    { public:
/// Element "Color" of type "http://www.onvif.org/ver10/schema":Color.
    tt__Color*                           Color                          1;	///< Required element.
/// Element "Weight" of type xs:float.
    float*                               Weight                         0;	///< Optional element.
/// Element "Covariance" of type "http://www.onvif.org/ver10/schema":ColorCovariance.
    tt__ColorCovariance*                 Covariance                     0;	///< Optional element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
    }>                                   ColorCluster                   0;	///< Multiple elements.
/// Element "Extension" of type xs:anyType.
    xsd__anyType*                        Extension                      0;	///< Optional element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":Transformation is a complexType.
///
class tt__Transformation : public xsd__anyType
{ public:
/// Element "Translate" of type "http://www.onvif.org/ver10/schema":Vector.
    tt__Vector*                          Translate                      0;	///< Optional element.
/// Element "Scale" of type "http://www.onvif.org/ver10/schema":Vector.
    tt__Vector*                          Scale                          0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":TransformationExtension.
    tt__TransformationExtension*         Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":TransformationExtension is a complexType.
///
class tt__TransformationExtension : public xsd__anyType
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
};

/// @brief "http://www.onvif.org/ver10/schema":GeoLocation is a complexType.
///
class tt__GeoLocation : public xsd__anyType
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <PRE><BLOCKQUOTE>
///   East west location as angle.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "lon" of type xs:double.
  @ double*                              lon                            0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   North south location as angle.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "lat" of type xs:double.
  @ double*                              lat                            0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Hight in meters above sea level.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "elevation" of type xs:float.
  @ float*                               elevation                      0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":GeoOrientation is a complexType.
///
class tt__GeoOrientation : public xsd__anyType
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <PRE><BLOCKQUOTE>
///   Rotation around the x axis.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "roll" of type xs:float.
  @ float*                               roll                           0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Rotation around the y axis.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "pitch" of type xs:float.
  @ float*                               pitch                          0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Rotation around the z axis.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "yaw" of type xs:float.
  @ float*                               yaw                            0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":LocalLocation is a complexType.
///
class tt__LocalLocation : public xsd__anyType
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <PRE><BLOCKQUOTE>
///   East west location as angle.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "x" of type xs:float.
  @ float*                               x                              0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   North south location as angle.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "y" of type xs:float.
  @ float*                               y                              0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Offset in meters from the sea level.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "z" of type xs:float.
  @ float*                               z                              0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":LocalOrientation is a complexType.
///
class tt__LocalOrientation : public xsd__anyType
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <PRE><BLOCKQUOTE>
///   Rotation around the y axis.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "pan" of type xs:float.
  @ float*                               pan                            0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Rotation around the z axis.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "tilt" of type xs:float.
  @ float*                               tilt                           0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Rotation around the x axis.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "roll" of type xs:float.
  @ float*                               roll                           0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":LocationEntity is a complexType.
///
class tt__LocationEntity : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Location on earth.
/// </BLOCKQUOTE></PRE>
///
/// Element "GeoLocation" of type "http://www.onvif.org/ver10/schema":GeoLocation.
    tt__GeoLocation*                     GeoLocation                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Orientation relative to earth.
/// </BLOCKQUOTE></PRE>
///
/// Element "GeoOrientation" of type "http://www.onvif.org/ver10/schema":GeoOrientation.
    tt__GeoOrientation*                  GeoOrientation                 0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Indoor location offset.
/// </BLOCKQUOTE></PRE>
///
/// Element "LocalLocation" of type "http://www.onvif.org/ver10/schema":LocalLocation.
    tt__LocalLocation*                   LocalLocation                  0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Indoor orientation offset.
/// </BLOCKQUOTE></PRE>
///
/// Element "LocalOrientation" of type "http://www.onvif.org/ver10/schema":LocalOrientation.
    tt__LocalOrientation*                LocalOrientation               0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Entity type the entry refers to, use a value from the tt:Entity enumeration.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "Entity" of type xs:string.
  @ std::string*                         Entity                         0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Optional entity token.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "Token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken*                  Token                          0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   If this value is true the entity cannot be deleted.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "Fixed" of type xs:boolean.
  @ bool*                                Fixed                          0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Optional reference to the XAddr of another devices DeviceManagement service.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "GeoSource" of type xs:anyURI.
  @ xsd__anyURI*                         GeoSource                      0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   If set the geo location is obtained internally.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "AutoGeo" of type xs:boolean.
  @ bool*                                AutoGeo                        0;	///< Optional attribute.
};

/// @brief "http://www.onvif.org/ver10/schema":DeviceEntity is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Base class for physical entities like inputs and outputs.
/// </BLOCKQUOTE></PRE>
///
/// This type is extended by:
/// - "http://www.onvif.org/ver10/deviceIO/wsdl":SerialPort as tmd__SerialPort
/// - "http://www.onvif.org/ver10/device/wsdl":StorageConfiguration as tds__StorageConfiguration
/// - "http://www.onvif.org/ver10/schema":VideoSource as tt__VideoSource
/// - "http://www.onvif.org/ver10/schema":AudioSource as tt__AudioSource
/// - "http://www.onvif.org/ver10/schema":VideoOutput as tt__VideoOutput
/// - "http://www.onvif.org/ver10/schema":AudioOutput as tt__AudioOutput
/// - "http://www.onvif.org/ver10/schema":NetworkInterface as tt__NetworkInterface
/// - "http://www.onvif.org/ver10/schema":RelayOutput as tt__RelayOutput
/// - "http://www.onvif.org/ver10/schema":DigitalInput as tt__DigitalInput
/// - "http://www.onvif.org/ver10/schema":PTZNode as tt__PTZNode
/// - "http://www.onvif.org/ver10/schema":OSDConfiguration as tt__OSDConfiguration
///
class tt__DeviceEntity : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Unique identifier referencing the physical entity.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   token                          1;	///< Required attribute.
};

/// @brief "http://www.onvif.org/ver10/schema":IntRectangle is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Rectangle defined by lower left corner position and size. Units are pixel.
/// </BLOCKQUOTE></PRE>
///
class tt__IntRectangle : public xsd__anyType
{ public:
/// Attribute "x" of type xs:int.
  @ int                                  x                              1;	///< Required attribute.
/// Attribute "y" of type xs:int.
  @ int                                  y                              1;	///< Required attribute.
/// Attribute "width" of type xs:int.
  @ int                                  width                          1;	///< Required attribute.
/// Attribute "height" of type xs:int.
  @ int                                  height                         1;	///< Required attribute.
};

/// @brief "http://www.onvif.org/ver10/schema":IntRectangleRange is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Range of a rectangle. The rectangle itself is defined by lower left corner position and size. Units are pixel.
/// </BLOCKQUOTE></PRE>
///
class tt__IntRectangleRange : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Range of X-axis.
/// </BLOCKQUOTE></PRE>
///
/// Element "XRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        XRange                         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Range of Y-axis.
/// </BLOCKQUOTE></PRE>
///
/// Element "YRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        YRange                         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Range of width.
/// </BLOCKQUOTE></PRE>
///
/// Element "WidthRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        WidthRange                     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Range of height.
/// </BLOCKQUOTE></PRE>
///
/// Element "HeightRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        HeightRange                    1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":FloatRange is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Range of values greater equal Min value and less equal Max value.
/// </BLOCKQUOTE></PRE>
///
class tt__FloatRange : public xsd__anyType
{ public:
/// Element "Min" of type xs:float.
    float                                Min                            1;	///< Required element.
/// Element "Max" of type xs:float.
    float                                Max                            1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":DurationRange is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Range of duration greater equal Min duration and less equal Max duration.
/// </BLOCKQUOTE></PRE>
///
class tt__DurationRange : public xsd__anyType
{ public:
/// Element "Min" of type xs:duration.
    xsd__duration                        Min                            1;	///< Required element.
/// Element "Max" of type xs:duration.
    xsd__duration                        Max                            1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":IntItems is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   List of values.
/// </BLOCKQUOTE></PRE>
///
class tt__IntItems : public xsd__anyType
{ public:
/// Vector of int of length 0..unbounded.
    std::vector<int                    > Items                          0;	///< Multiple elements.
};

/// @brief "http://www.onvif.org/ver10/schema":FloatItems is a complexType.
///
class tt__FloatItems : public xsd__anyType
{ public:
/// Vector of float of length 0..unbounded.
    std::vector<float                  > Items                          0;	///< Multiple elements.
};

/// @brief "http://www.onvif.org/ver10/schema":AnyHolder is a complexType.
///
class tt__AnyHolder : public xsd__anyType
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":VideoSourceExtension is a complexType.
///
class tt__VideoSourceExtension : public xsd__anyType
{ public:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <PRE><BLOCKQUOTE>
///   Optional configuration of the image sensor. To be used if imaging service 2.00 is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "Imaging" of type "http://www.onvif.org/ver10/schema":ImagingSettings20.
    tt__ImagingSettings20*               Imaging                        0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":VideoSourceExtension2.
    tt__VideoSourceExtension2*           Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":VideoSourceExtension2 is a complexType.
///
class tt__VideoSourceExtension2 : public xsd__anyType
{ public:
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
};

/// @brief "http://www.onvif.org/ver10/schema":Profile is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   A media profile consists of a set of media configurations. Media profiles are used by a client
///   to configure properties of a media stream from an NVT.<br/>
///   An NVT shall provide at least one media profile at boot. An NVT should provide ready to use
///   profiles for the most common media configurations that the device offers.<br/>
///   A profile consists of a set of interconnected configuration entities. Configurations are provided
///   by the NVT and can be either static or created dynamically by the NVT. For example, the
///   dynamic configurations can be created by the NVT depending on current available encoding
///   resources.
/// </BLOCKQUOTE></PRE>
///
class tt__Profile : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   User readable name of the profile.
/// </BLOCKQUOTE></PRE>
///
/// Element "Name" of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional configuration of the Video input.
/// </BLOCKQUOTE></PRE>
///
/// Element "VideoSourceConfiguration" of type "http://www.onvif.org/ver10/schema":VideoSourceConfiguration.
    tt__VideoSourceConfiguration*        VideoSourceConfiguration       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional configuration of the Audio input.
/// </BLOCKQUOTE></PRE>
///
/// Element "AudioSourceConfiguration" of type "http://www.onvif.org/ver10/schema":AudioSourceConfiguration.
    tt__AudioSourceConfiguration*        AudioSourceConfiguration       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional configuration of the Video encoder.
/// </BLOCKQUOTE></PRE>
///
/// Element "VideoEncoderConfiguration" of type "http://www.onvif.org/ver10/schema":VideoEncoderConfiguration.
    tt__VideoEncoderConfiguration*       VideoEncoderConfiguration      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional configuration of the Audio encoder.
/// </BLOCKQUOTE></PRE>
///
/// Element "AudioEncoderConfiguration" of type "http://www.onvif.org/ver10/schema":AudioEncoderConfiguration.
    tt__AudioEncoderConfiguration*       AudioEncoderConfiguration      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional configuration of the video analytics module and rule engine.
/// </BLOCKQUOTE></PRE>
///
/// Element "VideoAnalyticsConfiguration" of type "http://www.onvif.org/ver10/schema":VideoAnalyticsConfiguration.
    tt__VideoAnalyticsConfiguration*     VideoAnalyticsConfiguration    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional configuration of the pan tilt zoom unit.
/// </BLOCKQUOTE></PRE>
///
/// Element "PTZConfiguration" of type "http://www.onvif.org/ver10/schema":PTZConfiguration.
    tt__PTZConfiguration*                PTZConfiguration               0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional configuration of the metadata stream.
/// </BLOCKQUOTE></PRE>
///
/// Element "MetadataConfiguration" of type "http://www.onvif.org/ver10/schema":MetadataConfiguration.
    tt__MetadataConfiguration*           MetadataConfiguration          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Extensions defined in ONVIF 2.0
/// </BLOCKQUOTE></PRE>
///
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":ProfileExtension.
    tt__ProfileExtension*                Extension                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Unique identifier of the profile.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   token                          1;	///< Required attribute.
/// <PRE><BLOCKQUOTE>
///   A value of true signals that the profile cannot be deleted. Default is false.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "fixed" of type xs:boolean.
  @ bool*                                fixed                          0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":ProfileExtension is a complexType.
///
class tt__ProfileExtension : public xsd__anyType
{ public:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <PRE><BLOCKQUOTE>
///   Optional configuration of the Audio output.
/// </BLOCKQUOTE></PRE>
///
/// Element "AudioOutputConfiguration" of type "http://www.onvif.org/ver10/schema":AudioOutputConfiguration.
    tt__AudioOutputConfiguration*        AudioOutputConfiguration       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional configuration of the Audio decoder.
/// </BLOCKQUOTE></PRE>
///
/// Element "AudioDecoderConfiguration" of type "http://www.onvif.org/ver10/schema":AudioDecoderConfiguration.
    tt__AudioDecoderConfiguration*       AudioDecoderConfiguration      0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":ProfileExtension2.
    tt__ProfileExtension2*               Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":ProfileExtension2 is a complexType.
///
class tt__ProfileExtension2 : public xsd__anyType
{ public:
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
};

/// @brief "http://www.onvif.org/ver10/schema":ConfigurationEntity is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Base type defining the common properties of a configuration.
/// </BLOCKQUOTE></PRE>
///
/// This type is extended by:
/// - "http://www.onvif.org/ver10/schema":VideoSourceConfiguration as tt__VideoSourceConfiguration
/// - "http://www.onvif.org/ver10/schema":VideoEncoderConfiguration as tt__VideoEncoderConfiguration
/// - "http://www.onvif.org/ver10/schema":VideoEncoder2Configuration as tt__VideoEncoder2Configuration
/// - "http://www.onvif.org/ver10/schema":AudioSourceConfiguration as tt__AudioSourceConfiguration
/// - "http://www.onvif.org/ver10/schema":AudioEncoderConfiguration as tt__AudioEncoderConfiguration
/// - "http://www.onvif.org/ver10/schema":AudioEncoder2Configuration as tt__AudioEncoder2Configuration
/// - "http://www.onvif.org/ver10/schema":VideoAnalyticsConfiguration as tt__VideoAnalyticsConfiguration
/// - "http://www.onvif.org/ver10/schema":MetadataConfiguration as tt__MetadataConfiguration
/// - "http://www.onvif.org/ver10/schema":VideoOutputConfiguration as tt__VideoOutputConfiguration
/// - "http://www.onvif.org/ver10/schema":AudioOutputConfiguration as tt__AudioOutputConfiguration
/// - "http://www.onvif.org/ver10/schema":AudioDecoderConfiguration as tt__AudioDecoderConfiguration
/// - "http://www.onvif.org/ver10/schema":PTZConfiguration as tt__PTZConfiguration
/// - "http://www.onvif.org/ver10/schema":AnalyticsEngine as tt__AnalyticsEngine
/// - "http://www.onvif.org/ver10/schema":AnalyticsEngineInput as tt__AnalyticsEngineInput
/// - "http://www.onvif.org/ver10/schema":AnalyticsEngineControl as tt__AnalyticsEngineControl
///
class tt__ConfigurationEntity : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   User readable name. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
///
/// Element "Name" of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Number of internal references currently using this configuration. <p style='margin:0'>This informational parameter is read-only. Deprecated for Media2 Service.</p>
/// </BLOCKQUOTE></PRE>
///
/// Element "UseCount" of type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token that uniquely references this configuration. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   token                          1;	///< Required attribute.
};

/// @brief "http://www.onvif.org/ver10/schema":VideoSourceConfigurationExtension is a complexType.
///
class tt__VideoSourceConfigurationExtension : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Optional element to configure rotation of captured image.
///   What resolutions a device supports shall be unaffected by the Rotate parameters.<br/>
///   If a device is configured with Rotate=AUTO, the device shall take control over the Degree parameter and automatically update it so that a client can query current rotation.<br/>
///   The device shall automatically apply the same rotation to its pan/tilt control direction depending on the following condition: if Reverse=AUTO in PTControlDirection or if the device doesnt support Reverse in PTControlDirection
/// </BLOCKQUOTE></PRE>
///
/// Element "Rotate" of type "http://www.onvif.org/ver10/schema":Rotate.
    tt__Rotate*                          Rotate                         0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":VideoSourceConfigurationExtension2.
    tt__VideoSourceConfigurationExtension2*  Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":VideoSourceConfigurationExtension2 is a complexType.
///
class tt__VideoSourceConfigurationExtension2 : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Optional element describing the geometric lens distortion. Multiple instances for future variable lens support.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__LensDescription* of length 0..unbounded.
    std::vector<tt__LensDescription*   > LensDescription                0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Optional element describing the scene orientation in the cameras field of view.
/// </BLOCKQUOTE></PRE>
///
/// Element "SceneOrientation" of type "http://www.onvif.org/ver10/schema":SceneOrientation.
    tt__SceneOrientation*                SceneOrientation               0;	///< Optional element.
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
};

/// @brief "http://www.onvif.org/ver10/schema":Rotate is a complexType.
///
class tt__Rotate : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Parameter to enable/disable Rotation feature.
/// </BLOCKQUOTE></PRE>
///
/// Element "Mode" of type "http://www.onvif.org/ver10/schema":RotateMode.
    enum tt__RotateMode                  Mode                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional parameter to configure how much degree of clockwise rotation of image for On mode. Omitting this parameter for On mode means 180 degree rotation.
/// </BLOCKQUOTE></PRE>
///
/// Element "Degree" of type xs:int.
    int*                                 Degree                         0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":RotateExtension.
    tt__RotateExtension*                 Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":RotateExtension is a complexType.
///
class tt__RotateExtension : public xsd__anyType
{ public:
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
};

/// @brief "http://www.onvif.org/ver10/schema":LensProjection is a complexType.
///
class tt__LensProjection : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Angle of incidence.
/// </BLOCKQUOTE></PRE>
///
/// Element "Angle" of type xs:float.
    float                                Angle                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Mapping radius as a consequence of the emergent angle.
/// </BLOCKQUOTE></PRE>
///
/// Element "Radius" of type xs:float.
    float                                Radius                         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional ray absorption at the given angle due to vignetting. A value of one means no absorption.
/// </BLOCKQUOTE></PRE>
///
/// Element "Transmittance" of type xs:float.
    float*                               Transmittance                  0;	///< Optional element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":LensOffset is a complexType.
///
class tt__LensOffset : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Optional horizontal offset of the lens center in normalized coordinates.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "x" of type xs:float.
  @ float*                               x                              0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Optional vertical offset of the lens center in normalized coordinates.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "y" of type xs:float.
  @ float*                               y                              0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":LensDescription is a complexType.
///
class tt__LensDescription : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Offset of the lens center to the imager center in normalized coordinates.
/// </BLOCKQUOTE></PRE>
///
/// Element "Offset" of type "http://www.onvif.org/ver10/schema":LensOffset.
    tt__LensOffset*                      Offset                         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Radial description of the projection characteristics. The resulting curve is defined by the B-Spline interpolation over the given elements. The element for Radius zero shall not be provided. The projection points shall be ordered with ascending Radius. Items outside the last projection Radius shall be assumed to be invisible (black).
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__LensProjection* of length 1..unbounded.
    std::vector<tt__LensProjection*    > Projection                     1;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Compensation of the x coordinate needed for the ONVIF normalized coordinate system.
/// </BLOCKQUOTE></PRE>
///
/// Element "XFactor" of type xs:float.
    float                                XFactor                        1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <PRE><BLOCKQUOTE>
///   Optional focal length of the optical system.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "FocalLength" of type xs:float.
  @ float*                               FocalLength                    0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":VideoSourceConfigurationOptions is a complexType.
///
class tt__VideoSourceConfigurationOptions : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Supported range for the capturing area.
///   Device that does not support cropped streaming shall express BoundsRange option as mentioned below
///   BoundsRange->XRange and BoundsRange->YRange with same Min/Max values HeightRange and WidthRange Min/Max values same as VideoSource Height and Width Limits.
/// </BLOCKQUOTE></PRE>
///
/// Element "BoundsRange" of type "http://www.onvif.org/ver10/schema":IntRectangleRange.
    tt__IntRectangleRange*               BoundsRange                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of physical inputs.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__ReferenceToken of length 1..unbounded.
    std::vector<tt__ReferenceToken     > VideoSourceTokensAvailable     1;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":VideoSourceConfigurationOptionsExtension.
    tt__VideoSourceConfigurationOptionsExtension*  Extension                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Maximum number of profiles.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "MaximumNumberOfProfiles" of type xs:int.
  @ int*                                 MaximumNumberOfProfiles        0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":VideoSourceConfigurationOptionsExtension is a complexType.
///
class tt__VideoSourceConfigurationOptionsExtension : public xsd__anyType
{ public:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <PRE><BLOCKQUOTE>
///   Options of parameters for Rotation feature.
/// </BLOCKQUOTE></PRE>
///
/// Element "Rotate" of type "http://www.onvif.org/ver10/schema":RotateOptions.
    tt__RotateOptions*                   Rotate                         0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":VideoSourceConfigurationOptionsExtension2.
    tt__VideoSourceConfigurationOptionsExtension2*  Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":VideoSourceConfigurationOptionsExtension2 is a complexType.
///
class tt__VideoSourceConfigurationOptionsExtension2 : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Scene orientation modes supported by the device for this configuration.
/// </BLOCKQUOTE></PRE>
///
/// Vector of enum tt__SceneOrientationMode of length 0..unbounded.
    std::vector<enum tt__SceneOrientationMode> SceneOrientationMode           0;	///< Multiple elements.
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
};

/// @brief "http://www.onvif.org/ver10/schema":RotateOptions is a complexType.
///
class tt__RotateOptions : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Supported options of Rotate mode parameter.
/// </BLOCKQUOTE></PRE>
///
/// Vector of enum tt__RotateMode of length 1..unbounded.
    std::vector<enum tt__RotateMode    > Mode                           1;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   List of supported degree value for rotation.
/// </BLOCKQUOTE></PRE>
///
/// Element "DegreeList" of type "http://www.onvif.org/ver10/schema":IntItems.
    tt__IntItems*                        DegreeList                     0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":RotateOptionsExtension.
    tt__RotateOptionsExtension*          Extension                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   After setting the rotation, if a device starts to reboot this value is true.
///   If a device can handle rotation setting without rebooting this value is false.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "Reboot" of type xs:boolean.
  @ bool*                                Reboot                         0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":RotateOptionsExtension is a complexType.
///
class tt__RotateOptionsExtension : public xsd__anyType
{ public:
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
};

/// @brief "http://www.onvif.org/ver10/schema":SceneOrientation is a complexType.
///
class tt__SceneOrientation : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Parameter to assign the way the camera determines the scene orientation.
/// </BLOCKQUOTE></PRE>
///
/// Element "Mode" of type "http://www.onvif.org/ver10/schema":SceneOrientationMode.
    enum tt__SceneOrientationMode        Mode                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Assigned or determined scene orientation based on the Mode. When assigning the Mode to AUTO, this field is optional and will be ignored by the device. When assigning the Mode to MANUAL, this field is required and the device will return an InvalidArgs fault if missing.
/// </BLOCKQUOTE></PRE>
///
/// Element "Orientation" of type xs:string.
    std::string*                         Orientation                    0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":VideoResolution is a complexType.
///
class tt__VideoResolution : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Number of the columns of the Video image.
/// </BLOCKQUOTE></PRE>
///
/// Element "Width" of type xs:int.
    int                                  Width                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Number of the lines of the Video image.
/// </BLOCKQUOTE></PRE>
///
/// Element "Height" of type xs:int.
    int                                  Height                         1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":VideoRateControl is a complexType.
///
class tt__VideoRateControl : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Maximum output framerate in fps. If an EncodingInterval is provided the resulting encoded framerate will be reduced by the given factor.
/// </BLOCKQUOTE></PRE>
///
/// Element "FrameRateLimit" of type xs:int.
    int                                  FrameRateLimit                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Interval at which images are encoded and transmitted. (A value of 1 means that every frame is encoded, a value of 2 means that every 2nd frame is encoded ...)
/// </BLOCKQUOTE></PRE>
///
/// Element "EncodingInterval" of type xs:int.
    int                                  EncodingInterval               1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   the maximum output bitrate in kbps
/// </BLOCKQUOTE></PRE>
///
/// Element "BitrateLimit" of type xs:int.
    int                                  BitrateLimit                   1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":Mpeg4Configuration is a complexType.
///
class tt__Mpeg4Configuration : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Determines the interval in which the I-Frames will be coded. An entry of 1 indicates I-Frames are continuously generated. An entry of 2 indicates that every 2nd image is an I-Frame, and 3 only every 3rd frame, etc. The frames in between are coded as P or B Frames.
/// </BLOCKQUOTE></PRE>
///
/// Element "GovLength" of type xs:int.
    int                                  GovLength                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   the Mpeg4 profile, either simple profile (SP) or advanced simple profile (ASP)
/// </BLOCKQUOTE></PRE>
///
/// Element "Mpeg4Profile" of type "http://www.onvif.org/ver10/schema":Mpeg4Profile.
    enum tt__Mpeg4Profile                Mpeg4Profile                   1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":H264Configuration is a complexType.
///
class tt__H264Configuration : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Group of Video frames length. Determines typically the interval in which the I-Frames will be coded. An entry of 1 indicates I-Frames are continuously generated. An entry of 2 indicates that every 2nd image is an I-Frame, and 3 only every 3rd frame, etc. The frames in between are coded as P or B Frames.
/// </BLOCKQUOTE></PRE>
///
/// Element "GovLength" of type xs:int.
    int                                  GovLength                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   the H.264 profile, either baseline, main, extended or high
/// </BLOCKQUOTE></PRE>
///
/// Element "H264Profile" of type "http://www.onvif.org/ver10/schema":H264Profile.
    enum tt__H264Profile                 H264Profile                    1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":VideoEncoderConfigurationOptions is a complexType.
///
class tt__VideoEncoderConfigurationOptions : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Range of the quality values. A high value means higher quality.
/// </BLOCKQUOTE></PRE>
///
/// Element "QualityRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        QualityRange                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional JPEG encoder settings ranges (See also Extension element).
/// </BLOCKQUOTE></PRE>
///
/// Element "JPEG" of type "http://www.onvif.org/ver10/schema":JpegOptions.
    tt__JpegOptions*                     JPEG                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional MPEG-4 encoder settings ranges (See also Extension element).
/// </BLOCKQUOTE></PRE>
///
/// Element "MPEG4" of type "http://www.onvif.org/ver10/schema":Mpeg4Options.
    tt__Mpeg4Options*                    MPEG4                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional H.264 encoder settings ranges (See also Extension element).
/// </BLOCKQUOTE></PRE>
///
/// Element "H264" of type "http://www.onvif.org/ver10/schema":H264Options.
    tt__H264Options*                     H264                           0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":VideoEncoderOptionsExtension.
    tt__VideoEncoderOptionsExtension*    Extension                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Indicates the support for the GuaranteedFrameRate attribute on the VideoEncoderConfiguration element.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "GuaranteedFrameRateSupported" of type xs:boolean.
  @ bool*                                GuaranteedFrameRateSupported   0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":VideoEncoderOptionsExtension is a complexType.
///
class tt__VideoEncoderOptionsExtension : public xsd__anyType
{ public:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <PRE><BLOCKQUOTE>
///   Optional JPEG encoder settings ranges.
/// </BLOCKQUOTE></PRE>
///
/// Element "JPEG" of type "http://www.onvif.org/ver10/schema":JpegOptions2.
    tt__JpegOptions2*                    JPEG                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional MPEG-4 encoder settings ranges.
/// </BLOCKQUOTE></PRE>
///
/// Element "MPEG4" of type "http://www.onvif.org/ver10/schema":Mpeg4Options2.
    tt__Mpeg4Options2*                   MPEG4                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional H.264 encoder settings ranges.
/// </BLOCKQUOTE></PRE>
///
/// Element "H264" of type "http://www.onvif.org/ver10/schema":H264Options2.
    tt__H264Options2*                    H264                           0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":VideoEncoderOptionsExtension2.
    tt__VideoEncoderOptionsExtension2*   Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":VideoEncoderOptionsExtension2 is a complexType.
///
class tt__VideoEncoderOptionsExtension2 : public xsd__anyType
{ public:
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
};

/// @brief "http://www.onvif.org/ver10/schema":JpegOptions is a complexType.
///
/// This type is extended by:
/// - "http://www.onvif.org/ver10/schema":JpegOptions2 as tt__JpegOptions2
///
class tt__JpegOptions : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   List of supported image sizes.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__VideoResolution* of length 1..unbounded.
    std::vector<tt__VideoResolution*   > ResolutionsAvailable           1;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Supported frame rate in fps (frames per second).
/// </BLOCKQUOTE></PRE>
///
/// Element "FrameRateRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        FrameRateRange                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Supported encoding interval range. The encoding interval corresponds to the number of frames devided by the encoded frames. An encoding interval value of "1" means that all frames are encoded.
/// </BLOCKQUOTE></PRE>
///
/// Element "EncodingIntervalRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        EncodingIntervalRange          1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":Mpeg4Options is a complexType.
///
/// This type is extended by:
/// - "http://www.onvif.org/ver10/schema":Mpeg4Options2 as tt__Mpeg4Options2
///
class tt__Mpeg4Options : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   List of supported image sizes.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__VideoResolution* of length 1..unbounded.
    std::vector<tt__VideoResolution*   > ResolutionsAvailable           1;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Supported group of Video frames length. This value typically corresponds to the I-Frame distance.
/// </BLOCKQUOTE></PRE>
///
/// Element "GovLengthRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        GovLengthRange                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Supported frame rate in fps (frames per second).
/// </BLOCKQUOTE></PRE>
///
/// Element "FrameRateRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        FrameRateRange                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Supported encoding interval range. The encoding interval corresponds to the number of frames devided by the encoded frames. An encoding interval value of "1" means that all frames are encoded.
/// </BLOCKQUOTE></PRE>
///
/// Element "EncodingIntervalRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        EncodingIntervalRange          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of supported MPEG-4 profiles.
/// </BLOCKQUOTE></PRE>
///
/// Vector of enum tt__Mpeg4Profile of length 1..unbounded.
    std::vector<enum tt__Mpeg4Profile  > Mpeg4ProfilesSupported         1;	///< Multiple elements.
};

/// @brief "http://www.onvif.org/ver10/schema":H264Options is a complexType.
///
/// This type is extended by:
/// - "http://www.onvif.org/ver10/schema":H264Options2 as tt__H264Options2
///
class tt__H264Options : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   List of supported image sizes.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__VideoResolution* of length 1..unbounded.
    std::vector<tt__VideoResolution*   > ResolutionsAvailable           1;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Supported group of Video frames length. This value typically corresponds to the I-Frame distance.
/// </BLOCKQUOTE></PRE>
///
/// Element "GovLengthRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        GovLengthRange                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Supported frame rate in fps (frames per second).
/// </BLOCKQUOTE></PRE>
///
/// Element "FrameRateRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        FrameRateRange                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Supported encoding interval range. The encoding interval corresponds to the number of frames devided by the encoded frames. An encoding interval value of "1" means that all frames are encoded.
/// </BLOCKQUOTE></PRE>
///
/// Element "EncodingIntervalRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        EncodingIntervalRange          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of supported H.264 profiles.
/// </BLOCKQUOTE></PRE>
///
/// Vector of enum tt__H264Profile of length 1..unbounded.
    std::vector<enum tt__H264Profile   > H264ProfilesSupported          1;	///< Multiple elements.
};

/// @brief "http://www.onvif.org/ver10/schema":VideoResolution2 is a complexType.
///
class tt__VideoResolution2 : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Number of the columns of the Video image.
/// </BLOCKQUOTE></PRE>
///
/// Element "Width" of type xs:int.
    int                                  Width                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Number of the lines of the Video image.
/// </BLOCKQUOTE></PRE>
///
/// Element "Height" of type xs:int.
    int                                  Height                         1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":VideoRateControl2 is a complexType.
///
class tt__VideoRateControl2 : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Desired frame rate in fps. The actual rate may be lower due to e.g. performance limitations.
/// </BLOCKQUOTE></PRE>
///
/// Element "FrameRateLimit" of type xs:float.
    float                                FrameRateLimit                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   the maximum output bitrate in kbps
/// </BLOCKQUOTE></PRE>
///
/// Element "BitrateLimit" of type xs:int.
    int                                  BitrateLimit                   1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <PRE><BLOCKQUOTE>
///   Enforce constant bitrate.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "ConstantBitRate" of type xs:boolean.
  @ bool*                                ConstantBitRate                0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":VideoEncoder2ConfigurationOptions is a complexType.
///
class tt__VideoEncoder2ConfigurationOptions : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Video Media Subtype for the video format. For definitions see tt:VideoEncodingMimeNames and <a href="https://www.iana.org/assignments/media-types/media-types.xhtml#video"> IANA Media Types</a>.
/// </BLOCKQUOTE></PRE>
///
/// Element "Encoding" of type xs:string.
    std::string                          Encoding                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Range of the quality values. A high value means higher quality.
/// </BLOCKQUOTE></PRE>
///
/// Element "QualityRange" of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      QualityRange                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of supported image sizes.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__VideoResolution2* of length 1..unbounded.
    std::vector<tt__VideoResolution2*  > ResolutionsAvailable           1;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Supported range of encoded bitrate in kbps.
/// </BLOCKQUOTE></PRE>
///
/// Element "BitrateRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        BitrateRange                   1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <PRE><BLOCKQUOTE>
///   Exactly two values, which define the Lower and Upper bounds for the supported group of Video frames length. These values typically correspond to the I-Frame distance.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "GovLengthRange" of type "http://www.onvif.org/ver10/schema":IntAttrList.
  @ tt__IntAttrList*                     GovLengthRange                 0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   List of supported target frame rates in fps (frames per second). The list shall be sorted with highest values first.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "FrameRatesSupported" of type "http://www.onvif.org/ver10/schema":FloatAttrList.
  @ tt__FloatAttrList*                   FrameRatesSupported            0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   List of supported encoder profiles as defined in tt::VideoEncodingProfiles.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "ProfilesSupported" of type "http://www.onvif.org/ver10/schema":StringAttrList.
  @ tt__StringAttrList*                  ProfilesSupported              0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Signal whether enforcing constant bitrate is supported.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "ConstantBitRateSupported" of type xs:boolean.
  @ bool*                                ConstantBitRateSupported       0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates the support for the GuaranteedFrameRate attribute on the VideoEncoder2Configuration element.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "GuaranteedFrameRateSupported" of type xs:boolean.
  @ bool*                                GuaranteedFrameRateSupported   0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":AudioSourceConfigurationOptions is a complexType.
///
class tt__AudioSourceConfigurationOptions : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Tokens of the audio source the configuration can be used for.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__ReferenceToken of length 1..unbounded.
    std::vector<tt__ReferenceToken     > InputTokensAvailable           1;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":AudioSourceOptionsExtension.
    tt__AudioSourceOptionsExtension*     Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":AudioSourceOptionsExtension is a complexType.
///
class tt__AudioSourceOptionsExtension : public xsd__anyType
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
};

/// @brief "http://www.onvif.org/ver10/schema":AudioEncoderConfigurationOptions is a complexType.
///
class tt__AudioEncoderConfigurationOptions : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   list of supported AudioEncoderConfigurations
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__AudioEncoderConfigurationOption* of length 0..unbounded.
    std::vector<tt__AudioEncoderConfigurationOption*> Options                        0;	///< Multiple elements.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":AudioEncoderConfigurationOption is a complexType.
///
class tt__AudioEncoderConfigurationOption : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   The enoding used for audio data (either G.711, G.726 or AAC)
/// </BLOCKQUOTE></PRE>
///
/// Element "Encoding" of type "http://www.onvif.org/ver10/schema":AudioEncoding.
    enum tt__AudioEncoding               Encoding                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of supported bitrates in kbps for the specified Encoding
/// </BLOCKQUOTE></PRE>
///
/// Element "BitrateList" of type "http://www.onvif.org/ver10/schema":IntItems.
    tt__IntItems*                        BitrateList                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of supported Sample Rates in kHz for the specified Encoding
/// </BLOCKQUOTE></PRE>
///
/// Element "SampleRateList" of type "http://www.onvif.org/ver10/schema":IntItems.
    tt__IntItems*                        SampleRateList                 1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":AudioEncoder2ConfigurationOptions is a complexType.
///
class tt__AudioEncoder2ConfigurationOptions : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Audio Media Subtype for the audio format. For definitions see tt:AudioEncodingMimeNames and <a href="https://www.iana.org/assignments/media-types/media-types.xhtml#audio"> IANA Media Types</a>.
/// </BLOCKQUOTE></PRE>
///
/// Element "Encoding" of type xs:string.
    std::string                          Encoding                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of supported bitrates in kbps for the specified Encoding
/// </BLOCKQUOTE></PRE>
///
/// Element "BitrateList" of type "http://www.onvif.org/ver10/schema":IntItems.
    tt__IntItems*                        BitrateList                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of supported Sample Rates in kHz for the specified Encoding
/// </BLOCKQUOTE></PRE>
///
/// Element "SampleRateList" of type "http://www.onvif.org/ver10/schema":IntItems.
    tt__IntItems*                        SampleRateList                 1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":MetadataConfigurationExtension is a complexType.
///
class tt__MetadataConfigurationExtension : public xsd__anyType
{ public:
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZFilter is a complexType.
///
class tt__PTZFilter : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   True if the metadata stream shall contain the PTZ status (IDLE, MOVING or UNKNOWN)
/// </BLOCKQUOTE></PRE>
///
/// Element "Status" of type xs:boolean.
    bool                                 Status                         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   True if the metadata stream shall contain the PTZ position
/// </BLOCKQUOTE></PRE>
///
/// Element "Position" of type xs:boolean.
    bool                                 Position                       1;	///< Required element.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":EventSubscription is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Subcription handling in the same way as base notification subscription.
/// </BLOCKQUOTE></PRE>
///
class tt__EventSubscription : public xsd__anyType
{ public:
/// Element "Filter" of type "http://docs.oasis-open.org/wsn/b-2":FilterType.
    wsnt__FilterType*                    Filter                         0;	///< Optional element.
    class _tt__EventSubscription_SubscriptionPolicy
    { public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
    }                                   *SubscriptionPolicy             0;	///< Optional element.
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":MetadataConfigurationOptions is a complexType.
///
class tt__MetadataConfigurationOptions : public xsd__anyType
{ public:
/// Element "PTZStatusFilterOptions" of type "http://www.onvif.org/ver10/schema":PTZStatusFilterOptions.
    tt__PTZStatusFilterOptions*          PTZStatusFilterOptions         1;	///< Required element.
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":MetadataConfigurationOptionsExtension.
    tt__MetadataConfigurationOptionsExtension*  Extension                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   True if the device is able to stream the Geo Located positions of each target.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "GeoLocation" of type xs:boolean.
  @ bool*                                GeoLocation                    0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   A device signalling support for content filtering shall support expressions with the provided expression size.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "MaxContentFilterSize" of type xs:int.
  @ int*                                 MaxContentFilterSize           0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":MetadataConfigurationOptionsExtension is a complexType.
///
class tt__MetadataConfigurationOptionsExtension : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   List of supported metadata compression type. Its options shall be chosen from tt:MetadataCompressionType.
/// </BLOCKQUOTE></PRE>
///
/// Vector of std::string of length 0..unbounded.
    std::vector<std::string            > CompressionType                0;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":MetadataConfigurationOptionsExtension2.
    tt__MetadataConfigurationOptionsExtension2*  Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":MetadataConfigurationOptionsExtension2 is a complexType.
///
class tt__MetadataConfigurationOptionsExtension2 : public xsd__anyType
{ public:
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZStatusFilterOptions is a complexType.
///
class tt__PTZStatusFilterOptions : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   True if the device is able to stream pan or tilt status information.
/// </BLOCKQUOTE></PRE>
///
/// Element "PanTiltStatusSupported" of type xs:boolean.
    bool                                 PanTiltStatusSupported         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   True if the device is able to stream zoom status inforamtion.
/// </BLOCKQUOTE></PRE>
///
/// Element "ZoomStatusSupported" of type xs:boolean.
    bool                                 ZoomStatusSupported            1;	///< Required element.
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <PRE><BLOCKQUOTE>
///   True if the device is able to stream the pan or tilt position.
/// </BLOCKQUOTE></PRE>
///
/// Element "PanTiltPositionSupported" of type xs:boolean.
    bool*                                PanTiltPositionSupported       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   True if the device is able to stream zoom position information.
/// </BLOCKQUOTE></PRE>
///
/// Element "ZoomPositionSupported" of type xs:boolean.
    bool*                                ZoomPositionSupported          0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":PTZStatusFilterOptionsExtension.
    tt__PTZStatusFilterOptionsExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZStatusFilterOptionsExtension is a complexType.
///
class tt__PTZStatusFilterOptionsExtension : public xsd__anyType
{ public:
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
};

/// @brief "http://www.onvif.org/ver10/schema":VideoOutputExtension is a complexType.
///
class tt__VideoOutputExtension : public xsd__anyType
{ public:
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
};

/// @brief "http://www.onvif.org/ver10/schema":VideoOutputConfigurationOptions is a complexType.
///
class tt__VideoOutputConfigurationOptions : public xsd__anyType
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":VideoDecoderConfigurationOptions is a complexType.
///
class tt__VideoDecoderConfigurationOptions : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   If the device is able to decode Jpeg streams this element describes the supported codecs and configurations
/// </BLOCKQUOTE></PRE>
///
/// Element "JpegDecOptions" of type "http://www.onvif.org/ver10/schema":JpegDecOptions.
    tt__JpegDecOptions*                  JpegDecOptions                 0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If the device is able to decode H.264 streams this element describes the supported codecs and configurations
/// </BLOCKQUOTE></PRE>
///
/// Element "H264DecOptions" of type "http://www.onvif.org/ver10/schema":H264DecOptions.
    tt__H264DecOptions*                  H264DecOptions                 0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If the device is able to decode Mpeg4 streams this element describes the supported codecs and configurations
/// </BLOCKQUOTE></PRE>
///
/// Element "Mpeg4DecOptions" of type "http://www.onvif.org/ver10/schema":Mpeg4DecOptions.
    tt__Mpeg4DecOptions*                 Mpeg4DecOptions                0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":VideoDecoderConfigurationOptionsExtension.
    tt__VideoDecoderConfigurationOptionsExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":H264DecOptions is a complexType.
///
class tt__H264DecOptions : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   List of supported H.264 Video Resolutions
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__VideoResolution* of length 1..unbounded.
    std::vector<tt__VideoResolution*   > ResolutionsAvailable           1;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   List of supported H264 Profiles (either baseline, main, extended or high)
/// </BLOCKQUOTE></PRE>
///
/// Vector of enum tt__H264Profile of length 1..unbounded.
    std::vector<enum tt__H264Profile   > SupportedH264Profiles          1;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Supported H.264 bitrate range in kbps
/// </BLOCKQUOTE></PRE>
///
/// Element "SupportedInputBitrate" of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        SupportedInputBitrate          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Supported H.264 framerate range in fps
/// </BLOCKQUOTE></PRE>
///
/// Element "SupportedFrameRate" of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        SupportedFrameRate             1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":JpegDecOptions is a complexType.
///
class tt__JpegDecOptions : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   List of supported Jpeg Video Resolutions
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__VideoResolution* of length 1..unbounded.
    std::vector<tt__VideoResolution*   > ResolutionsAvailable           1;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Supported Jpeg bitrate range in kbps
/// </BLOCKQUOTE></PRE>
///
/// Element "SupportedInputBitrate" of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        SupportedInputBitrate          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Supported Jpeg framerate range in fps
/// </BLOCKQUOTE></PRE>
///
/// Element "SupportedFrameRate" of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        SupportedFrameRate             1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":Mpeg4DecOptions is a complexType.
///
class tt__Mpeg4DecOptions : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   List of supported Mpeg4 Video Resolutions
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__VideoResolution* of length 1..unbounded.
    std::vector<tt__VideoResolution*   > ResolutionsAvailable           1;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   List of supported Mpeg4 Profiles (either SP or ASP)
/// </BLOCKQUOTE></PRE>
///
/// Vector of enum tt__Mpeg4Profile of length 1..unbounded.
    std::vector<enum tt__Mpeg4Profile  > SupportedMpeg4Profiles         1;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Supported Mpeg4 bitrate range in kbps
/// </BLOCKQUOTE></PRE>
///
/// Element "SupportedInputBitrate" of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        SupportedInputBitrate          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Supported Mpeg4 framerate range in fps
/// </BLOCKQUOTE></PRE>
///
/// Element "SupportedFrameRate" of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        SupportedFrameRate             1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":VideoDecoderConfigurationOptionsExtension is a complexType.
///
class tt__VideoDecoderConfigurationOptionsExtension : public xsd__anyType
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
};

/// @brief "http://www.onvif.org/ver10/schema":AudioOutputConfigurationOptions is a complexType.
///
class tt__AudioOutputConfigurationOptions : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Tokens of the physical Audio outputs (typically one).
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__ReferenceToken of length 1..unbounded.
    std::vector<tt__ReferenceToken     > OutputTokensAvailable          1;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   An <b>audio</b> channel MAY support different types of audio transmission. While for full duplex
///   operation no special handling is required, in half duplex operation the transmission direction
///   needs to be switched.
///   The optional SendPrimacy parameter inside the AudioOutputConfiguration indicates which
///   direction is currently active. An NVC can switch between different modes by setting the
///   AudioOutputConfiguration.<br/>
///   The following modes for the Send-Primacy are defined:<ul>
///   <li>www.onvif.org/ver20/HalfDuplex/Server
///   The server is allowed to send audio data to the client. The client shall not send
///   audio data via the backchannel to the NVT in this mode.</li>
///   <li>www.onvif.org/ver20/HalfDuplex/Client
///   The client is allowed to send audio data via the backchannel to the server. The
///   NVT shall not send audio data to the client in this mode.</li>
///   <li>www.onvif.org/ver20/HalfDuplex/Auto
///   It is up to the device how to deal with sending and receiving audio data.</li>
///   </ul>
///   Acoustic echo cancellation is out of ONVIF scope.
/// </BLOCKQUOTE></PRE>
///
/// Vector of xsd__anyURI of length 0..unbounded.
    std::vector<xsd__anyURI            > SendPrimacyOptions             0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Minimum and maximum level range supported for this Output.
/// </BLOCKQUOTE></PRE>
///
/// Element "OutputLevelRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        OutputLevelRange               1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":AudioDecoderConfigurationOptions is a complexType.
///
class tt__AudioDecoderConfigurationOptions : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   If the device is able to decode AAC encoded audio this section describes the supported configurations
/// </BLOCKQUOTE></PRE>
///
/// Element "AACDecOptions" of type "http://www.onvif.org/ver10/schema":AACDecOptions.
    tt__AACDecOptions*                   AACDecOptions                  0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If the device is able to decode G711 encoded audio this section describes the supported configurations
/// </BLOCKQUOTE></PRE>
///
/// Element "G711DecOptions" of type "http://www.onvif.org/ver10/schema":G711DecOptions.
    tt__G711DecOptions*                  G711DecOptions                 0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If the device is able to decode G726 encoded audio this section describes the supported configurations
/// </BLOCKQUOTE></PRE>
///
/// Element "G726DecOptions" of type "http://www.onvif.org/ver10/schema":G726DecOptions.
    tt__G726DecOptions*                  G726DecOptions                 0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":AudioDecoderConfigurationOptionsExtension.
    tt__AudioDecoderConfigurationOptionsExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":G711DecOptions is a complexType.
///
class tt__G711DecOptions : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   List of supported bitrates in kbps
/// </BLOCKQUOTE></PRE>
///
/// Element "Bitrate" of type "http://www.onvif.org/ver10/schema":IntItems.
    tt__IntItems*                        Bitrate                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of supported sample rates in kHz
/// </BLOCKQUOTE></PRE>
///
/// Element "SampleRateRange" of type "http://www.onvif.org/ver10/schema":IntItems.
    tt__IntItems*                        SampleRateRange                1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":AACDecOptions is a complexType.
///
class tt__AACDecOptions : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   List of supported bitrates in kbps
/// </BLOCKQUOTE></PRE>
///
/// Element "Bitrate" of type "http://www.onvif.org/ver10/schema":IntItems.
    tt__IntItems*                        Bitrate                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of supported sample rates in kHz
/// </BLOCKQUOTE></PRE>
///
/// Element "SampleRateRange" of type "http://www.onvif.org/ver10/schema":IntItems.
    tt__IntItems*                        SampleRateRange                1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":G726DecOptions is a complexType.
///
class tt__G726DecOptions : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   List of supported bitrates in kbps
/// </BLOCKQUOTE></PRE>
///
/// Element "Bitrate" of type "http://www.onvif.org/ver10/schema":IntItems.
    tt__IntItems*                        Bitrate                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of supported sample rates in kHz
/// </BLOCKQUOTE></PRE>
///
/// Element "SampleRateRange" of type "http://www.onvif.org/ver10/schema":IntItems.
    tt__IntItems*                        SampleRateRange                1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":AudioDecoderConfigurationOptionsExtension is a complexType.
///
class tt__AudioDecoderConfigurationOptionsExtension : public xsd__anyType
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
};

/// @brief "http://www.onvif.org/ver10/schema":MulticastConfiguration is a complexType.
///
class tt__MulticastConfiguration : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   The multicast address (if this address is set to 0 no multicast streaming is enaled)
/// </BLOCKQUOTE></PRE>
///
/// Element "Address" of type "http://www.onvif.org/ver10/schema":IPAddress.
    tt__IPAddress*                       Address                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The RTP mutlicast destination port. A device may support RTCP. In this case the port value shall be even to allow the corresponding RTCP stream to be mapped to the next higher (odd) destination port number as defined in the RTSP specification.
/// </BLOCKQUOTE></PRE>
///
/// Element "Port" of type xs:int.
    int                                  Port                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   In case of IPv6 the TTL value is assumed as the hop limit. Note that for IPV6 and administratively scoped IPv4 multicast the primary use for hop limit / TTL is to prevent packets from (endlessly) circulating and not limiting scope. In these cases the address contains the scope.
/// </BLOCKQUOTE></PRE>
///
/// Element "TTL" of type xs:int.
    int                                  TTL                            1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Read only property signalling that streaming is persistant. Use the methods StartMulticastStreaming and StopMulticastStreaming to switch its state.
/// </BLOCKQUOTE></PRE>
///
/// Element "AutoStart" of type xs:boolean.
    bool                                 AutoStart                      1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":StreamSetup is a complexType.
///
class tt__StreamSetup : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Defines if a multicast or unicast stream is requested
/// </BLOCKQUOTE></PRE>
///
/// Element "Stream" of type "http://www.onvif.org/ver10/schema":StreamType.
    enum tt__StreamType                  Stream                         1;	///< Required element.
/// Element "Transport" of type "http://www.onvif.org/ver10/schema":Transport.
    tt__Transport*                       Transport                      1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":Transport is a complexType.
///
class tt__Transport : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Defines the network protocol for streaming, either UDP=RTP/UDP, RTSP=RTP/RTSP/TCP or HTTP=RTP/RTSP/HTTP/TCP
/// </BLOCKQUOTE></PRE>
///
/// Element "Protocol" of type "http://www.onvif.org/ver10/schema":TransportProtocol.
    enum tt__TransportProtocol           Protocol                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional element to describe further tunnel options. This element is normally not needed
/// </BLOCKQUOTE></PRE>
///
/// Element "Tunnel" of type "http://www.onvif.org/ver10/schema":Transport.
    tt__Transport*                       Tunnel                         0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":MediaUri is a complexType.
///
class tt__MediaUri : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Stable Uri to be used for requesting the media stream
/// </BLOCKQUOTE></PRE>
///
/// Element "Uri" of type xs:anyURI.
    xsd__anyURI                          Uri                            1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates if the Uri is only valid until the connection is established. The value shall be set to "false".
/// </BLOCKQUOTE></PRE>
///
/// Element "InvalidAfterConnect" of type xs:boolean.
    bool                                 InvalidAfterConnect            1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates if the Uri is invalid after a reboot of the device. The value shall be set to "false".
/// </BLOCKQUOTE></PRE>
///
/// Element "InvalidAfterReboot" of type xs:boolean.
    bool                                 InvalidAfterReboot             1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Duration how long the Uri is valid. This parameter shall be set to PT0S to indicate that this stream URI is indefinitely valid even if the profile changes
/// </BLOCKQUOTE></PRE>
///
/// Element "Timeout" of type xs:duration.
    xsd__duration                        Timeout                        1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":Scope is a complexType.
///
class tt__Scope : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicates if the scope is fixed or configurable.
/// </BLOCKQUOTE></PRE>
///
/// Element "ScopeDef" of type "http://www.onvif.org/ver10/schema":ScopeDefinition.
    enum tt__ScopeDefinition             ScopeDef                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Scope item URI.
/// </BLOCKQUOTE></PRE>
///
/// Element "ScopeItem" of type xs:anyURI.
    xsd__anyURI                          ScopeItem                      1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkInterfaceExtension is a complexType.
///
class tt__NetworkInterfaceExtension : public xsd__anyType
{ public:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Element "InterfaceType" of type "http://www.onvif.org/ver10/schema":IANA-IfTypes.
    tt__IANA_IfTypes                     InterfaceType                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Extension point prepared for future 802.3 configuration.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__Dot3Configuration* of length 0..unbounded.
    std::vector<tt__Dot3Configuration* > Dot3                           0;	///< Multiple elements.
/// Vector of tt__Dot11Configuration* of length 0..unbounded.
    std::vector<tt__Dot11Configuration*> Dot11                          0;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":NetworkInterfaceExtension2.
    tt__NetworkInterfaceExtension2*      Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":Dot3Configuration is a complexType.
///
class tt__Dot3Configuration : public xsd__anyType
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkInterfaceExtension2 is a complexType.
///
class tt__NetworkInterfaceExtension2 : public xsd__anyType
{ public:
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkInterfaceLink is a complexType.
///
class tt__NetworkInterfaceLink : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Configured link settings.
/// </BLOCKQUOTE></PRE>
///
/// Element "AdminSettings" of type "http://www.onvif.org/ver10/schema":NetworkInterfaceConnectionSetting.
    tt__NetworkInterfaceConnectionSetting*  AdminSettings                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Current active link settings.
/// </BLOCKQUOTE></PRE>
///
/// Element "OperSettings" of type "http://www.onvif.org/ver10/schema":NetworkInterfaceConnectionSetting.
    tt__NetworkInterfaceConnectionSetting*  OperSettings                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Integer indicating interface type, for example: 6 is ethernet.
/// </BLOCKQUOTE></PRE>
///
/// Element "InterfaceType" of type "http://www.onvif.org/ver10/schema":IANA-IfTypes.
    tt__IANA_IfTypes                     InterfaceType                  1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkInterfaceConnectionSetting is a complexType.
///
class tt__NetworkInterfaceConnectionSetting : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Auto negotiation on/off.
/// </BLOCKQUOTE></PRE>
///
/// Element "AutoNegotiation" of type xs:boolean.
    bool                                 AutoNegotiation                1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Speed.
/// </BLOCKQUOTE></PRE>
///
/// Element "Speed" of type xs:int.
    int                                  Speed                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Duplex type, Half or Full.
/// </BLOCKQUOTE></PRE>
///
/// Element "Duplex" of type "http://www.onvif.org/ver10/schema":Duplex.
    enum tt__Duplex                      Duplex                         1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkInterfaceInfo is a complexType.
///
class tt__NetworkInterfaceInfo : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Network interface name, for example eth0.
/// </BLOCKQUOTE></PRE>
///
/// Element "Name" of type xs:string.
    std::string*                         Name                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Network interface MAC address.
/// </BLOCKQUOTE></PRE>
///
/// Element "HwAddress" of type "http://www.onvif.org/ver10/schema":HwAddress.
    tt__HwAddress                        HwAddress                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Maximum transmission unit.
/// </BLOCKQUOTE></PRE>
///
/// Element "MTU" of type xs:int.
    int*                                 MTU                            0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":IPv6NetworkInterface is a complexType.
///
class tt__IPv6NetworkInterface : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not IPv6 is enabled.
/// </BLOCKQUOTE></PRE>
///
/// Element "Enabled" of type xs:boolean.
    bool                                 Enabled                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   IPv6 configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "Config" of type "http://www.onvif.org/ver10/schema":IPv6Configuration.
    tt__IPv6Configuration*               Config                         0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":IPv4NetworkInterface is a complexType.
///
class tt__IPv4NetworkInterface : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not IPv4 is enabled.
/// </BLOCKQUOTE></PRE>
///
/// Element "Enabled" of type xs:boolean.
    bool                                 Enabled                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   IPv4 configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "Config" of type "http://www.onvif.org/ver10/schema":IPv4Configuration.
    tt__IPv4Configuration*               Config                         1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":IPv4Configuration is a complexType.
///
class tt__IPv4Configuration : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   List of manually added IPv4 addresses.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__PrefixedIPv4Address* of length 0..unbounded.
    std::vector<tt__PrefixedIPv4Address*> Manual                         0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Link local address.
/// </BLOCKQUOTE></PRE>
///
/// Element "LinkLocal" of type "http://www.onvif.org/ver10/schema":PrefixedIPv4Address.
    tt__PrefixedIPv4Address*             LinkLocal                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   IPv4 address configured by using DHCP.
/// </BLOCKQUOTE></PRE>
///
/// Element "FromDHCP" of type "http://www.onvif.org/ver10/schema":PrefixedIPv4Address.
    tt__PrefixedIPv4Address*             FromDHCP                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not DHCP is used.
/// </BLOCKQUOTE></PRE>
///
/// Element "DHCP" of type xs:boolean.
    bool                                 DHCP                           1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":IPv6Configuration is a complexType.
///
class tt__IPv6Configuration : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicates whether router advertisment is used.
/// </BLOCKQUOTE></PRE>
///
/// Element "AcceptRouterAdvert" of type xs:boolean.
    bool*                                AcceptRouterAdvert             0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   DHCP configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "DHCP" of type "http://www.onvif.org/ver10/schema":IPv6DHCPConfiguration.
    enum tt__IPv6DHCPConfiguration       DHCP                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of manually entered IPv6 addresses.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__PrefixedIPv6Address* of length 0..unbounded.
    std::vector<tt__PrefixedIPv6Address*> Manual                         0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   List of link local IPv6 addresses.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__PrefixedIPv6Address* of length 0..unbounded.
    std::vector<tt__PrefixedIPv6Address*> LinkLocal                      0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   List of IPv6 addresses configured by using DHCP.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__PrefixedIPv6Address* of length 0..unbounded.
    std::vector<tt__PrefixedIPv6Address*> FromDHCP                       0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   List of IPv6 addresses configured by using router advertisment.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__PrefixedIPv6Address* of length 0..unbounded.
    std::vector<tt__PrefixedIPv6Address*> FromRA                         0;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":IPv6ConfigurationExtension.
    tt__IPv6ConfigurationExtension*      Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":IPv6ConfigurationExtension is a complexType.
///
class tt__IPv6ConfigurationExtension : public xsd__anyType
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkProtocol is a complexType.
///
class tt__NetworkProtocol : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Network protocol type string.
/// </BLOCKQUOTE></PRE>
///
/// Element "Name" of type "http://www.onvif.org/ver10/schema":NetworkProtocolType.
    enum tt__NetworkProtocolType         Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates if the protocol is enabled or not.
/// </BLOCKQUOTE></PRE>
///
/// Element "Enabled" of type xs:boolean.
    bool                                 Enabled                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The port that is used by the protocol.
/// </BLOCKQUOTE></PRE>
///
/// Vector of int of length 1..unbounded.
    std::vector<int                    > Port                           1;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":NetworkProtocolExtension.
    tt__NetworkProtocolExtension*        Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkProtocolExtension is a complexType.
///
class tt__NetworkProtocolExtension : public xsd__anyType
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkHost is a complexType.
///
class tt__NetworkHost : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Network host type: IPv4, IPv6 or DNS.
/// </BLOCKQUOTE></PRE>
///
/// Element "Type" of type "http://www.onvif.org/ver10/schema":NetworkHostType.
    enum tt__NetworkHostType             Type                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   IPv4 address.
/// </BLOCKQUOTE></PRE>
///
/// Element "IPv4Address" of type "http://www.onvif.org/ver10/schema":IPv4Address.
    tt__IPv4Address*                     IPv4Address                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   IPv6 address.
/// </BLOCKQUOTE></PRE>
///
/// Element "IPv6Address" of type "http://www.onvif.org/ver10/schema":IPv6Address.
    tt__IPv6Address*                     IPv6Address                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   DNS name.
/// </BLOCKQUOTE></PRE>
///
/// Element "DNSname" of type "http://www.onvif.org/ver10/schema":DNSName.
    tt__DNSName*                         DNSname                        0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":NetworkHostExtension.
    tt__NetworkHostExtension*            Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkHostExtension is a complexType.
///
class tt__NetworkHostExtension : public xsd__anyType
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
};

/// @brief "http://www.onvif.org/ver10/schema":IPAddress is a complexType.
///
class tt__IPAddress : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicates if the address is an IPv4 or IPv6 address.
/// </BLOCKQUOTE></PRE>
///
/// Element "Type" of type "http://www.onvif.org/ver10/schema":IPType.
    enum tt__IPType                      Type                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   IPv4 address.
/// </BLOCKQUOTE></PRE>
///
/// Element "IPv4Address" of type "http://www.onvif.org/ver10/schema":IPv4Address.
    tt__IPv4Address*                     IPv4Address                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   IPv6 address
/// </BLOCKQUOTE></PRE>
///
/// Element "IPv6Address" of type "http://www.onvif.org/ver10/schema":IPv6Address.
    tt__IPv6Address*                     IPv6Address                    0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":PrefixedIPv4Address is a complexType.
///
class tt__PrefixedIPv4Address : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   IPv4 address
/// </BLOCKQUOTE></PRE>
///
/// Element "Address" of type "http://www.onvif.org/ver10/schema":IPv4Address.
    tt__IPv4Address                      Address                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Prefix/submask length
/// </BLOCKQUOTE></PRE>
///
/// Element "PrefixLength" of type xs:int.
    int                                  PrefixLength                   1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":PrefixedIPv6Address is a complexType.
///
class tt__PrefixedIPv6Address : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   IPv6 address
/// </BLOCKQUOTE></PRE>
///
/// Element "Address" of type "http://www.onvif.org/ver10/schema":IPv6Address.
    tt__IPv6Address                      Address                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Prefix/submask length
/// </BLOCKQUOTE></PRE>
///
/// Element "PrefixLength" of type xs:int.
    int                                  PrefixLength                   1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":HostnameInformation is a complexType.
///
class tt__HostnameInformation : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicates whether the hostname is obtained from DHCP or not.
/// </BLOCKQUOTE></PRE>
///
/// Element "FromDHCP" of type xs:boolean.
    bool                                 FromDHCP                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates the hostname.
/// </BLOCKQUOTE></PRE>
///
/// Element "Name" of type xs:token.
    xsd__token*                          Name                           0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":HostnameInformationExtension.
    tt__HostnameInformationExtension*    Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":HostnameInformationExtension is a complexType.
///
class tt__HostnameInformationExtension : public xsd__anyType
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
};

/// @brief "http://www.onvif.org/ver10/schema":DNSInformation is a complexType.
///
class tt__DNSInformation : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not DNS information is retrieved from DHCP.
/// </BLOCKQUOTE></PRE>
///
/// Element "FromDHCP" of type xs:boolean.
    bool                                 FromDHCP                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Search domain.
/// </BLOCKQUOTE></PRE>
///
/// Vector of xsd__token of length 0..unbounded.
    std::vector<xsd__token             > SearchDomain                   0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   List of DNS addresses received from DHCP.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__IPAddress* of length 0..unbounded.
    std::vector<tt__IPAddress*         > DNSFromDHCP                    0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   List of manually entered DNS addresses.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__IPAddress* of length 0..unbounded.
    std::vector<tt__IPAddress*         > DNSManual                      0;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":DNSInformationExtension.
    tt__DNSInformationExtension*         Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":DNSInformationExtension is a complexType.
///
class tt__DNSInformationExtension : public xsd__anyType
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
};

/// @brief "http://www.onvif.org/ver10/schema":NTPInformation is a complexType.
///
class tt__NTPInformation : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicates if NTP information is to be retrieved by using DHCP.
/// </BLOCKQUOTE></PRE>
///
/// Element "FromDHCP" of type xs:boolean.
    bool                                 FromDHCP                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of NTP addresses retrieved by using DHCP.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__NetworkHost* of length 0..unbounded.
    std::vector<tt__NetworkHost*       > NTPFromDHCP                    0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   List of manually entered NTP addresses.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__NetworkHost* of length 0..unbounded.
    std::vector<tt__NetworkHost*       > NTPManual                      0;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":NTPInformationExtension.
    tt__NTPInformationExtension*         Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":NTPInformationExtension is a complexType.
///
class tt__NTPInformationExtension : public xsd__anyType
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
};

/// @brief "http://www.onvif.org/ver10/schema":DynamicDNSInformation is a complexType.
///
class tt__DynamicDNSInformation : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Dynamic DNS type.
/// </BLOCKQUOTE></PRE>
///
/// Element "Type" of type "http://www.onvif.org/ver10/schema":DynamicDNSType.
    enum tt__DynamicDNSType              Type                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   DNS name.
/// </BLOCKQUOTE></PRE>
///
/// Element "Name" of type "http://www.onvif.org/ver10/schema":DNSName.
    tt__DNSName*                         Name                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Time to live.
/// </BLOCKQUOTE></PRE>
///
/// Element "TTL" of type xs:duration.
    xsd__duration*                       TTL                            0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":DynamicDNSInformationExtension.
    tt__DynamicDNSInformationExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":DynamicDNSInformationExtension is a complexType.
///
class tt__DynamicDNSInformationExtension : public xsd__anyType
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkInterfaceSetConfiguration is a complexType.
///
class tt__NetworkInterfaceSetConfiguration : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not an interface is enabled.
/// </BLOCKQUOTE></PRE>
///
/// Element "Enabled" of type xs:boolean.
    bool*                                Enabled                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Link configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "Link" of type "http://www.onvif.org/ver10/schema":NetworkInterfaceConnectionSetting.
    tt__NetworkInterfaceConnectionSetting*  Link                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Maximum transmission unit.
/// </BLOCKQUOTE></PRE>
///
/// Element "MTU" of type xs:int.
    int*                                 MTU                            0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   IPv4 network interface configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "IPv4" of type "http://www.onvif.org/ver10/schema":IPv4NetworkInterfaceSetConfiguration.
    tt__IPv4NetworkInterfaceSetConfiguration*  IPv4                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   IPv6 network interface configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "IPv6" of type "http://www.onvif.org/ver10/schema":IPv6NetworkInterfaceSetConfiguration.
    tt__IPv6NetworkInterfaceSetConfiguration*  IPv6                           0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":NetworkInterfaceSetConfigurationExtension.
    tt__NetworkInterfaceSetConfigurationExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkInterfaceSetConfigurationExtension is a complexType.
///
class tt__NetworkInterfaceSetConfigurationExtension : public xsd__anyType
{ public:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Vector of tt__Dot3Configuration* of length 0..unbounded.
    std::vector<tt__Dot3Configuration* > Dot3                           0;	///< Multiple elements.
/// Vector of tt__Dot11Configuration* of length 0..unbounded.
    std::vector<tt__Dot11Configuration*> Dot11                          0;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":NetworkInterfaceSetConfigurationExtension2.
    tt__NetworkInterfaceSetConfigurationExtension2*  Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":IPv6NetworkInterfaceSetConfiguration is a complexType.
///
class tt__IPv6NetworkInterfaceSetConfiguration : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not IPv6 is enabled.
/// </BLOCKQUOTE></PRE>
///
/// Element "Enabled" of type xs:boolean.
    bool*                                Enabled                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether router advertisment is used.
/// </BLOCKQUOTE></PRE>
///
/// Element "AcceptRouterAdvert" of type xs:boolean.
    bool*                                AcceptRouterAdvert             0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   List of manually added IPv6 addresses.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__PrefixedIPv6Address* of length 0..unbounded.
    std::vector<tt__PrefixedIPv6Address*> Manual                         0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   DHCP configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "DHCP" of type "http://www.onvif.org/ver10/schema":IPv6DHCPConfiguration.
    enum tt__IPv6DHCPConfiguration*      DHCP                           0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":IPv4NetworkInterfaceSetConfiguration is a complexType.
///
class tt__IPv4NetworkInterfaceSetConfiguration : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not IPv4 is enabled.
/// </BLOCKQUOTE></PRE>
///
/// Element "Enabled" of type xs:boolean.
    bool*                                Enabled                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   List of manually added IPv4 addresses.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__PrefixedIPv4Address* of length 0..unbounded.
    std::vector<tt__PrefixedIPv4Address*> Manual                         0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not DHCP is used.
/// </BLOCKQUOTE></PRE>
///
/// Element "DHCP" of type xs:boolean.
    bool*                                DHCP                           0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkGateway is a complexType.
///
class tt__NetworkGateway : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   IPv4 address string.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__IPv4Address of length 0..unbounded.
    std::vector<tt__IPv4Address        > IPv4Address                    0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   IPv6 address string.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__IPv6Address of length 0..unbounded.
    std::vector<tt__IPv6Address        > IPv6Address                    0;	///< Multiple elements.
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkZeroConfiguration is a complexType.
///
class tt__NetworkZeroConfiguration : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Unique identifier of network interface.
/// </BLOCKQUOTE></PRE>
///
/// Element "InterfaceToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   InterfaceToken                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether the zero-configuration is enabled or not.
/// </BLOCKQUOTE></PRE>
///
/// Element "Enabled" of type xs:boolean.
    bool                                 Enabled                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The zero-configuration IPv4 address(es)
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__IPv4Address of length 0..unbounded.
    std::vector<tt__IPv4Address        > Addresses                      0;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":NetworkZeroConfigurationExtension.
    tt__NetworkZeroConfigurationExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkZeroConfigurationExtension is a complexType.
///
class tt__NetworkZeroConfigurationExtension : public xsd__anyType
{ public:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <PRE><BLOCKQUOTE>
///   Optional array holding the configuration for the second and possibly further interfaces.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__NetworkZeroConfiguration* of length 0..unbounded.
    std::vector<tt__NetworkZeroConfiguration*> Additional                     0;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":NetworkZeroConfigurationExtension2.
    tt__NetworkZeroConfigurationExtension2*  Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkZeroConfigurationExtension2 is a complexType.
///
class tt__NetworkZeroConfigurationExtension2 : public xsd__anyType
{ public:
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
};

/// @brief "http://www.onvif.org/ver10/schema":IPAddressFilter is a complexType.
///
class tt__IPAddressFilter : public xsd__anyType
{ public:
/// Element "Type" of type "http://www.onvif.org/ver10/schema":IPAddressFilterType.
    enum tt__IPAddressFilterType         Type                           1;	///< Required element.
/// Vector of tt__PrefixedIPv4Address* of length 0..unbounded.
    std::vector<tt__PrefixedIPv4Address*> IPv4Address                    0;	///< Multiple elements.
/// Vector of tt__PrefixedIPv6Address* of length 0..unbounded.
    std::vector<tt__PrefixedIPv6Address*> IPv6Address                    0;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":IPAddressFilterExtension.
    tt__IPAddressFilterExtension*        Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":IPAddressFilterExtension is a complexType.
///
class tt__IPAddressFilterExtension : public xsd__anyType
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11Configuration is a complexType.
///
class tt__Dot11Configuration : public xsd__anyType
{ public:
/// Element "SSID" of type "http://www.onvif.org/ver10/schema":Dot11SSIDType.
    tt__Dot11SSIDType                    SSID                           1;	///< Required element.
/// Element "Mode" of type "http://www.onvif.org/ver10/schema":Dot11StationMode.
    enum tt__Dot11StationMode            Mode                           1;	///< Required element.
/// Element "Alias" of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Alias                          1;	///< Required element.
/// Element "Priority" of type "http://www.onvif.org/ver10/schema":NetworkInterfaceConfigPriority.
    tt__NetworkInterfaceConfigPriority   Priority                       1;	///< Required element.
/// Element "Security" of type "http://www.onvif.org/ver10/schema":Dot11SecurityConfiguration.
    tt__Dot11SecurityConfiguration*      Security                       1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11SecurityConfiguration is a complexType.
///
class tt__Dot11SecurityConfiguration : public xsd__anyType
{ public:
/// Element "Mode" of type "http://www.onvif.org/ver10/schema":Dot11SecurityMode.
    enum tt__Dot11SecurityMode           Mode                           1;	///< Required element.
/// Element "Algorithm" of type "http://www.onvif.org/ver10/schema":Dot11Cipher.
    enum tt__Dot11Cipher*                Algorithm                      0;	///< Optional element.
/// Element "PSK" of type "http://www.onvif.org/ver10/schema":Dot11PSKSet.
    tt__Dot11PSKSet*                     PSK                            0;	///< Optional element.
/// Element "Dot1X" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken*                  Dot1X                          0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":Dot11SecurityConfigurationExtension.
    tt__Dot11SecurityConfigurationExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11SecurityConfigurationExtension is a complexType.
///
class tt__Dot11SecurityConfigurationExtension : public xsd__anyType
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11PSKSet is a complexType.
///
class tt__Dot11PSKSet : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   According to IEEE802.11-2007 H.4.1 the RSNA PSK consists of 256 bits, or 64 octets when represented in hex<br/>
///   Either Key or Passphrase shall be given, if both are supplied Key shall be used by the device and Passphrase ignored.
/// </BLOCKQUOTE></PRE>
///
/// Element "Key" of type "http://www.onvif.org/ver10/schema":Dot11PSK.
    tt__Dot11PSK*                        Key                            0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   According to IEEE802.11-2007 H.4.1 a pass-phrase is a sequence of between 8 and 63 ASCII-encoded characters and
///   each character in the pass-phrase must have an encoding in the range of 32 to 126 (decimal),inclusive.<br/>
///   If only Passpharse is supplied the Key shall be derived using the algorithm described in IEEE802.11-2007 section H.4
/// </BLOCKQUOTE></PRE>
///
/// Element "Passphrase" of type "http://www.onvif.org/ver10/schema":Dot11PSKPassphrase.
    tt__Dot11PSKPassphrase*              Passphrase                     0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":Dot11PSKSetExtension.
    tt__Dot11PSKSetExtension*            Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11PSKSetExtension is a complexType.
///
class tt__Dot11PSKSetExtension : public xsd__anyType
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkInterfaceSetConfigurationExtension2 is a complexType.
///
class tt__NetworkInterfaceSetConfigurationExtension2 : public xsd__anyType
{ public:
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11Capabilities is a complexType.
///
class tt__Dot11Capabilities : public xsd__anyType
{ public:
/// Element "TKIP" of type xs:boolean.
    bool                                 TKIP                           1;	///< Required element.
/// Element "ScanAvailableNetworks" of type xs:boolean.
    bool                                 ScanAvailableNetworks          1;	///< Required element.
/// Element "MultipleConfiguration" of type xs:boolean.
    bool                                 MultipleConfiguration          1;	///< Required element.
/// Element "AdHocStationMode" of type xs:boolean.
    bool                                 AdHocStationMode               1;	///< Required element.
/// Element "WEP" of type xs:boolean.
    bool                                 WEP                            1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11Status is a complexType.
///
class tt__Dot11Status : public xsd__anyType
{ public:
/// Element "SSID" of type "http://www.onvif.org/ver10/schema":Dot11SSIDType.
    tt__Dot11SSIDType                    SSID                           1;	///< Required element.
/// Element "BSSID" of type xs:string.
    std::string*                         BSSID                          0;	///< Optional element.
/// Element "PairCipher" of type "http://www.onvif.org/ver10/schema":Dot11Cipher.
    enum tt__Dot11Cipher*                PairCipher                     0;	///< Optional element.
/// Element "GroupCipher" of type "http://www.onvif.org/ver10/schema":Dot11Cipher.
    enum tt__Dot11Cipher*                GroupCipher                    0;	///< Optional element.
/// Element "SignalStrength" of type "http://www.onvif.org/ver10/schema":Dot11SignalStrength.
    enum tt__Dot11SignalStrength*        SignalStrength                 0;	///< Optional element.
/// Element "ActiveConfigAlias" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ActiveConfigAlias              1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11AvailableNetworks is a complexType.
///
class tt__Dot11AvailableNetworks : public xsd__anyType
{ public:
/// Element "SSID" of type "http://www.onvif.org/ver10/schema":Dot11SSIDType.
    tt__Dot11SSIDType                    SSID                           1;	///< Required element.
/// Element "BSSID" of type xs:string.
    std::string*                         BSSID                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   See IEEE802.11 7.3.2.25.2 for details.
/// </BLOCKQUOTE></PRE>
///
/// Vector of enum tt__Dot11AuthAndMangementSuite of length 0..unbounded.
    std::vector<enum tt__Dot11AuthAndMangementSuite> AuthAndMangementSuite          0;	///< Multiple elements.
/// Vector of enum tt__Dot11Cipher of length 0..unbounded.
    std::vector<enum tt__Dot11Cipher   > PairCipher                     0;	///< Multiple elements.
/// Vector of enum tt__Dot11Cipher of length 0..unbounded.
    std::vector<enum tt__Dot11Cipher   > GroupCipher                    0;	///< Multiple elements.
/// Element "SignalStrength" of type "http://www.onvif.org/ver10/schema":Dot11SignalStrength.
    enum tt__Dot11SignalStrength*        SignalStrength                 0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":Dot11AvailableNetworksExtension.
    tt__Dot11AvailableNetworksExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11AvailableNetworksExtension is a complexType.
///
class tt__Dot11AvailableNetworksExtension : public xsd__anyType
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
};

/// @brief "http://www.onvif.org/ver10/schema":Capabilities is a complexType.
///
class tt__Capabilities : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Analytics capabilities
/// </BLOCKQUOTE></PRE>
///
/// Element "Analytics" of type "http://www.onvif.org/ver10/schema":AnalyticsCapabilities.
    tt__AnalyticsCapabilities*           Analytics                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Device capabilities
/// </BLOCKQUOTE></PRE>
///
/// Element "Device" of type "http://www.onvif.org/ver10/schema":DeviceCapabilities.
    tt__DeviceCapabilities*              Device                         0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Event capabilities
/// </BLOCKQUOTE></PRE>
///
/// Element "Events" of type "http://www.onvif.org/ver10/schema":EventCapabilities.
    tt__EventCapabilities*               Events                         0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Imaging capabilities
/// </BLOCKQUOTE></PRE>
///
/// Element "Imaging" of type "http://www.onvif.org/ver10/schema":ImagingCapabilities.
    tt__ImagingCapabilities*             Imaging                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Media capabilities
/// </BLOCKQUOTE></PRE>
///
/// Element "Media" of type "http://www.onvif.org/ver10/schema":MediaCapabilities.
    tt__MediaCapabilities*               Media                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   PTZ capabilities
/// </BLOCKQUOTE></PRE>
///
/// Element "PTZ" of type "http://www.onvif.org/ver10/schema":PTZCapabilities.
    tt__PTZCapabilities*                 PTZ                            0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":CapabilitiesExtension.
    tt__CapabilitiesExtension*           Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":CapabilitiesExtension is a complexType.
///
class tt__CapabilitiesExtension : public xsd__anyType
{ public:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Element "DeviceIO" of type "http://www.onvif.org/ver10/schema":DeviceIOCapabilities.
    tt__DeviceIOCapabilities*            DeviceIO                       0;	///< Optional element.
/// Element "Display" of type "http://www.onvif.org/ver10/schema":DisplayCapabilities.
    tt__DisplayCapabilities*             Display                        0;	///< Optional element.
/// Element "Recording" of type "http://www.onvif.org/ver10/schema":RecordingCapabilities.
    tt__RecordingCapabilities*           Recording                      0;	///< Optional element.
/// Element "Search" of type "http://www.onvif.org/ver10/schema":SearchCapabilities.
    tt__SearchCapabilities*              Search                         0;	///< Optional element.
/// Element "Replay" of type "http://www.onvif.org/ver10/schema":ReplayCapabilities.
    tt__ReplayCapabilities*              Replay                         0;	///< Optional element.
/// Element "Receiver" of type "http://www.onvif.org/ver10/schema":ReceiverCapabilities.
    tt__ReceiverCapabilities*            Receiver                       0;	///< Optional element.
/// Element "AnalyticsDevice" of type "http://www.onvif.org/ver10/schema":AnalyticsDeviceCapabilities.
    tt__AnalyticsDeviceCapabilities*     AnalyticsDevice                0;	///< Optional element.
/// Element "Extensions" of type "http://www.onvif.org/ver10/schema":CapabilitiesExtension2.
    tt__CapabilitiesExtension2*          Extensions                     0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":CapabilitiesExtension2 is a complexType.
///
class tt__CapabilitiesExtension2 : public xsd__anyType
{ public:
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
};

/// @brief "http://www.onvif.org/ver10/schema":AnalyticsCapabilities is a complexType.
///
class tt__AnalyticsCapabilities : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Analytics service URI.
/// </BLOCKQUOTE></PRE>
///
/// Element "XAddr" of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not rules are supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "RuleSupport" of type xs:boolean.
    bool                                 RuleSupport                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not modules are supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "AnalyticsModuleSupport" of type xs:boolean.
    bool                                 AnalyticsModuleSupport         1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":DeviceCapabilities is a complexType.
///
class tt__DeviceCapabilities : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Device service URI.
/// </BLOCKQUOTE></PRE>
///
/// Element "XAddr" of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Network capabilities.
/// </BLOCKQUOTE></PRE>
///
/// Element "Network" of type "http://www.onvif.org/ver10/schema":NetworkCapabilities.
    tt__NetworkCapabilities*             Network                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   System capabilities.
/// </BLOCKQUOTE></PRE>
///
/// Element "System" of type "http://www.onvif.org/ver10/schema":SystemCapabilities.
    tt__SystemCapabilities*              System                         0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   I/O capabilities.
/// </BLOCKQUOTE></PRE>
///
/// Element "IO" of type "http://www.onvif.org/ver10/schema":IOCapabilities.
    tt__IOCapabilities*                  IO                             0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Security capabilities.
/// </BLOCKQUOTE></PRE>
///
/// Element "Security" of type "http://www.onvif.org/ver10/schema":SecurityCapabilities.
    tt__SecurityCapabilities*            Security                       0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":DeviceCapabilitiesExtension.
    tt__DeviceCapabilitiesExtension*     Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":DeviceCapabilitiesExtension is a complexType.
///
class tt__DeviceCapabilitiesExtension : public xsd__anyType
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
};

/// @brief "http://www.onvif.org/ver10/schema":EventCapabilities is a complexType.
///
class tt__EventCapabilities : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Event service URI.
/// </BLOCKQUOTE></PRE>
///
/// Element "XAddr" of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not WS Subscription policy is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "WSSubscriptionPolicySupport" of type xs:boolean.
    bool                                 WSSubscriptionPolicySupport    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not WS Pull Point is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "WSPullPointSupport" of type xs:boolean.
    bool                                 WSPullPointSupport             1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not WS Pausable Subscription Manager Interface is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "WSPausableSubscriptionManagerInterfaceSupport" of type xs:boolean.
    bool                                 WSPausableSubscriptionManagerInterfaceSupport 1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":IOCapabilities is a complexType.
///
class tt__IOCapabilities : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Number of input connectors.
/// </BLOCKQUOTE></PRE>
///
/// Element "InputConnectors" of type xs:int.
    int*                                 InputConnectors                0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Number of relay outputs.
/// </BLOCKQUOTE></PRE>
///
/// Element "RelayOutputs" of type xs:int.
    int*                                 RelayOutputs                   0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":IOCapabilitiesExtension.
    tt__IOCapabilitiesExtension*         Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":IOCapabilitiesExtension is a complexType.
///
class tt__IOCapabilitiesExtension : public xsd__anyType
{ public:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Element "Auxiliary" of type xs:boolean.
    bool*                                Auxiliary                      0;	///< Optional element.
/// Vector of tt__AuxiliaryData of length 0..unbounded.
    std::vector<tt__AuxiliaryData      > AuxiliaryCommands              0;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":IOCapabilitiesExtension2.
    tt__IOCapabilitiesExtension2*        Extension                      1;	///< Required element.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":IOCapabilitiesExtension2 is a complexType.
///
class tt__IOCapabilitiesExtension2 : public xsd__anyType
{ public:
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
};

/// @brief "http://www.onvif.org/ver10/schema":MediaCapabilities is a complexType.
///
class tt__MediaCapabilities : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Media service URI.
/// </BLOCKQUOTE></PRE>
///
/// Element "XAddr" of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Streaming capabilities.
/// </BLOCKQUOTE></PRE>
///
/// Element "StreamingCapabilities" of type "http://www.onvif.org/ver10/schema":RealTimeStreamingCapabilities.
    tt__RealTimeStreamingCapabilities*   StreamingCapabilities          1;	///< Required element.
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":MediaCapabilitiesExtension.
    tt__MediaCapabilitiesExtension*      Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":MediaCapabilitiesExtension is a complexType.
///
class tt__MediaCapabilitiesExtension : public xsd__anyType
{ public:
/// Element "ProfileCapabilities" of type "http://www.onvif.org/ver10/schema":ProfileCapabilities.
    tt__ProfileCapabilities*             ProfileCapabilities            1;	///< Required element.
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":RealTimeStreamingCapabilities is a complexType.
///
class tt__RealTimeStreamingCapabilities : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not RTP multicast is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "RTPMulticast" of type xs:boolean.
    bool*                                RTPMulticast                   0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not RTP over TCP is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "RTP_TCP" of type xs:boolean.
    bool*                                RTP_USCORETCP                  0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not RTP/RTSP/TCP is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "RTP_RTSP_TCP" of type xs:boolean.
    bool*                                RTP_USCORERTSP_USCORETCP       0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":RealTimeStreamingCapabilitiesExtension.
    tt__RealTimeStreamingCapabilitiesExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":RealTimeStreamingCapabilitiesExtension is a complexType.
///
class tt__RealTimeStreamingCapabilitiesExtension : public xsd__anyType
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
};

/// @brief "http://www.onvif.org/ver10/schema":ProfileCapabilities is a complexType.
///
class tt__ProfileCapabilities : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Maximum number of profiles.
/// </BLOCKQUOTE></PRE>
///
/// Element "MaximumNumberOfProfiles" of type xs:int.
    int                                  MaximumNumberOfProfiles        1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkCapabilities is a complexType.
///
class tt__NetworkCapabilities : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not IP filtering is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "IPFilter" of type xs:boolean.
    bool*                                IPFilter                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not zeroconf is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "ZeroConfiguration" of type xs:boolean.
    bool*                                ZeroConfiguration              0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not IPv6 is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "IPVersion6" of type xs:boolean.
    bool*                                IPVersion6                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "DynDNS" of type xs:boolean.
    bool*                                DynDNS                         0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":NetworkCapabilitiesExtension.
    tt__NetworkCapabilitiesExtension*    Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkCapabilitiesExtension is a complexType.
///
class tt__NetworkCapabilitiesExtension : public xsd__anyType
{ public:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Element "Dot11Configuration" of type xs:boolean.
    bool*                                Dot11Configuration             0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":NetworkCapabilitiesExtension2.
    tt__NetworkCapabilitiesExtension2*   Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkCapabilitiesExtension2 is a complexType.
///
class tt__NetworkCapabilitiesExtension2 : public xsd__anyType
{ public:
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
};

/// @brief "http://www.onvif.org/ver10/schema":SecurityCapabilities is a complexType.
///
class tt__SecurityCapabilities : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not TLS 1.1 is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "TLS1.1" of type xs:boolean.
    bool                                 TLS1_x002e1                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not TLS 1.2 is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "TLS1.2" of type xs:boolean.
    bool                                 TLS1_x002e2                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not onboard key generation is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "OnboardKeyGeneration" of type xs:boolean.
    bool                                 OnboardKeyGeneration           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not access policy configuration is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "AccessPolicyConfig" of type xs:boolean.
    bool                                 AccessPolicyConfig             1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not WS-Security X.509 token is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "X.509Token" of type xs:boolean.
    bool                                 X_x002e509Token                1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not WS-Security SAML token is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "SAMLToken" of type xs:boolean.
    bool                                 SAMLToken                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not WS-Security Kerberos token is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "KerberosToken" of type xs:boolean.
    bool                                 KerberosToken                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not WS-Security REL token is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "RELToken" of type xs:boolean.
    bool                                 RELToken                       1;	///< Required element.
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":SecurityCapabilitiesExtension.
    tt__SecurityCapabilitiesExtension*   Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":SecurityCapabilitiesExtension is a complexType.
///
class tt__SecurityCapabilitiesExtension : public xsd__anyType
{ public:
/// Element "TLS1.0" of type xs:boolean.
    bool                                 TLS1_x002e0                    1;	///< Required element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":SecurityCapabilitiesExtension2.
    tt__SecurityCapabilitiesExtension2*  Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":SecurityCapabilitiesExtension2 is a complexType.
///
class tt__SecurityCapabilitiesExtension2 : public xsd__anyType
{ public:
/// Element "Dot1X" of type xs:boolean.
    bool                                 Dot1X                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   EAP Methods supported by the device. The int values refer to the <a href="http://www.iana.org/assignments/eap-numbers/eap-numbers.xhtml">IANA EAP Registry</a>.
/// </BLOCKQUOTE></PRE>
///
/// Vector of int of length 0..unbounded.
    std::vector<int                    > SupportedEAPMethod             0;	///< Multiple elements.
/// Element "RemoteUserHandling" of type xs:boolean.
    bool                                 RemoteUserHandling             1;	///< Required element.
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
};

/// @brief "http://www.onvif.org/ver10/schema":SystemCapabilities is a complexType.
///
class tt__SystemCapabilities : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not WS Discovery resolve requests are supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "DiscoveryResolve" of type xs:boolean.
    bool                                 DiscoveryResolve               1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not WS-Discovery Bye is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "DiscoveryBye" of type xs:boolean.
    bool                                 DiscoveryBye                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not remote discovery is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "RemoteDiscovery" of type xs:boolean.
    bool                                 RemoteDiscovery                1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not system backup is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "SystemBackup" of type xs:boolean.
    bool                                 SystemBackup                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not system logging is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "SystemLogging" of type xs:boolean.
    bool                                 SystemLogging                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not firmware upgrade is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "FirmwareUpgrade" of type xs:boolean.
    bool                                 FirmwareUpgrade                1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates supported ONVIF version(s).
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__OnvifVersion* of length 1..unbounded.
    std::vector<tt__OnvifVersion*      > SupportedVersions              1;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":SystemCapabilitiesExtension.
    tt__SystemCapabilitiesExtension*     Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":SystemCapabilitiesExtension is a complexType.
///
class tt__SystemCapabilitiesExtension : public xsd__anyType
{ public:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Element "HttpFirmwareUpgrade" of type xs:boolean.
    bool*                                HttpFirmwareUpgrade            0;	///< Optional element.
/// Element "HttpSystemBackup" of type xs:boolean.
    bool*                                HttpSystemBackup               0;	///< Optional element.
/// Element "HttpSystemLogging" of type xs:boolean.
    bool*                                HttpSystemLogging              0;	///< Optional element.
/// Element "HttpSupportInformation" of type xs:boolean.
    bool*                                HttpSupportInformation         0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":SystemCapabilitiesExtension2.
    tt__SystemCapabilitiesExtension2*    Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":SystemCapabilitiesExtension2 is a complexType.
///
class tt__SystemCapabilitiesExtension2 : public xsd__anyType
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
};

/// @brief "http://www.onvif.org/ver10/schema":OnvifVersion is a complexType.
///
class tt__OnvifVersion : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Major version number.
/// </BLOCKQUOTE></PRE>
///
/// Element "Major" of type xs:int.
    int                                  Major                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Two digit minor version number.
///   If major version number is less than "16", X.0.1 maps to "01" and X.2.1 maps to "21" where X stands for Major version number.
///   Otherwise, minor number is month of release, such as "06" for June.
/// </BLOCKQUOTE></PRE>
///
/// Element "Minor" of type xs:int.
    int                                  Minor                          1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":ImagingCapabilities is a complexType.
///
class tt__ImagingCapabilities : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Imaging service URI.
/// </BLOCKQUOTE></PRE>
///
/// Element "XAddr" of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZCapabilities is a complexType.
///
class tt__PTZCapabilities : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   PTZ service URI.
/// </BLOCKQUOTE></PRE>
///
/// Element "XAddr" of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":DeviceIOCapabilities is a complexType.
///
class tt__DeviceIOCapabilities : public xsd__anyType
{ public:
/// Element "XAddr" of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// Element "VideoSources" of type xs:int.
    int                                  VideoSources                   1;	///< Required element.
/// Element "VideoOutputs" of type xs:int.
    int                                  VideoOutputs                   1;	///< Required element.
/// Element "AudioSources" of type xs:int.
    int                                  AudioSources                   1;	///< Required element.
/// Element "AudioOutputs" of type xs:int.
    int                                  AudioOutputs                   1;	///< Required element.
/// Element "RelayOutputs" of type xs:int.
    int                                  RelayOutputs                   1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":DisplayCapabilities is a complexType.
///
class tt__DisplayCapabilities : public xsd__anyType
{ public:
/// Element "XAddr" of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indication that the SetLayout command supports only predefined layouts.
/// </BLOCKQUOTE></PRE>
///
/// Element "FixedLayout" of type xs:boolean.
    bool                                 FixedLayout                    1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":RecordingCapabilities is a complexType.
///
class tt__RecordingCapabilities : public xsd__anyType
{ public:
/// Element "XAddr" of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// Element "ReceiverSource" of type xs:boolean.
    bool                                 ReceiverSource                 1;	///< Required element.
/// Element "MediaProfileSource" of type xs:boolean.
    bool                                 MediaProfileSource             1;	///< Required element.
/// Element "DynamicRecordings" of type xs:boolean.
    bool                                 DynamicRecordings              1;	///< Required element.
/// Element "DynamicTracks" of type xs:boolean.
    bool                                 DynamicTracks                  1;	///< Required element.
/// Element "MaxStringLength" of type xs:int.
    int                                  MaxStringLength                1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":SearchCapabilities is a complexType.
///
class tt__SearchCapabilities : public xsd__anyType
{ public:
/// Element "XAddr" of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// Element "MetadataSearch" of type xs:boolean.
    bool                                 MetadataSearch                 1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":ReplayCapabilities is a complexType.
///
class tt__ReplayCapabilities : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   The address of the replay service.
/// </BLOCKQUOTE></PRE>
///
/// Element "XAddr" of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":ReceiverCapabilities is a complexType.
///
class tt__ReceiverCapabilities : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   The address of the receiver service.
/// </BLOCKQUOTE></PRE>
///
/// Element "XAddr" of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether the device can receive RTP multicast streams.
/// </BLOCKQUOTE></PRE>
///
/// Element "RTP_Multicast" of type xs:boolean.
    bool                                 RTP_USCOREMulticast            1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether the device can receive RTP/TCP streams
/// </BLOCKQUOTE></PRE>
///
/// Element "RTP_TCP" of type xs:boolean.
    bool                                 RTP_USCORETCP                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether the device can receive RTP/RTSP/TCP streams.
/// </BLOCKQUOTE></PRE>
///
/// Element "RTP_RTSP_TCP" of type xs:boolean.
    bool                                 RTP_USCORERTSP_USCORETCP       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The maximum number of receivers supported by the device.
/// </BLOCKQUOTE></PRE>
///
/// Element "SupportedReceivers" of type xs:int.
    int                                  SupportedReceivers             1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The maximum allowed length for RTSP URIs.
/// </BLOCKQUOTE></PRE>
///
/// Element "MaximumRTSPURILength" of type xs:int.
    int                                  MaximumRTSPURILength           1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":AnalyticsDeviceCapabilities is a complexType.
///
class tt__AnalyticsDeviceCapabilities : public xsd__anyType
{ public:
/// Element "XAddr" of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Obsolete property.
/// </BLOCKQUOTE></PRE>
///
/// Element "RuleSupport" of type xs:boolean.
    bool*                                RuleSupport                    0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":AnalyticsDeviceExtension.
    tt__AnalyticsDeviceExtension*        Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":AnalyticsDeviceExtension is a complexType.
///
class tt__AnalyticsDeviceExtension : public xsd__anyType
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
};

/// @brief "http://www.onvif.org/ver10/schema":SystemLog is a complexType.
///
class tt__SystemLog : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   The log information as attachment data.
/// </BLOCKQUOTE></PRE>
///
/// Element "Binary" of type "http://www.onvif.org/ver10/schema":AttachmentData.
    tt__AttachmentData*                  Binary                         0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The log information as character data.
/// </BLOCKQUOTE></PRE>
///
/// Element "String" of type xs:string.
    std::string*                         String                         0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":SupportInformation is a complexType.
///
class tt__SupportInformation : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   The support information as attachment data.
/// </BLOCKQUOTE></PRE>
///
/// Element "Binary" of type "http://www.onvif.org/ver10/schema":AttachmentData.
    tt__AttachmentData*                  Binary                         0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The support information as character data.
/// </BLOCKQUOTE></PRE>
///
/// Element "String" of type xs:string.
    std::string*                         String                         0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":BinaryData is a complexType.
///
class tt__BinaryData : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   base64 encoded binary data.
/// </BLOCKQUOTE></PRE>
///
/// Element "Data" of type xs:base64Binary.
    xsd__base64Binary                    Data                           1;	///< Required element.
/// Imported attribute reference xmime:contentType.
  @ _xmime__contentType*                 xmime__contentType             0;	///< Optional attribute.
};

/// @brief "http://www.onvif.org/ver10/schema":AttachmentData is a complexType.
///
class tt__AttachmentData : public xsd__anyType
{ public:
/// Element reference "http://www.onvif.org/ver10/schema:""http://www.w3.org/2004/08/xop/include":Include.
    xop__Include*                        xop__Include_                  1;	///< Required element.
/// Imported attribute reference xmime:contentType.
  @ _xmime__contentType*                 xmime__contentType             0;	///< Optional attribute.
};

/// @brief "http://www.onvif.org/ver10/schema":BackupFile is a complexType.
///
class tt__BackupFile : public xsd__anyType
{ public:
/// Element "Name" of type xs:string.
    std::string                          Name                           1;	///< Required element.
/// Element "Data" of type "http://www.onvif.org/ver10/schema":AttachmentData.
    tt__AttachmentData*                  Data                           1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":SystemLogUriList is a complexType.
///
class tt__SystemLogUriList : public xsd__anyType
{ public:
/// Vector of tt__SystemLogUri* of length 0..unbounded.
    std::vector<tt__SystemLogUri*      > SystemLog                      0;	///< Multiple elements.
};

/// @brief "http://www.onvif.org/ver10/schema":SystemLogUri is a complexType.
///
class tt__SystemLogUri : public xsd__anyType
{ public:
/// Element "Type" of type "http://www.onvif.org/ver10/schema":SystemLogType.
    enum tt__SystemLogType               Type                           1;	///< Required element.
/// Element "Uri" of type xs:anyURI.
    xsd__anyURI                          Uri                            1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":SystemDateTime is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   General date time inforamtion returned by the GetSystemDateTime method.
/// </BLOCKQUOTE></PRE>
///
class tt__SystemDateTime : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicates if the time is set manully or through NTP.
/// </BLOCKQUOTE></PRE>
///
/// Element "DateTimeType" of type "http://www.onvif.org/ver10/schema":SetDateTimeType.
    enum tt__SetDateTimeType             DateTimeType                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Informative indicator whether daylight savings is currently on/off.
/// </BLOCKQUOTE></PRE>
///
/// Element "DaylightSavings" of type xs:boolean.
    bool                                 DaylightSavings                1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Timezone information in Posix format.
/// </BLOCKQUOTE></PRE>
///
/// Element "TimeZone" of type "http://www.onvif.org/ver10/schema":TimeZone.
    tt__TimeZone*                        TimeZone                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Current system date and time in UTC format. This field is mandatory since version 2.0.
/// </BLOCKQUOTE></PRE>
///
/// Element "UTCDateTime" of type "http://www.onvif.org/ver10/schema":DateTime.
    tt__DateTime*                        UTCDateTime                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Date and time in local format.
/// </BLOCKQUOTE></PRE>
///
/// Element "LocalDateTime" of type "http://www.onvif.org/ver10/schema":DateTime.
    tt__DateTime*                        LocalDateTime                  0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":SystemDateTimeExtension.
    tt__SystemDateTimeExtension*         Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":SystemDateTimeExtension is a complexType.
///
class tt__SystemDateTimeExtension : public xsd__anyType
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
};

/// @brief "http://www.onvif.org/ver10/schema":DateTime is a complexType.
///
class tt__DateTime : public xsd__anyType
{ public:
/// Element "Time" of type "http://www.onvif.org/ver10/schema":Time.
    tt__Time*                            Time                           1;	///< Required element.
/// Element "Date" of type "http://www.onvif.org/ver10/schema":Date.
    tt__Date*                            Date                           1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":Date is a complexType.
///
class tt__Date : public xsd__anyType
{ public:
/// Element "Year" of type xs:int.
    int                                  Year                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Range is 1 to 12.
/// </BLOCKQUOTE></PRE>
///
/// Element "Month" of type xs:int.
    int                                  Month                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Range is 1 to 31.
/// </BLOCKQUOTE></PRE>
///
/// Element "Day" of type xs:int.
    int                                  Day                            1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":Time is a complexType.
///
class tt__Time : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Range is 0 to 23.
/// </BLOCKQUOTE></PRE>
///
/// Element "Hour" of type xs:int.
    int                                  Hour                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Range is 0 to 59.
/// </BLOCKQUOTE></PRE>
///
/// Element "Minute" of type xs:int.
    int                                  Minute                         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Range is 0 to 61 (typically 59).
/// </BLOCKQUOTE></PRE>
///
/// Element "Second" of type xs:int.
    int                                  Second                         1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":TimeZone is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   The TZ format is specified by POSIX, please refer to POSIX 1003.1 section 8.3<br/>
///   Example: Europe, Paris TZ=CET-1CEST,M3.5.0/2,M10.5.0/3<br/>
///   CET = designation for standard time when daylight saving is not in force<br/>
///   -1 = offset in hours = negative so 1 hour east of Greenwich meridian<br/>
///   CEST = designation when daylight saving is in force ("Central European Summer Time")<br/>
///   , = no offset number between code and comma, so default to one hour ahead for daylight saving<br/>
///   M3.5.0 = when daylight saving starts = the last Sunday in March (the "5th" week means the last in the month)<br/>
///   /2, = the local time when the switch occurs = 2 a.m. in this case<br/>
///   M10.5.0 = when daylight saving ends = the last Sunday in October.<br/>
///   /3, = the local time when the switch occurs = 3 a.m. in this case<br/>
/// </BLOCKQUOTE></PRE>
///
class tt__TimeZone : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Posix timezone string.
/// </BLOCKQUOTE></PRE>
///
/// Element "TZ" of type xs:token.
    xsd__token                           TZ                             1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":RemoteUser is a complexType.
///
class tt__RemoteUser : public xsd__anyType
{ public:
/// Element "Username" of type xs:string.
    std::string                          Username                       1;	///< Required element.
/// Element "Password" of type xs:string.
    std::string*                         Password                       0;	///< Optional element.
/// Element "UseDerivedPassword" of type xs:boolean.
    bool                                 UseDerivedPassword             1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":User is a complexType.
///
class tt__User : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Username string.
/// </BLOCKQUOTE></PRE>
///
/// Element "Username" of type xs:string.
    std::string                          Username                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Password string.
/// </BLOCKQUOTE></PRE>
///
/// Element "Password" of type xs:string.
    std::string*                         Password                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   User level string.
/// </BLOCKQUOTE></PRE>
///
/// Element "UserLevel" of type "http://www.onvif.org/ver10/schema":UserLevel.
    enum tt__UserLevel                   UserLevel                      1;	///< Required element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":UserExtension.
    tt__UserExtension*                   Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":UserExtension is a complexType.
///
class tt__UserExtension : public xsd__anyType
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
};

/// @brief "http://www.onvif.org/ver10/schema":CertificateGenerationParameters is a complexType.
///
class tt__CertificateGenerationParameters : public xsd__anyType
{ public:
/// Element "CertificateID" of type xs:token.
    xsd__token*                          CertificateID                  0;	///< Optional element.
/// Element "Subject" of type xs:string.
    std::string*                         Subject                        0;	///< Optional element.
/// Element "ValidNotBefore" of type xs:token.
    xsd__token*                          ValidNotBefore                 0;	///< Optional element.
/// Element "ValidNotAfter" of type xs:token.
    xsd__token*                          ValidNotAfter                  0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":CertificateGenerationParametersExtension.
    tt__CertificateGenerationParametersExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":CertificateGenerationParametersExtension is a complexType.
///
class tt__CertificateGenerationParametersExtension : public xsd__anyType
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
};

/// @brief "http://www.onvif.org/ver10/schema":Certificate is a complexType.
///
class tt__Certificate : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Certificate id.
/// </BLOCKQUOTE></PRE>
///
/// Element "CertificateID" of type xs:token.
    xsd__token                           CertificateID                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   base64 encoded DER representation of certificate.
/// </BLOCKQUOTE></PRE>
///
/// Element "Certificate" of type "http://www.onvif.org/ver10/schema":BinaryData.
    tt__BinaryData*                      Certificate                    1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":CertificateStatus is a complexType.
///
class tt__CertificateStatus : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Certificate id.
/// </BLOCKQUOTE></PRE>
///
/// Element "CertificateID" of type xs:token.
    xsd__token                           CertificateID                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not a certificate is used in a HTTPS configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "Status" of type xs:boolean.
    bool                                 Status                         1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":CertificateWithPrivateKey is a complexType.
///
class tt__CertificateWithPrivateKey : public xsd__anyType
{ public:
/// Element "CertificateID" of type xs:token.
    xsd__token*                          CertificateID                  0;	///< Optional element.
/// Element "Certificate" of type "http://www.onvif.org/ver10/schema":BinaryData.
    tt__BinaryData*                      Certificate                    1;	///< Required element.
/// Element "PrivateKey" of type "http://www.onvif.org/ver10/schema":BinaryData.
    tt__BinaryData*                      PrivateKey                     1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":CertificateInformation is a complexType.
///
class tt__CertificateInformation : public xsd__anyType
{ public:
/// Element "CertificateID" of type xs:token.
    xsd__token                           CertificateID                  1;	///< Required element.
/// Element "IssuerDN" of type xs:string.
    std::string*                         IssuerDN                       0;	///< Optional element.
/// Element "SubjectDN" of type xs:string.
    std::string*                         SubjectDN                      0;	///< Optional element.
/// Element "KeyUsage" of type "http://www.onvif.org/ver10/schema":CertificateUsage.
    tt__CertificateUsage*                KeyUsage                       0;	///< Optional element.
/// Element "ExtendedKeyUsage" of type "http://www.onvif.org/ver10/schema":CertificateUsage.
    tt__CertificateUsage*                ExtendedKeyUsage               0;	///< Optional element.
/// Element "KeyLength" of type xs:int.
    int*                                 KeyLength                      0;	///< Optional element.
/// Element "Version" of type xs:string.
    std::string*                         Version                        0;	///< Optional element.
/// Element "SerialNum" of type xs:string.
    std::string*                         SerialNum                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Validity Range is from "NotBefore" to "NotAfter"; the corresponding DateTimeRange is from "From" to "Until"
/// </BLOCKQUOTE></PRE>
///
/// Element "SignatureAlgorithm" of type xs:string.
    std::string*                         SignatureAlgorithm             0;	///< Optional element.
/// Element "Validity" of type "http://www.onvif.org/ver10/schema":DateTimeRange.
    tt__DateTimeRange*                   Validity                       0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":CertificateInformationExtension.
    tt__CertificateInformationExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":CertificateInformationExtension is a complexType.
///
class tt__CertificateInformationExtension : public xsd__anyType
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
};

/// @brief "http://www.onvif.org/ver10/schema":Dot1XConfiguration is a complexType.
///
class tt__Dot1XConfiguration : public xsd__anyType
{ public:
/// Element "Dot1XConfigurationToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   Dot1XConfigurationToken        1;	///< Required element.
/// Element "Identity" of type xs:string.
    std::string                          Identity                       1;	///< Required element.
/// Element "AnonymousID" of type xs:string.
    std::string*                         AnonymousID                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   EAP Method type as defined in <a href="http://www.iana.org/assignments/eap-numbers/eap-numbers.xhtml">IANA EAP Registry</a>.
/// </BLOCKQUOTE></PRE>
///
/// Element "EAPMethod" of type xs:int.
    int                                  EAPMethod                      1;	///< Required element.
/// Vector of xsd__token of length 0..unbounded.
    std::vector<xsd__token             > CACertificateID                0;	///< Multiple elements.
/// Element "EAPMethodConfiguration" of type "http://www.onvif.org/ver10/schema":EAPMethodConfiguration.
    tt__EAPMethodConfiguration*          EAPMethodConfiguration         0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":Dot1XConfigurationExtension.
    tt__Dot1XConfigurationExtension*     Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":Dot1XConfigurationExtension is a complexType.
///
class tt__Dot1XConfigurationExtension : public xsd__anyType
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
};

/// @brief "http://www.onvif.org/ver10/schema":EAPMethodConfiguration is a complexType.
///
class tt__EAPMethodConfiguration : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Confgiuration information for TLS Method.
/// </BLOCKQUOTE></PRE>
///
/// Element "TLSConfiguration" of type "http://www.onvif.org/ver10/schema":TLSConfiguration.
    tt__TLSConfiguration*                TLSConfiguration               0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Password for those EAP Methods that require a password. The password shall never be returned on a get method.
/// </BLOCKQUOTE></PRE>
///
/// Element "Password" of type xs:string.
    std::string*                         Password                       0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":EapMethodExtension.
    tt__EapMethodExtension*              Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":EapMethodExtension is a complexType.
///
class tt__EapMethodExtension : public xsd__anyType
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
};

/// @brief "http://www.onvif.org/ver10/schema":TLSConfiguration is a complexType.
///
class tt__TLSConfiguration : public xsd__anyType
{ public:
/// Element "CertificateID" of type xs:token.
    xsd__token                           CertificateID                  1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":GenericEapPwdConfigurationExtension is a complexType.
///
class tt__GenericEapPwdConfigurationExtension : public xsd__anyType
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
};

/// @brief "http://www.onvif.org/ver10/schema":RelayOutputSettings is a complexType.
///
class tt__RelayOutputSettings : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   'Bistable' or 'Monostable'
///   <ul>
///   <li>Bistable After setting the state, the relay remains in this state.</li>
///   <li>Monostable After setting the state, the relay returns to its idle state after the specified time.</li>
///   </ul>
/// </BLOCKQUOTE></PRE>
///
/// Element "Mode" of type "http://www.onvif.org/ver10/schema":RelayMode.
    enum tt__RelayMode                   Mode                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Time after which the relay returns to its idle state if it is in monostable mode. If the Mode field is set to bistable mode the value of the parameter can be ignored.
/// </BLOCKQUOTE></PRE>
///
/// Element "DelayTime" of type xs:duration.
    xsd__duration                        DelayTime                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   'open' or 'closed'
///   <ul>
///   <li>'open' means that the relay is open when the relay state is set to 'inactive' through the trigger command and closed when the state is set to 'active' through the same command.</li>
///   <li>'closed' means that the relay is closed when the relay state is set to 'inactive' through the trigger command and open when the state is set to 'active' through the same command.</li>
///   </ul>
/// </BLOCKQUOTE></PRE>
///
/// Element "IdleState" of type "http://www.onvif.org/ver10/schema":RelayIdleState.
    enum tt__RelayIdleState              IdleState                      1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZNodeExtension is a complexType.
///
class tt__PTZNodeExtension : public xsd__anyType
{ public:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <PRE><BLOCKQUOTE>
///   Detail of supported Preset Tour feature.
/// </BLOCKQUOTE></PRE>
///
/// Element "SupportedPresetTour" of type "http://www.onvif.org/ver10/schema":PTZPresetTourSupported.
    tt__PTZPresetTourSupported*          SupportedPresetTour            0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":PTZNodeExtension2.
    tt__PTZNodeExtension2*               Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZNodeExtension2 is a complexType.
///
class tt__PTZNodeExtension2 : public xsd__anyType
{ public:
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourSupported is a complexType.
///
class tt__PTZPresetTourSupported : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicates number of preset tours that can be created. Required preset tour operations shall be available for this PTZ Node if one or more preset tour is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "MaximumNumberOfPresetTours" of type xs:int.
    int                                  MaximumNumberOfPresetTours     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates which preset tour operations are available for this PTZ Node.
/// </BLOCKQUOTE></PRE>
///
/// Vector of enum tt__PTZPresetTourOperation of length 0..unbounded.
    std::vector<enum tt__PTZPresetTourOperation> PTZPresetTourOperation         0;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":PTZPresetTourSupportedExtension.
    tt__PTZPresetTourSupportedExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourSupportedExtension is a complexType.
///
class tt__PTZPresetTourSupportedExtension : public xsd__anyType
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZConfigurationExtension is a complexType.
///
class tt__PTZConfigurationExtension : public xsd__anyType
{ public:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <PRE><BLOCKQUOTE>
///   Optional element to configure PT Control Direction related features.
/// </BLOCKQUOTE></PRE>
///
/// Element "PTControlDirection" of type "http://www.onvif.org/ver10/schema":PTControlDirection.
    tt__PTControlDirection*              PTControlDirection             0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":PTZConfigurationExtension2.
    tt__PTZConfigurationExtension2*      Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZConfigurationExtension2 is a complexType.
///
class tt__PTZConfigurationExtension2 : public xsd__anyType
{ public:
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
};

/// @brief "http://www.onvif.org/ver10/schema":PTControlDirection is a complexType.
///
class tt__PTControlDirection : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Optional element to configure related parameters for E-Flip.
/// </BLOCKQUOTE></PRE>
///
/// Element "EFlip" of type "http://www.onvif.org/ver10/schema":EFlip.
    tt__EFlip*                           EFlip                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional element to configure related parameters for reversing of PT Control Direction.
/// </BLOCKQUOTE></PRE>
///
/// Element "Reverse" of type "http://www.onvif.org/ver10/schema":Reverse.
    tt__Reverse*                         Reverse                        0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":PTControlDirectionExtension.
    tt__PTControlDirectionExtension*     Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":PTControlDirectionExtension is a complexType.
///
class tt__PTControlDirectionExtension : public xsd__anyType
{ public:
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":EFlip is a complexType.
///
class tt__EFlip : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Parameter to enable/disable E-Flip feature.
/// </BLOCKQUOTE></PRE>
///
/// Element "Mode" of type "http://www.onvif.org/ver10/schema":EFlipMode.
    enum tt__EFlipMode                   Mode                           1;	///< Required element.
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":Reverse is a complexType.
///
class tt__Reverse : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Parameter to enable/disable Reverse feature.
/// </BLOCKQUOTE></PRE>
///
/// Element "Mode" of type "http://www.onvif.org/ver10/schema":ReverseMode.
    enum tt__ReverseMode                 Mode                           1;	///< Required element.
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZConfigurationOptions is a complexType.
///
class tt__PTZConfigurationOptions : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   A list of supported coordinate systems including their range limitations.
/// </BLOCKQUOTE></PRE>
///
/// Element "Spaces" of type "http://www.onvif.org/ver10/schema":PTZSpaces.
    tt__PTZSpaces*                       Spaces                         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A timeout Range within which Timeouts are accepted by the PTZ Node.
/// </BLOCKQUOTE></PRE>
///
/// Element "PTZTimeout" of type "http://www.onvif.org/ver10/schema":DurationRange.
    tt__DurationRange*                   PTZTimeout                     1;	///< Required element.
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <PRE><BLOCKQUOTE>
///   Supported options for PT Direction Control.
/// </BLOCKQUOTE></PRE>
///
/// Element "PTControlDirection" of type "http://www.onvif.org/ver10/schema":PTControlDirectionOptions.
    tt__PTControlDirectionOptions*       PTControlDirection             0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":PTZConfigurationOptions2.
    tt__PTZConfigurationOptions2*        Extension                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The list of acceleration ramps supported by the device. The
///   smallest acceleration value corresponds to the minimal index, the
///   highest acceleration corresponds to the maximum index.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "PTZRamps" of type "http://www.onvif.org/ver10/schema":IntAttrList.
  @ tt__IntAttrList*                     PTZRamps                       0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZConfigurationOptions2 is a complexType.
///
class tt__PTZConfigurationOptions2 : public xsd__anyType
{ public:
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
};

/// @brief "http://www.onvif.org/ver10/schema":PTControlDirectionOptions is a complexType.
///
class tt__PTControlDirectionOptions : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Supported options for EFlip feature.
/// </BLOCKQUOTE></PRE>
///
/// Element "EFlip" of type "http://www.onvif.org/ver10/schema":EFlipOptions.
    tt__EFlipOptions*                    EFlip                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Supported options for Reverse feature.
/// </BLOCKQUOTE></PRE>
///
/// Element "Reverse" of type "http://www.onvif.org/ver10/schema":ReverseOptions.
    tt__ReverseOptions*                  Reverse                        0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":PTControlDirectionOptionsExtension.
    tt__PTControlDirectionOptionsExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":PTControlDirectionOptionsExtension is a complexType.
///
class tt__PTControlDirectionOptionsExtension : public xsd__anyType
{ public:
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
};

/// @brief "http://www.onvif.org/ver10/schema":EFlipOptions is a complexType.
///
class tt__EFlipOptions : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Options of EFlip mode parameter.
/// </BLOCKQUOTE></PRE>
///
/// Vector of enum tt__EFlipMode of length 0..unbounded.
    std::vector<enum tt__EFlipMode     > Mode                           0;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":EFlipOptionsExtension.
    tt__EFlipOptionsExtension*           Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":EFlipOptionsExtension is a complexType.
///
class tt__EFlipOptionsExtension : public xsd__anyType
{ public:
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
};

/// @brief "http://www.onvif.org/ver10/schema":ReverseOptions is a complexType.
///
class tt__ReverseOptions : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Options of Reverse mode parameter.
/// </BLOCKQUOTE></PRE>
///
/// Vector of enum tt__ReverseMode of length 0..unbounded.
    std::vector<enum tt__ReverseMode   > Mode                           0;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":ReverseOptionsExtension.
    tt__ReverseOptionsExtension*         Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":ReverseOptionsExtension is a complexType.
///
class tt__ReverseOptionsExtension : public xsd__anyType
{ public:
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
};

/// @brief "http://www.onvif.org/ver10/schema":PanTiltLimits is a complexType.
///
class tt__PanTiltLimits : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   A range of pan tilt limits.
/// </BLOCKQUOTE></PRE>
///
/// Element "Range" of type "http://www.onvif.org/ver10/schema":Space2DDescription.
    tt__Space2DDescription*              Range                          1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":ZoomLimits is a complexType.
///
class tt__ZoomLimits : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   A range of zoom limit
/// </BLOCKQUOTE></PRE>
///
/// Element "Range" of type "http://www.onvif.org/ver10/schema":Space1DDescription.
    tt__Space1DDescription*              Range                          1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZSpaces is a complexType.
///
class tt__PTZSpaces : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   The Generic Pan/Tilt Position space is provided by every PTZ node that supports absolute Pan/Tilt, since it does not relate to a specific physical range. Instead, the range should be defined as the full range of the PTZ unit normalized to the range -1 to 1 resulting in the following space description.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__Space2DDescription* of length 0..unbounded.
    std::vector<tt__Space2DDescription*> AbsolutePanTiltPositionSpace   0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   The Generic Zoom Position Space is provided by every PTZ node that supports absolute Zoom, since it does not relate to a specific physical range. Instead, the range should be defined as the full range of the Zoom normalized to the range 0 (wide) to 1 (tele). There is no assumption about how the generic zoom range is mapped to magnification, FOV or other physical zoom dimension.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__Space1DDescription* of length 0..unbounded.
    std::vector<tt__Space1DDescription*> AbsoluteZoomPositionSpace      0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   The Generic Pan/Tilt translation space is provided by every PTZ node that supports relative Pan/Tilt, since it does not relate to a specific physical range. Instead, the range should be defined as the full positive and negative translation range of the PTZ unit normalized to the range -1 to 1, where positive translation would mean clockwise rotation or movement in right/up direction resulting in the following space description.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__Space2DDescription* of length 0..unbounded.
    std::vector<tt__Space2DDescription*> RelativePanTiltTranslationSpace 0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   The Generic Zoom Translation Space is provided by every PTZ node that supports relative Zoom, since it does not relate to a specific physical range. Instead, the corresponding absolute range should be defined as the full positive and negative translation range of the Zoom normalized to the range -1 to1, where a positive translation maps to a movement in TELE direction. The translation is signed to indicate direction (negative is to wide, positive is to tele). There is no assumption about how the generic zoom range is mapped to magnification, FOV or other physical zoom dimension. This results in the following space description.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__Space1DDescription* of length 0..unbounded.
    std::vector<tt__Space1DDescription*> RelativeZoomTranslationSpace   0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   The generic Pan/Tilt velocity space shall be provided by every PTZ node, since it does not relate to a specific physical range. Instead, the range should be defined as a range of the PTZ units speed normalized to the range -1 to 1, where a positive velocity would map to clockwise rotation or movement in the right/up direction. A signed speed can be independently specified for the pan and tilt component resulting in the following space description.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__Space2DDescription* of length 0..unbounded.
    std::vector<tt__Space2DDescription*> ContinuousPanTiltVelocitySpace 0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   The generic zoom velocity space specifies a zoom factor velocity without knowing the underlying physical model. The range should be normalized from -1 to 1, where a positive velocity would map to TELE direction. A generic zoom velocity space description resembles the following.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__Space1DDescription* of length 0..unbounded.
    std::vector<tt__Space1DDescription*> ContinuousZoomVelocitySpace    0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   The speed space specifies the speed for a Pan/Tilt movement when moving to an absolute position or to a relative translation. In contrast to the velocity spaces, speed spaces do not contain any directional information. The speed of a combined Pan/Tilt movement is represented by a single non-negative scalar value.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__Space1DDescription* of length 0..unbounded.
    std::vector<tt__Space1DDescription*> PanTiltSpeedSpace              0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   The speed space specifies the speed for a Zoom movement when moving to an absolute position or to a relative translation. In contrast to the velocity spaces, speed spaces do not contain any directional information.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__Space1DDescription* of length 0..unbounded.
    std::vector<tt__Space1DDescription*> ZoomSpeedSpace                 0;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":PTZSpacesExtension.
    tt__PTZSpacesExtension*              Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZSpacesExtension is a complexType.
///
class tt__PTZSpacesExtension : public xsd__anyType
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
};

/// @brief "http://www.onvif.org/ver10/schema":Space2DDescription is a complexType.
///
class tt__Space2DDescription : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   A URI of coordinate systems.
/// </BLOCKQUOTE></PRE>
///
/// Element "URI" of type xs:anyURI.
    xsd__anyURI                          URI                            1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A range of x-axis.
/// </BLOCKQUOTE></PRE>
///
/// Element "XRange" of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      XRange                         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A range of y-axis.
/// </BLOCKQUOTE></PRE>
///
/// Element "YRange" of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      YRange                         1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":Space1DDescription is a complexType.
///
class tt__Space1DDescription : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   A URI of coordinate systems.
/// </BLOCKQUOTE></PRE>
///
/// Element "URI" of type xs:anyURI.
    xsd__anyURI                          URI                            1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A range of x-axis.
/// </BLOCKQUOTE></PRE>
///
/// Element "XRange" of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      XRange                         1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZSpeed is a complexType.
///
class tt__PTZSpeed : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Pan and tilt speed. The x component corresponds to pan and the y component to tilt. If omitted in a request, the current (if any) PanTilt movement should not be affected.
/// </BLOCKQUOTE></PRE>
///
/// Element "PanTilt" of type "http://www.onvif.org/ver10/schema":Vector2D.
    tt__Vector2D*                        PanTilt                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   A zoom speed. If omitted in a request, the current (if any) Zoom movement should not be affected.
/// </BLOCKQUOTE></PRE>
///
/// Element "Zoom" of type "http://www.onvif.org/ver10/schema":Vector1D.
    tt__Vector1D*                        Zoom                           0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPreset is a complexType.
///
class tt__PTZPreset : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   A list of preset position name.
/// </BLOCKQUOTE></PRE>
///
/// Element "Name" of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name*                            Name                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   A list of preset position.
/// </BLOCKQUOTE></PRE>
///
/// Element "PTZPosition" of type "http://www.onvif.org/ver10/schema":PTZVector.
    tt__PTZVector*                       PTZPosition                    0;	///< Optional element.

/// </BLOCKQUOTE></PRE>
///
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken*                  token                          0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":PresetTour is a complexType.
///
class tt__PresetTour : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Readable name of the preset tour.
/// </BLOCKQUOTE></PRE>
///
/// Element "Name" of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name*                            Name                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Read only parameters to indicate the status of the preset tour.
/// </BLOCKQUOTE></PRE>
///
/// Element "Status" of type "http://www.onvif.org/ver10/schema":PTZPresetTourStatus.
    tt__PTZPresetTourStatus*             Status                         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Auto Start flag of the preset tour. True allows the preset tour to be activated always.
/// </BLOCKQUOTE></PRE>
///
/// Element "AutoStart" of type xs:boolean.
    bool                                 AutoStart                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Parameters to specify the detail behavior of the preset tour.
/// </BLOCKQUOTE></PRE>
///
/// Element "StartingCondition" of type "http://www.onvif.org/ver10/schema":PTZPresetTourStartingCondition.
    tt__PTZPresetTourStartingCondition*  StartingCondition              1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A list of detail of touring spots including preset positions.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__PTZPresetTourSpot* of length 0..unbounded.
    std::vector<tt__PTZPresetTourSpot* > TourSpot                       0;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":PTZPresetTourExtension.
    tt__PTZPresetTourExtension*          Extension                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Unique identifier of this preset tour.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken*                  token                          0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourExtension is a complexType.
///
class tt__PTZPresetTourExtension : public xsd__anyType
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourSpot is a complexType.
///
class tt__PTZPresetTourSpot : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Detail definition of preset position of the tour spot.
/// </BLOCKQUOTE></PRE>
///
/// Element "PresetDetail" of type "http://www.onvif.org/ver10/schema":PTZPresetTourPresetDetail.
    tt__PTZPresetTourPresetDetail*       PresetDetail                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional parameter to specify Pan/Tilt and Zoom speed on moving toward this tour spot.
/// </BLOCKQUOTE></PRE>
///
/// Element "Speed" of type "http://www.onvif.org/ver10/schema":PTZSpeed.
    tt__PTZSpeed*                        Speed                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional parameter to specify time duration of staying on this tour sport.
/// </BLOCKQUOTE></PRE>
///
/// Element "StayTime" of type xs:duration.
    xsd__duration*                       StayTime                       0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":PTZPresetTourSpotExtension.
    tt__PTZPresetTourSpotExtension*      Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourSpotExtension is a complexType.
///
class tt__PTZPresetTourSpotExtension : public xsd__anyType
{ public:
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourPresetDetail is a complexType.
///
class tt__PTZPresetTourPresetDetail : public xsd__anyType
{ public:
//  BEGIN CHOICE <xs:choice>
  $ int                                  __union_PTZPresetTourPresetDetail;	///< Union _tt__union_PTZPresetTourPresetDetail selector: set to SOAP_UNION__tt__union_PTZPresetTourPresetDetail_<fieldname>
    union _tt__union_PTZPresetTourPresetDetail
    {
/// <PRE><BLOCKQUOTE>
///   Option to specify the preset position with Preset Token defined in advance.
/// </BLOCKQUOTE></PRE>
///
/// Element "PresetToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken*                  PresetToken                   ;	///< Choice of element (one of multiple choices).
/// <PRE><BLOCKQUOTE>
///   Option to specify the preset position with the home position of this PTZ Node. "False" to this parameter shall be treated as an invalid argument.
/// </BLOCKQUOTE></PRE>
///
/// Element "Home" of type xs:boolean.
    bool                                 Home                          ;	///< Choice of element (one of multiple choices).
/// <PRE><BLOCKQUOTE>
///   Option to specify the preset position with vector of PTZ node directly.
/// </BLOCKQUOTE></PRE>
///
/// Element "PTZPosition" of type "http://www.onvif.org/ver10/schema":PTZVector.
    tt__PTZVector*                       PTZPosition                   ;	///< Choice of element (one of multiple choices).
/// Element "TypeExtension" of type "http://www.onvif.org/ver10/schema":PTZPresetTourTypeExtension.
    tt__PTZPresetTourTypeExtension*      TypeExtension                 ;	///< Choice of element (one of multiple choices).
    }                                    union_PTZPresetTourPresetDetail;
//  END OF CHOICE
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourTypeExtension is a complexType.
///
class tt__PTZPresetTourTypeExtension : public xsd__anyType
{ public:
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourStatus is a complexType.
///
class tt__PTZPresetTourStatus : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicates state of this preset tour by Idle/Touring/Paused.
/// </BLOCKQUOTE></PRE>
///
/// Element "State" of type "http://www.onvif.org/ver10/schema":PTZPresetTourState.
    enum tt__PTZPresetTourState          State                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates a tour spot currently staying.
/// </BLOCKQUOTE></PRE>
///
/// Element "CurrentTourSpot" of type "http://www.onvif.org/ver10/schema":PTZPresetTourSpot.
    tt__PTZPresetTourSpot*               CurrentTourSpot                0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":PTZPresetTourStatusExtension.
    tt__PTZPresetTourStatusExtension*    Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourStatusExtension is a complexType.
///
class tt__PTZPresetTourStatusExtension : public xsd__anyType
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourStartingCondition is a complexType.
///
class tt__PTZPresetTourStartingCondition : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Optional parameter to specify how many times the preset tour is recurred.
/// </BLOCKQUOTE></PRE>
///
/// Element "RecurringTime" of type xs:int.
    int*                                 RecurringTime                  0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional parameter to specify how long time duration the preset tour is recurred.
/// </BLOCKQUOTE></PRE>
///
/// Element "RecurringDuration" of type xs:duration.
    xsd__duration*                       RecurringDuration              0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional parameter to choose which direction the preset tour goes. Forward shall be chosen in case it is omitted.
/// </BLOCKQUOTE></PRE>
///
/// Element "Direction" of type "http://www.onvif.org/ver10/schema":PTZPresetTourDirection.
    enum tt__PTZPresetTourDirection*     Direction                      0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":PTZPresetTourStartingConditionExtension.
    tt__PTZPresetTourStartingConditionExtension*  Extension                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Execute presets in random order. If set to true and Direction is also present, Direction will be ignored and presets of the Tour will be recalled randomly.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "RandomPresetOrder" of type xs:boolean.
  @ bool*                                RandomPresetOrder              0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourStartingConditionExtension is a complexType.
///
class tt__PTZPresetTourStartingConditionExtension : public xsd__anyType
{ public:
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourOptions is a complexType.
///
class tt__PTZPresetTourOptions : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not the AutoStart is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "AutoStart" of type xs:boolean.
    bool                                 AutoStart                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Supported options for Preset Tour Starting Condition.
/// </BLOCKQUOTE></PRE>
///
/// Element "StartingCondition" of type "http://www.onvif.org/ver10/schema":PTZPresetTourStartingConditionOptions.
    tt__PTZPresetTourStartingConditionOptions*  StartingCondition              1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Supported options for Preset Tour Spot.
/// </BLOCKQUOTE></PRE>
///
/// Element "TourSpot" of type "http://www.onvif.org/ver10/schema":PTZPresetTourSpotOptions.
    tt__PTZPresetTourSpotOptions*        TourSpot                       1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourSpotOptions is a complexType.
///
class tt__PTZPresetTourSpotOptions : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Supported options for detail definition of preset position of the tour spot.
/// </BLOCKQUOTE></PRE>
///
/// Element "PresetDetail" of type "http://www.onvif.org/ver10/schema":PTZPresetTourPresetDetailOptions.
    tt__PTZPresetTourPresetDetailOptions*  PresetDetail                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Supported range of stay time for a tour spot.
/// </BLOCKQUOTE></PRE>
///
/// Element "StayTime" of type "http://www.onvif.org/ver10/schema":DurationRange.
    tt__DurationRange*                   StayTime                       1;	///< Required element.
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourPresetDetailOptions is a complexType.
///
class tt__PTZPresetTourPresetDetailOptions : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   A list of available Preset Tokens for tour spots.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__ReferenceToken of length 0..unbounded.
    std::vector<tt__ReferenceToken     > PresetToken                    0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   An option to indicate Home postion for tour spots.
/// </BLOCKQUOTE></PRE>
///
/// Element "Home" of type xs:boolean.
    bool*                                Home                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Supported range of Pan and Tilt for tour spots.
/// </BLOCKQUOTE></PRE>
///
/// Element "PanTiltPositionSpace" of type "http://www.onvif.org/ver10/schema":Space2DDescription.
    tt__Space2DDescription*              PanTiltPositionSpace           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Supported range of Zoom for a tour spot.
/// </BLOCKQUOTE></PRE>
///
/// Element "ZoomPositionSpace" of type "http://www.onvif.org/ver10/schema":Space1DDescription.
    tt__Space1DDescription*              ZoomPositionSpace              0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":PTZPresetTourPresetDetailOptionsExtension.
    tt__PTZPresetTourPresetDetailOptionsExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourPresetDetailOptionsExtension is a complexType.
///
class tt__PTZPresetTourPresetDetailOptionsExtension : public xsd__anyType
{ public:
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourStartingConditionOptions is a complexType.
///
class tt__PTZPresetTourStartingConditionOptions : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Supported range of Recurring Time.
/// </BLOCKQUOTE></PRE>
///
/// Element "RecurringTime" of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        RecurringTime                  0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Supported range of Recurring Duration.
/// </BLOCKQUOTE></PRE>
///
/// Element "RecurringDuration" of type "http://www.onvif.org/ver10/schema":DurationRange.
    tt__DurationRange*                   RecurringDuration              0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Supported options for Direction of Preset Tour.
/// </BLOCKQUOTE></PRE>
///
/// Vector of enum tt__PTZPresetTourDirection of length 0..unbounded.
    std::vector<enum tt__PTZPresetTourDirection> Direction                      0;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":PTZPresetTourStartingConditionOptionsExtension.
    tt__PTZPresetTourStartingConditionOptionsExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourStartingConditionOptionsExtension is a complexType.
///
class tt__PTZPresetTourStartingConditionOptionsExtension : public xsd__anyType
{ public:
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
};

/// @brief "http://www.onvif.org/ver10/schema":ImagingStatus is a complexType.
///
class tt__ImagingStatus : public xsd__anyType
{ public:
/// Element "FocusStatus" of type "http://www.onvif.org/ver10/schema":FocusStatus.
    tt__FocusStatus*                     FocusStatus                    1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":FocusStatus is a complexType.
///
class tt__FocusStatus : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Status of focus position.
/// </BLOCKQUOTE></PRE>
///
/// Element "Position" of type xs:float.
    float                                Position                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Status of focus MoveStatus.
/// </BLOCKQUOTE></PRE>
///
/// Element "MoveStatus" of type "http://www.onvif.org/ver10/schema":MoveStatus.
    enum tt__MoveStatus                  MoveStatus                     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Error status of focus.
/// </BLOCKQUOTE></PRE>
///
/// Element "Error" of type xs:string.
    std::string                          Error                          1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":FocusConfiguration is a complexType.
///
class tt__FocusConfiguration : public xsd__anyType
{ public:
/// Element "AutoFocusMode" of type "http://www.onvif.org/ver10/schema":AutoFocusMode.
    enum tt__AutoFocusMode               AutoFocusMode                  1;	///< Required element.
/// Element "DefaultSpeed" of type xs:float.
    float                                DefaultSpeed                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Parameter to set autofocus near limit (unit: meter).
/// </BLOCKQUOTE></PRE>
///
/// Element "NearLimit" of type xs:float.
    float                                NearLimit                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Parameter to set autofocus far limit (unit: meter).
///   If set to 0.0, infinity will be used.
/// </BLOCKQUOTE></PRE>
///
/// Element "FarLimit" of type xs:float.
    float                                FarLimit                       1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":ImagingSettings is a complexType.
///
class tt__ImagingSettings : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Enabled/disabled BLC mode (on/off).
/// </BLOCKQUOTE></PRE>
///
/// Element "BacklightCompensation" of type "http://www.onvif.org/ver10/schema":BacklightCompensation.
    tt__BacklightCompensation*           BacklightCompensation          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Image brightness (unit unspecified).
/// </BLOCKQUOTE></PRE>
///
/// Element "Brightness" of type xs:float.
    float*                               Brightness                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Color saturation of the image (unit unspecified).
/// </BLOCKQUOTE></PRE>
///
/// Element "ColorSaturation" of type xs:float.
    float*                               ColorSaturation                0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Contrast of the image (unit unspecified).
/// </BLOCKQUOTE></PRE>
///
/// Element "Contrast" of type xs:float.
    float*                               Contrast                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Exposure mode of the device.
/// </BLOCKQUOTE></PRE>
///
/// Element "Exposure" of type "http://www.onvif.org/ver10/schema":Exposure.
    tt__Exposure*                        Exposure                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Focus configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "Focus" of type "http://www.onvif.org/ver10/schema":FocusConfiguration.
    tt__FocusConfiguration*              Focus                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Infrared Cutoff Filter settings.
/// </BLOCKQUOTE></PRE>
///
/// Element "IrCutFilter" of type "http://www.onvif.org/ver10/schema":IrCutFilterMode.
    enum tt__IrCutFilterMode*            IrCutFilter                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Sharpness of the Video image.
/// </BLOCKQUOTE></PRE>
///
/// Element "Sharpness" of type xs:float.
    float*                               Sharpness                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   WDR settings.
/// </BLOCKQUOTE></PRE>
///
/// Element "WideDynamicRange" of type "http://www.onvif.org/ver10/schema":WideDynamicRange.
    tt__WideDynamicRange*                WideDynamicRange               0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   White balance settings.
/// </BLOCKQUOTE></PRE>
///
/// Element "WhiteBalance" of type "http://www.onvif.org/ver10/schema":WhiteBalance.
    tt__WhiteBalance*                    WhiteBalance                   0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":ImagingSettingsExtension.
    tt__ImagingSettingsExtension*        Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":ImagingSettingsExtension is a complexType.
///
class tt__ImagingSettingsExtension : public xsd__anyType
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
};

/// @brief "http://www.onvif.org/ver10/schema":Exposure is a complexType.
///
class tt__Exposure : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Exposure Mode
///   <ul>
///   <li>Auto Enabled the exposure algorithm on the NVT.</li>
///   <li>Manual Disabled exposure algorithm on the NVT.</li>
///   </ul>
/// </BLOCKQUOTE></PRE>
///
/// Element "Mode" of type "http://www.onvif.org/ver10/schema":ExposureMode.
    enum tt__ExposureMode                Mode                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The exposure priority mode (low noise/framerate).
/// </BLOCKQUOTE></PRE>
///
/// Element "Priority" of type "http://www.onvif.org/ver10/schema":ExposurePriority.
    enum tt__ExposurePriority            Priority                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Rectangular exposure mask.
/// </BLOCKQUOTE></PRE>
///
/// Element "Window" of type "http://www.onvif.org/ver10/schema":Rectangle.
    tt__Rectangle*                       Window                         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Minimum value of exposure time range allowed to be used by the algorithm.
/// </BLOCKQUOTE></PRE>
///
/// Element "MinExposureTime" of type xs:float.
    float                                MinExposureTime                1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Maximum value of exposure time range allowed to be used by the algorithm.
/// </BLOCKQUOTE></PRE>
///
/// Element "MaxExposureTime" of type xs:float.
    float                                MaxExposureTime                1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Minimum value of the sensor gain range that is allowed to be used by the algorithm.
/// </BLOCKQUOTE></PRE>
///
/// Element "MinGain" of type xs:float.
    float                                MinGain                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Maximum value of the sensor gain range that is allowed to be used by the algorithm.
/// </BLOCKQUOTE></PRE>
///
/// Element "MaxGain" of type xs:float.
    float                                MaxGain                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Minimum value of the iris range allowed to be used by the algorithm.
/// </BLOCKQUOTE></PRE>
///
/// Element "MinIris" of type xs:float.
    float                                MinIris                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Maximum value of the iris range allowed to be used by the algorithm.
/// </BLOCKQUOTE></PRE>
///
/// Element "MaxIris" of type xs:float.
    float                                MaxIris                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The fixed exposure time used by the image sensor (s).
/// </BLOCKQUOTE></PRE>
///
/// Element "ExposureTime" of type xs:float.
    float                                ExposureTime                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The fixed gain used by the image sensor (dB).
/// </BLOCKQUOTE></PRE>
///
/// Element "Gain" of type xs:float.
    float                                Gain                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The fixed attenuation of input light affected by the iris (dB). 0dB maps to a fully opened iris.
/// </BLOCKQUOTE></PRE>
///
/// Element "Iris" of type xs:float.
    float                                Iris                           1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":WideDynamicRange is a complexType.
///
class tt__WideDynamicRange : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   White dynamic range (on/off)
/// </BLOCKQUOTE></PRE>
///
/// Element "Mode" of type "http://www.onvif.org/ver10/schema":WideDynamicMode.
    enum tt__WideDynamicMode             Mode                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional level parameter (unitless)
/// </BLOCKQUOTE></PRE>
///
/// Element "Level" of type xs:float.
    float                                Level                          1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":BacklightCompensation is a complexType.
///
class tt__BacklightCompensation : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Backlight compensation mode (on/off).
/// </BLOCKQUOTE></PRE>
///
/// Element "Mode" of type "http://www.onvif.org/ver10/schema":BacklightCompensationMode.
    enum tt__BacklightCompensationMode   Mode                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional level parameter (unit unspecified).
/// </BLOCKQUOTE></PRE>
///
/// Element "Level" of type xs:float.
    float                                Level                          1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":ImagingOptions is a complexType.
///
class tt__ImagingOptions : public xsd__anyType
{ public:
/// Element "BacklightCompensation" of type "http://www.onvif.org/ver10/schema":BacklightCompensationOptions.
    tt__BacklightCompensationOptions*    BacklightCompensation          1;	///< Required element.
/// Element "Brightness" of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      Brightness                     1;	///< Required element.
/// Element "ColorSaturation" of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      ColorSaturation                1;	///< Required element.
/// Element "Contrast" of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      Contrast                       1;	///< Required element.
/// Element "Exposure" of type "http://www.onvif.org/ver10/schema":ExposureOptions.
    tt__ExposureOptions*                 Exposure                       1;	///< Required element.
/// Element "Focus" of type "http://www.onvif.org/ver10/schema":FocusOptions.
    tt__FocusOptions*                    Focus                          1;	///< Required element.
/// Vector of enum tt__IrCutFilterMode of length 1..unbounded.
    std::vector<enum tt__IrCutFilterMode> IrCutFilterModes               1;	///< Multiple elements.
/// Element "Sharpness" of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      Sharpness                      1;	///< Required element.
/// Element "WideDynamicRange" of type "http://www.onvif.org/ver10/schema":WideDynamicRangeOptions.
    tt__WideDynamicRangeOptions*         WideDynamicRange               1;	///< Required element.
/// Element "WhiteBalance" of type "http://www.onvif.org/ver10/schema":WhiteBalanceOptions.
    tt__WhiteBalanceOptions*             WhiteBalance                   1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":WideDynamicRangeOptions is a complexType.
///
class tt__WideDynamicRangeOptions : public xsd__anyType
{ public:
/// Vector of enum tt__WideDynamicMode of length 1..unbounded.
    std::vector<enum tt__WideDynamicMode> Mode                           1;	///< Multiple elements.
/// Element "Level" of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      Level                          1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":BacklightCompensationOptions is a complexType.
///
class tt__BacklightCompensationOptions : public xsd__anyType
{ public:
/// Vector of enum tt__WideDynamicMode of length 1..unbounded.
    std::vector<enum tt__WideDynamicMode> Mode                           1;	///< Multiple elements.
/// Element "Level" of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      Level                          1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":FocusOptions is a complexType.
///
class tt__FocusOptions : public xsd__anyType
{ public:
/// Vector of enum tt__AutoFocusMode of length 0..unbounded.
    std::vector<enum tt__AutoFocusMode > AutoFocusModes                 0;	///< Multiple elements.
/// Element "DefaultSpeed" of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      DefaultSpeed                   1;	///< Required element.
/// Element "NearLimit" of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      NearLimit                      1;	///< Required element.
/// Element "FarLimit" of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      FarLimit                       1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":ExposureOptions is a complexType.
///
class tt__ExposureOptions : public xsd__anyType
{ public:
/// Vector of enum tt__ExposureMode of length 1..unbounded.
    std::vector<enum tt__ExposureMode  > Mode                           1;	///< Multiple elements.
/// Vector of enum tt__ExposurePriority of length 1..unbounded.
    std::vector<enum tt__ExposurePriority> Priority                       1;	///< Multiple elements.
/// Element "MinExposureTime" of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      MinExposureTime                1;	///< Required element.
/// Element "MaxExposureTime" of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      MaxExposureTime                1;	///< Required element.
/// Element "MinGain" of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      MinGain                        1;	///< Required element.
/// Element "MaxGain" of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      MaxGain                        1;	///< Required element.
/// Element "MinIris" of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      MinIris                        1;	///< Required element.
/// Element "MaxIris" of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      MaxIris                        1;	///< Required element.
/// Element "ExposureTime" of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      ExposureTime                   1;	///< Required element.
/// Element "Gain" of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      Gain                           1;	///< Required element.
/// Element "Iris" of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      Iris                           1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":WhiteBalanceOptions is a complexType.
///
class tt__WhiteBalanceOptions : public xsd__anyType
{ public:
/// Vector of enum tt__WhiteBalanceMode of length 1..unbounded.
    std::vector<enum tt__WhiteBalanceMode> Mode                           1;	///< Multiple elements.
/// Element "YrGain" of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      YrGain                         1;	///< Required element.
/// Element "YbGain" of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      YbGain                         1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":FocusMove is a complexType.
///
class tt__FocusMove : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Parameters for the absolute focus control.
/// </BLOCKQUOTE></PRE>
///
/// Element "Absolute" of type "http://www.onvif.org/ver10/schema":AbsoluteFocus.
    tt__AbsoluteFocus*                   Absolute                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Parameters for the relative focus control.
/// </BLOCKQUOTE></PRE>
///
/// Element "Relative" of type "http://www.onvif.org/ver10/schema":RelativeFocus.
    tt__RelativeFocus*                   Relative                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Parameter for the continuous focus control.
/// </BLOCKQUOTE></PRE>
///
/// Element "Continuous" of type "http://www.onvif.org/ver10/schema":ContinuousFocus.
    tt__ContinuousFocus*                 Continuous                     0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":AbsoluteFocus is a complexType.
///
class tt__AbsoluteFocus : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Position parameter for the absolute focus control.
/// </BLOCKQUOTE></PRE>
///
/// Element "Position" of type xs:float.
    float                                Position                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Speed parameter for the absolute focus control.
/// </BLOCKQUOTE></PRE>
///
/// Element "Speed" of type xs:float.
    float*                               Speed                          0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":RelativeFocus is a complexType.
///
class tt__RelativeFocus : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Distance parameter for the relative focus control.
/// </BLOCKQUOTE></PRE>
///
/// Element "Distance" of type xs:float.
    float                                Distance                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Speed parameter for the relative focus control.
/// </BLOCKQUOTE></PRE>
///
/// Element "Speed" of type xs:float.
    float*                               Speed                          0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":ContinuousFocus is a complexType.
///
class tt__ContinuousFocus : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Speed parameter for the Continuous focus control.
/// </BLOCKQUOTE></PRE>
///
/// Element "Speed" of type xs:float.
    float                                Speed                          1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":MoveOptions is a complexType.
///
class tt__MoveOptions : public xsd__anyType
{ public:
/// Element "Absolute" of type "http://www.onvif.org/ver10/schema":AbsoluteFocusOptions.
    tt__AbsoluteFocusOptions*            Absolute                       0;	///< Optional element.
/// Element "Relative" of type "http://www.onvif.org/ver10/schema":RelativeFocusOptions.
    tt__RelativeFocusOptions*            Relative                       0;	///< Optional element.
/// Element "Continuous" of type "http://www.onvif.org/ver10/schema":ContinuousFocusOptions.
    tt__ContinuousFocusOptions*          Continuous                     0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":AbsoluteFocusOptions is a complexType.
///
class tt__AbsoluteFocusOptions : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Valid ranges of the position.
/// </BLOCKQUOTE></PRE>
///
/// Element "Position" of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      Position                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Valid ranges of the speed.
/// </BLOCKQUOTE></PRE>
///
/// Element "Speed" of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      Speed                          0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":RelativeFocusOptions is a complexType.
///
class tt__RelativeFocusOptions : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Valid ranges of the distance.
/// </BLOCKQUOTE></PRE>
///
/// Element "Distance" of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      Distance                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Valid ranges of the speed.
/// </BLOCKQUOTE></PRE>
///
/// Element "Speed" of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      Speed                          1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":ContinuousFocusOptions is a complexType.
///
class tt__ContinuousFocusOptions : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Valid ranges of the speed.
/// </BLOCKQUOTE></PRE>
///
/// Element "Speed" of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      Speed                          1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":WhiteBalance is a complexType.
///
class tt__WhiteBalance : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Auto whitebalancing mode (auto/manual).
/// </BLOCKQUOTE></PRE>
///
/// Element "Mode" of type "http://www.onvif.org/ver10/schema":WhiteBalanceMode.
    enum tt__WhiteBalanceMode            Mode                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Rgain (unitless).
/// </BLOCKQUOTE></PRE>
///
/// Element "CrGain" of type xs:float.
    float                                CrGain                         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Bgain (unitless).
/// </BLOCKQUOTE></PRE>
///
/// Element "CbGain" of type xs:float.
    float                                CbGain                         1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":ImagingStatus20 is a complexType.
///
class tt__ImagingStatus20 : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Status of focus.
/// </BLOCKQUOTE></PRE>
///
/// Element "FocusStatus20" of type "http://www.onvif.org/ver10/schema":FocusStatus20.
    tt__FocusStatus20*                   FocusStatus20                  0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":ImagingStatus20Extension.
    tt__ImagingStatus20Extension*        Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":ImagingStatus20Extension is a complexType.
///
class tt__ImagingStatus20Extension : public xsd__anyType
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
};

/// @brief "http://www.onvif.org/ver10/schema":FocusStatus20 is a complexType.
///
class tt__FocusStatus20 : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Status of focus position.
/// </BLOCKQUOTE></PRE>
///
/// Element "Position" of type xs:float.
    float                                Position                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Status of focus MoveStatus.
/// </BLOCKQUOTE></PRE>
///
/// Element "MoveStatus" of type "http://www.onvif.org/ver10/schema":MoveStatus.
    enum tt__MoveStatus                  MoveStatus                     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Error status of focus.
/// </BLOCKQUOTE></PRE>
///
/// Element "Error" of type xs:string.
    std::string*                         Error                          0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":FocusStatus20Extension.
    tt__FocusStatus20Extension*          Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":FocusStatus20Extension is a complexType.
///
class tt__FocusStatus20Extension : public xsd__anyType
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
};

/// @brief "http://www.onvif.org/ver10/schema":ImagingSettings20 is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Type describing the ImagingSettings of a VideoSource. The supported options and ranges can be obtained via the GetOptions command.
/// </BLOCKQUOTE></PRE>
///
class tt__ImagingSettings20 : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Enabled/disabled BLC mode (on/off).
/// </BLOCKQUOTE></PRE>
///
/// Element "BacklightCompensation" of type "http://www.onvif.org/ver10/schema":BacklightCompensation20.
    tt__BacklightCompensation20*         BacklightCompensation          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Image brightness (unit unspecified).
/// </BLOCKQUOTE></PRE>
///
/// Element "Brightness" of type xs:float.
    float*                               Brightness                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Color saturation of the image (unit unspecified).
/// </BLOCKQUOTE></PRE>
///
/// Element "ColorSaturation" of type xs:float.
    float*                               ColorSaturation                0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Contrast of the image (unit unspecified).
/// </BLOCKQUOTE></PRE>
///
/// Element "Contrast" of type xs:float.
    float*                               Contrast                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Exposure mode of the device.
/// </BLOCKQUOTE></PRE>
///
/// Element "Exposure" of type "http://www.onvif.org/ver10/schema":Exposure20.
    tt__Exposure20*                      Exposure                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Focus configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "Focus" of type "http://www.onvif.org/ver10/schema":FocusConfiguration20.
    tt__FocusConfiguration20*            Focus                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Infrared Cutoff Filter settings.
/// </BLOCKQUOTE></PRE>
///
/// Element "IrCutFilter" of type "http://www.onvif.org/ver10/schema":IrCutFilterMode.
    enum tt__IrCutFilterMode*            IrCutFilter                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Sharpness of the Video image.
/// </BLOCKQUOTE></PRE>
///
/// Element "Sharpness" of type xs:float.
    float*                               Sharpness                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   WDR settings.
/// </BLOCKQUOTE></PRE>
///
/// Element "WideDynamicRange" of type "http://www.onvif.org/ver10/schema":WideDynamicRange20.
    tt__WideDynamicRange20*              WideDynamicRange               0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   White balance settings.
/// </BLOCKQUOTE></PRE>
///
/// Element "WhiteBalance" of type "http://www.onvif.org/ver10/schema":WhiteBalance20.
    tt__WhiteBalance20*                  WhiteBalance                   0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":ImagingSettingsExtension20.
    tt__ImagingSettingsExtension20*      Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":ImagingSettingsExtension20 is a complexType.
///
class tt__ImagingSettingsExtension20 : public xsd__anyType
{ public:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <PRE><BLOCKQUOTE>
///   Optional element to configure Image Stabilization feature.
/// </BLOCKQUOTE></PRE>
///
/// Element "ImageStabilization" of type "http://www.onvif.org/ver10/schema":ImageStabilization.
    tt__ImageStabilization*              ImageStabilization             0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":ImagingSettingsExtension202.
    tt__ImagingSettingsExtension202*     Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":ImagingSettingsExtension202 is a complexType.
///
class tt__ImagingSettingsExtension202 : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   An optional parameter applied to only auto mode to adjust timing of toggling Ir cut filter.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__IrCutFilterAutoAdjustment* of length 0..unbounded.
    std::vector<tt__IrCutFilterAutoAdjustment*> IrCutFilterAutoAdjustment      0;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":ImagingSettingsExtension203.
    tt__ImagingSettingsExtension203*     Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":ImagingSettingsExtension203 is a complexType.
///
class tt__ImagingSettingsExtension203 : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Optional element to configure Image Contrast Compensation.
/// </BLOCKQUOTE></PRE>
///
/// Element "ToneCompensation" of type "http://www.onvif.org/ver10/schema":ToneCompensation.
    tt__ToneCompensation*                ToneCompensation               0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional element to configure Image Defogging.
/// </BLOCKQUOTE></PRE>
///
/// Element "Defogging" of type "http://www.onvif.org/ver10/schema":Defogging.
    tt__Defogging*                       Defogging                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional element to configure Image Noise Reduction.
/// </BLOCKQUOTE></PRE>
///
/// Element "NoiseReduction" of type "http://www.onvif.org/ver10/schema":NoiseReduction.
    tt__NoiseReduction*                  NoiseReduction                 0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":ImagingSettingsExtension204.
    tt__ImagingSettingsExtension204*     Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":ImagingSettingsExtension204 is a complexType.
///
class tt__ImagingSettingsExtension204 : public xsd__anyType
{ public:
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
};

/// @brief "http://www.onvif.org/ver10/schema":ImageStabilization is a complexType.
///
class tt__ImageStabilization : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Parameter to enable/disable Image Stabilization feature.
/// </BLOCKQUOTE></PRE>
///
/// Element "Mode" of type "http://www.onvif.org/ver10/schema":ImageStabilizationMode.
    enum tt__ImageStabilizationMode      Mode                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional level parameter (unit unspecified)
/// </BLOCKQUOTE></PRE>
///
/// Element "Level" of type xs:float.
    float*                               Level                          0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":ImageStabilizationExtension.
    tt__ImageStabilizationExtension*     Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":ImageStabilizationExtension is a complexType.
///
class tt__ImageStabilizationExtension : public xsd__anyType
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
};

/// @brief "http://www.onvif.org/ver10/schema":IrCutFilterAutoAdjustment is a complexType.
///
class tt__IrCutFilterAutoAdjustment : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Specifies which boundaries to automatically toggle Ir cut filter following parameters are applied to. Its options shall be chosen from tt:IrCutFilterAutoBoundaryType.
/// </BLOCKQUOTE></PRE>
///
/// Element "BoundaryType" of type xs:string.
    std::string                          BoundaryType                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Adjusts boundary exposure level for toggling Ir cut filter to on/off specified with unitless normalized value from +1.0 to -1.0. Zero is default and -1.0 is the darkest adjustment (Unitless).
/// </BLOCKQUOTE></PRE>
///
/// Element "BoundaryOffset" of type xs:float.
    float*                               BoundaryOffset                 0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Delay time of toggling Ir cut filter to on/off after crossing of the boundary exposure levels.
/// </BLOCKQUOTE></PRE>
///
/// Element "ResponseTime" of type xs:duration.
    xsd__duration*                       ResponseTime                   0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":IrCutFilterAutoAdjustmentExtension.
    tt__IrCutFilterAutoAdjustmentExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":IrCutFilterAutoAdjustmentExtension is a complexType.
///
class tt__IrCutFilterAutoAdjustmentExtension : public xsd__anyType
{ public:
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
};

/// @brief "http://www.onvif.org/ver10/schema":WideDynamicRange20 is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Type describing whether WDR mode is enabled or disabled (on/off).
/// </BLOCKQUOTE></PRE>
///
class tt__WideDynamicRange20 : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Wide dynamic range mode (on/off).
/// </BLOCKQUOTE></PRE>
///
/// Element "Mode" of type "http://www.onvif.org/ver10/schema":WideDynamicMode.
    enum tt__WideDynamicMode             Mode                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional level parameter (unit unspecified).
/// </BLOCKQUOTE></PRE>
///
/// Element "Level" of type xs:float.
    float*                               Level                          0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":BacklightCompensation20 is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Type describing whether BLC mode is enabled or disabled (on/off).
/// </BLOCKQUOTE></PRE>
///
class tt__BacklightCompensation20 : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Backlight compensation mode (on/off).
/// </BLOCKQUOTE></PRE>
///
/// Element "Mode" of type "http://www.onvif.org/ver10/schema":BacklightCompensationMode.
    enum tt__BacklightCompensationMode   Mode                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional level parameter (unit unspecified).
/// </BLOCKQUOTE></PRE>
///
/// Element "Level" of type xs:float.
    float*                               Level                          0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":Exposure20 is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Type describing the exposure settings.
/// </BLOCKQUOTE></PRE>
///
class tt__Exposure20 : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Exposure Mode
///   <ul>
///   <li>Auto Enabled the exposure algorithm on the device.</li>
///   <li>Manual Disabled exposure algorithm on the device.</li>
///   </ul>
/// </BLOCKQUOTE></PRE>
///
/// Element "Mode" of type "http://www.onvif.org/ver10/schema":ExposureMode.
    enum tt__ExposureMode                Mode                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The exposure priority mode (low noise/framerate).
/// </BLOCKQUOTE></PRE>
///
/// Element "Priority" of type "http://www.onvif.org/ver10/schema":ExposurePriority.
    enum tt__ExposurePriority*           Priority                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Rectangular exposure mask.
/// </BLOCKQUOTE></PRE>
///
/// Element "Window" of type "http://www.onvif.org/ver10/schema":Rectangle.
    tt__Rectangle*                       Window                         0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Minimum value of exposure time range allowed to be used by the algorithm.
/// </BLOCKQUOTE></PRE>
///
/// Element "MinExposureTime" of type xs:float.
    float*                               MinExposureTime                0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Maximum value of exposure time range allowed to be used by the algorithm.
/// </BLOCKQUOTE></PRE>
///
/// Element "MaxExposureTime" of type xs:float.
    float*                               MaxExposureTime                0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Minimum value of the sensor gain range that is allowed to be used by the algorithm.
/// </BLOCKQUOTE></PRE>
///
/// Element "MinGain" of type xs:float.
    float*                               MinGain                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Maximum value of the sensor gain range that is allowed to be used by the algorithm.
/// </BLOCKQUOTE></PRE>
///
/// Element "MaxGain" of type xs:float.
    float*                               MaxGain                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Minimum value of the iris range allowed to be used by the algorithm. 0dB maps to a fully opened iris and positive values map to higher attenuation.
/// </BLOCKQUOTE></PRE>
///
/// Element "MinIris" of type xs:float.
    float*                               MinIris                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Maximum value of the iris range allowed to be used by the algorithm. 0dB maps to a fully opened iris and positive values map to higher attenuation.
/// </BLOCKQUOTE></PRE>
///
/// Element "MaxIris" of type xs:float.
    float*                               MaxIris                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The fixed exposure time used by the image sensor (s).
/// </BLOCKQUOTE></PRE>
///
/// Element "ExposureTime" of type xs:float.
    float*                               ExposureTime                   0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The fixed gain used by the image sensor (dB).
/// </BLOCKQUOTE></PRE>
///
/// Element "Gain" of type xs:float.
    float*                               Gain                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The fixed attenuation of input light affected by the iris (dB). 0dB maps to a fully opened iris and positive values map to higher attenuation.
/// </BLOCKQUOTE></PRE>
///
/// Element "Iris" of type xs:float.
    float*                               Iris                           0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":ToneCompensation is a complexType.
///
class tt__ToneCompensation : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Parameter to enable/disable or automatic ToneCompensation feature. Its options shall be chosen from tt:ToneCompensationMode Type.
/// </BLOCKQUOTE></PRE>
///
/// Element "Mode" of type xs:string.
    std::string                          Mode                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional level parameter specified with unitless normalized value from 0.0 to +1.0.
/// </BLOCKQUOTE></PRE>
///
/// Element "Level" of type xs:float.
    float*                               Level                          0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":ToneCompensationExtension.
    tt__ToneCompensationExtension*       Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":ToneCompensationExtension is a complexType.
///
class tt__ToneCompensationExtension : public xsd__anyType
{ public:
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
};

/// @brief "http://www.onvif.org/ver10/schema":Defogging is a complexType.
///
class tt__Defogging : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Parameter to enable/disable or automatic Defogging feature. Its options shall be chosen from tt:DefoggingMode Type.
/// </BLOCKQUOTE></PRE>
///
/// Element "Mode" of type xs:string.
    std::string                          Mode                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional level parameter specified with unitless normalized value from 0.0 to +1.0.
/// </BLOCKQUOTE></PRE>
///
/// Element "Level" of type xs:float.
    float*                               Level                          0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":DefoggingExtension.
    tt__DefoggingExtension*              Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":DefoggingExtension is a complexType.
///
class tt__DefoggingExtension : public xsd__anyType
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
};

/// @brief "http://www.onvif.org/ver10/schema":NoiseReduction is a complexType.
///
class tt__NoiseReduction : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Level parameter specified with unitless normalized value from 0.0 to +1.0. Level=0 means no noise reduction or minimal noise reduction.
/// </BLOCKQUOTE></PRE>
///
/// Element "Level" of type xs:float.
    float                                Level                          1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":ImagingOptions20 is a complexType.
///
class tt__ImagingOptions20 : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Valid range of Backlight Compensation.
/// </BLOCKQUOTE></PRE>
///
/// Element "BacklightCompensation" of type "http://www.onvif.org/ver10/schema":BacklightCompensationOptions20.
    tt__BacklightCompensationOptions20*  BacklightCompensation          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Valid range of Brightness.
/// </BLOCKQUOTE></PRE>
///
/// Element "Brightness" of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      Brightness                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Valid range of Color Saturation.
/// </BLOCKQUOTE></PRE>
///
/// Element "ColorSaturation" of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      ColorSaturation                0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Valid range of Contrast.
/// </BLOCKQUOTE></PRE>
///
/// Element "Contrast" of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      Contrast                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Valid range of Exposure.
/// </BLOCKQUOTE></PRE>
///
/// Element "Exposure" of type "http://www.onvif.org/ver10/schema":ExposureOptions20.
    tt__ExposureOptions20*               Exposure                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Valid range of Focus.
/// </BLOCKQUOTE></PRE>
///
/// Element "Focus" of type "http://www.onvif.org/ver10/schema":FocusOptions20.
    tt__FocusOptions20*                  Focus                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Valid range of IrCutFilterModes.
/// </BLOCKQUOTE></PRE>
///
/// Vector of enum tt__IrCutFilterMode of length 0..unbounded.
    std::vector<enum tt__IrCutFilterMode> IrCutFilterModes               0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Valid range of Sharpness.
/// </BLOCKQUOTE></PRE>
///
/// Element "Sharpness" of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      Sharpness                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Valid range of WideDynamicRange.
/// </BLOCKQUOTE></PRE>
///
/// Element "WideDynamicRange" of type "http://www.onvif.org/ver10/schema":WideDynamicRangeOptions20.
    tt__WideDynamicRangeOptions20*       WideDynamicRange               0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Valid range of WhiteBalance.
/// </BLOCKQUOTE></PRE>
///
/// Element "WhiteBalance" of type "http://www.onvif.org/ver10/schema":WhiteBalanceOptions20.
    tt__WhiteBalanceOptions20*           WhiteBalance                   0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":ImagingOptions20Extension.
    tt__ImagingOptions20Extension*       Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":ImagingOptions20Extension is a complexType.
///
class tt__ImagingOptions20Extension : public xsd__anyType
{ public:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <PRE><BLOCKQUOTE>
///   Options of parameters for Image Stabilization feature.
/// </BLOCKQUOTE></PRE>
///
/// Element "ImageStabilization" of type "http://www.onvif.org/ver10/schema":ImageStabilizationOptions.
    tt__ImageStabilizationOptions*       ImageStabilization             0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":ImagingOptions20Extension2.
    tt__ImagingOptions20Extension2*      Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":ImagingOptions20Extension2 is a complexType.
///
class tt__ImagingOptions20Extension2 : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Options of parameters for adjustment of Ir cut filter auto mode.
/// </BLOCKQUOTE></PRE>
///
/// Element "IrCutFilterAutoAdjustment" of type "http://www.onvif.org/ver10/schema":IrCutFilterAutoAdjustmentOptions.
    tt__IrCutFilterAutoAdjustmentOptions*  IrCutFilterAutoAdjustment      0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":ImagingOptions20Extension3.
    tt__ImagingOptions20Extension3*      Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":ImagingOptions20Extension3 is a complexType.
///
class tt__ImagingOptions20Extension3 : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Options of parameters for Tone Compensation feature.
/// </BLOCKQUOTE></PRE>
///
/// Element "ToneCompensationOptions" of type "http://www.onvif.org/ver10/schema":ToneCompensationOptions.
    tt__ToneCompensationOptions*         ToneCompensationOptions        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Options of parameters for Defogging feature.
/// </BLOCKQUOTE></PRE>
///
/// Element "DefoggingOptions" of type "http://www.onvif.org/ver10/schema":DefoggingOptions.
    tt__DefoggingOptions*                DefoggingOptions               0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Options of parameter for Noise Reduction feature.
/// </BLOCKQUOTE></PRE>
///
/// Element "NoiseReductionOptions" of type "http://www.onvif.org/ver10/schema":NoiseReductionOptions.
    tt__NoiseReductionOptions*           NoiseReductionOptions          0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":ImagingOptions20Extension4.
    tt__ImagingOptions20Extension4*      Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":ImagingOptions20Extension4 is a complexType.
///
class tt__ImagingOptions20Extension4 : public xsd__anyType
{ public:
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
};

/// @brief "http://www.onvif.org/ver10/schema":ImageStabilizationOptions is a complexType.
///
class tt__ImageStabilizationOptions : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Supported options of Image Stabilization mode parameter.
/// </BLOCKQUOTE></PRE>
///
/// Vector of enum tt__ImageStabilizationMode of length 1..unbounded.
    std::vector<enum tt__ImageStabilizationMode> Mode                           1;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Valid range of the Image Stabilization.
/// </BLOCKQUOTE></PRE>
///
/// Element "Level" of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      Level                          0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":ImageStabilizationOptionsExtension.
    tt__ImageStabilizationOptionsExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":ImageStabilizationOptionsExtension is a complexType.
///
class tt__ImageStabilizationOptionsExtension : public xsd__anyType
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
};

/// @brief "http://www.onvif.org/ver10/schema":IrCutFilterAutoAdjustmentOptions is a complexType.
///
class tt__IrCutFilterAutoAdjustmentOptions : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Supported options of boundary types for adjustment of Ir cut filter auto mode. The opptions shall be chosen from tt:IrCutFilterAutoBoundaryType.
/// </BLOCKQUOTE></PRE>
///
/// Vector of std::string of length 1..unbounded.
    std::vector<std::string            > BoundaryType                   1;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not boundary offset for toggling Ir cut filter is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "BoundaryOffset" of type xs:boolean.
    bool*                                BoundaryOffset                 0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Supported range of delay time for toggling Ir cut filter.
/// </BLOCKQUOTE></PRE>
///
/// Element "ResponseTimeRange" of type "http://www.onvif.org/ver10/schema":DurationRange.
    tt__DurationRange*                   ResponseTimeRange              0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":IrCutFilterAutoAdjustmentOptionsExtension.
    tt__IrCutFilterAutoAdjustmentOptionsExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":IrCutFilterAutoAdjustmentOptionsExtension is a complexType.
///
class tt__IrCutFilterAutoAdjustmentOptionsExtension : public xsd__anyType
{ public:
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
};

/// @brief "http://www.onvif.org/ver10/schema":WideDynamicRangeOptions20 is a complexType.
///
class tt__WideDynamicRangeOptions20 : public xsd__anyType
{ public:
/// Vector of enum tt__WideDynamicMode of length 1..unbounded.
    std::vector<enum tt__WideDynamicMode> Mode                           1;	///< Multiple elements.
/// Element "Level" of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      Level                          0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":BacklightCompensationOptions20 is a complexType.
///
class tt__BacklightCompensationOptions20 : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   'ON' or 'OFF'
/// </BLOCKQUOTE></PRE>
///
/// Vector of enum tt__BacklightCompensationMode of length 1..unbounded.
    std::vector<enum tt__BacklightCompensationMode> Mode                           1;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Level range of BacklightCompensation.
/// </BLOCKQUOTE></PRE>
///
/// Element "Level" of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      Level                          0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":ExposureOptions20 is a complexType.
///
class tt__ExposureOptions20 : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Exposure Mode
///   <ul>
///   <li>Auto Enabled the exposure algorithm on the device.</li>
///   <li>Manual Disabled exposure algorithm on the device.</li>
///   </ul>
/// </BLOCKQUOTE></PRE>
///
/// Vector of enum tt__ExposureMode of length 1..unbounded.
    std::vector<enum tt__ExposureMode  > Mode                           1;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   The exposure priority mode (low noise/framerate).
/// </BLOCKQUOTE></PRE>
///
/// Vector of enum tt__ExposurePriority of length 0..unbounded.
    std::vector<enum tt__ExposurePriority> Priority                       0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Valid range of the Minimum ExposureTime.
/// </BLOCKQUOTE></PRE>
///
/// Element "MinExposureTime" of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      MinExposureTime                0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Valid range of the Maximum ExposureTime.
/// </BLOCKQUOTE></PRE>
///
/// Element "MaxExposureTime" of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      MaxExposureTime                0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Valid range of the Minimum Gain.
/// </BLOCKQUOTE></PRE>
///
/// Element "MinGain" of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      MinGain                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Valid range of the Maximum Gain.
/// </BLOCKQUOTE></PRE>
///
/// Element "MaxGain" of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      MaxGain                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Valid range of the Minimum Iris.
/// </BLOCKQUOTE></PRE>
///
/// Element "MinIris" of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      MinIris                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Valid range of the Maximum Iris.
/// </BLOCKQUOTE></PRE>
///
/// Element "MaxIris" of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      MaxIris                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Valid range of the ExposureTime.
/// </BLOCKQUOTE></PRE>
///
/// Element "ExposureTime" of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      ExposureTime                   0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Valid range of the Gain.
/// </BLOCKQUOTE></PRE>
///
/// Element "Gain" of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      Gain                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Valid range of the Iris.
/// </BLOCKQUOTE></PRE>
///
/// Element "Iris" of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      Iris                           0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":MoveOptions20 is a complexType.
///
class tt__MoveOptions20 : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Valid ranges for the absolute control.
/// </BLOCKQUOTE></PRE>
///
/// Element "Absolute" of type "http://www.onvif.org/ver10/schema":AbsoluteFocusOptions.
    tt__AbsoluteFocusOptions*            Absolute                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Valid ranges for the relative control.
/// </BLOCKQUOTE></PRE>
///
/// Element "Relative" of type "http://www.onvif.org/ver10/schema":RelativeFocusOptions20.
    tt__RelativeFocusOptions20*          Relative                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Valid ranges for the continuous control.
/// </BLOCKQUOTE></PRE>
///
/// Element "Continuous" of type "http://www.onvif.org/ver10/schema":ContinuousFocusOptions.
    tt__ContinuousFocusOptions*          Continuous                     0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":RelativeFocusOptions20 is a complexType.
///
class tt__RelativeFocusOptions20 : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Valid ranges of the distance.
/// </BLOCKQUOTE></PRE>
///
/// Element "Distance" of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      Distance                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Valid ranges of the speed.
/// </BLOCKQUOTE></PRE>
///
/// Element "Speed" of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      Speed                          0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":WhiteBalance20 is a complexType.
///
class tt__WhiteBalance20 : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   'AUTO' or 'MANUAL'
/// </BLOCKQUOTE></PRE>
///
/// Element "Mode" of type "http://www.onvif.org/ver10/schema":WhiteBalanceMode.
    enum tt__WhiteBalanceMode            Mode                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Rgain (unitless).
/// </BLOCKQUOTE></PRE>
///
/// Element "CrGain" of type xs:float.
    float*                               CrGain                         0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Bgain (unitless).
/// </BLOCKQUOTE></PRE>
///
/// Element "CbGain" of type xs:float.
    float*                               CbGain                         0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":WhiteBalance20Extension.
    tt__WhiteBalance20Extension*         Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":WhiteBalance20Extension is a complexType.
///
class tt__WhiteBalance20Extension : public xsd__anyType
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
};

/// @brief "http://www.onvif.org/ver10/schema":FocusConfiguration20 is a complexType.
///
class tt__FocusConfiguration20 : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Mode of auto focus.
///   <ul>
///   <li>AUTO - The device automatically adjusts focus.</li>
///   <li>MANUAL - The device does not automatically adjust focus.</li>
///   </ul>
///   Note: for devices supporting both manual and auto operation at the same time manual operation may be supported even if the Mode parameter is set to Auto.
/// </BLOCKQUOTE></PRE>
///
/// Element "AutoFocusMode" of type "http://www.onvif.org/ver10/schema":AutoFocusMode.
    enum tt__AutoFocusMode               AutoFocusMode                  1;	///< Required element.
/// Element "DefaultSpeed" of type xs:float.
    float*                               DefaultSpeed                   0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Parameter to set autofocus near limit (unit: meter).
/// </BLOCKQUOTE></PRE>
///
/// Element "NearLimit" of type xs:float.
    float*                               NearLimit                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Parameter to set autofocus far limit (unit: meter).
/// </BLOCKQUOTE></PRE>
///
/// Element "FarLimit" of type xs:float.
    float*                               FarLimit                       0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":FocusConfiguration20Extension.
    tt__FocusConfiguration20Extension*   Extension                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Zero or more modes as defined in enumeration tt:AFModes.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "AFMode" of type "http://www.onvif.org/ver10/schema":StringAttrList.
  @ tt__StringAttrList*                  AFMode                         0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":FocusConfiguration20Extension is a complexType.
///
class tt__FocusConfiguration20Extension : public xsd__anyType
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
};

/// @brief "http://www.onvif.org/ver10/schema":WhiteBalanceOptions20 is a complexType.
///
class tt__WhiteBalanceOptions20 : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Mode of WhiteBalance.
///   <ul>
///   <li>AUTO</li>
///   <li>MANUAL</li>
///   </ul>
/// </BLOCKQUOTE></PRE>
///
/// Vector of enum tt__WhiteBalanceMode of length 1..unbounded.
    std::vector<enum tt__WhiteBalanceMode> Mode                           1;	///< Multiple elements.
/// Element "YrGain" of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      YrGain                         0;	///< Optional element.
/// Element "YbGain" of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      YbGain                         0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":WhiteBalanceOptions20Extension.
    tt__WhiteBalanceOptions20Extension*  Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":WhiteBalanceOptions20Extension is a complexType.
///
class tt__WhiteBalanceOptions20Extension : public xsd__anyType
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
};

/// @brief "http://www.onvif.org/ver10/schema":FocusOptions20 is a complexType.
///
class tt__FocusOptions20 : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Supported modes for auto focus.
///   <ul>
///   <li>AUTO - The device supports automatic focus adjustment.</li>
///   <li>MANUAL - The device supports manual focus adjustment.</li>
///   </ul>
/// </BLOCKQUOTE></PRE>
///
/// Vector of enum tt__AutoFocusMode of length 0..unbounded.
    std::vector<enum tt__AutoFocusMode > AutoFocusModes                 0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Valid range of DefaultSpeed.
/// </BLOCKQUOTE></PRE>
///
/// Element "DefaultSpeed" of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      DefaultSpeed                   0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Valid range of NearLimit.
/// </BLOCKQUOTE></PRE>
///
/// Element "NearLimit" of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      NearLimit                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Valid range of FarLimit.
/// </BLOCKQUOTE></PRE>
///
/// Element "FarLimit" of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      FarLimit                       0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":FocusOptions20Extension.
    tt__FocusOptions20Extension*         Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":FocusOptions20Extension is a complexType.
///
class tt__FocusOptions20Extension : public xsd__anyType
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <PRE><BLOCKQUOTE>
///   Supported options for auto focus. Options shall be chosen from tt:AFModes.
/// </BLOCKQUOTE></PRE>
///
/// Element "AFModes" of type "http://www.onvif.org/ver10/schema":StringAttrList.
    tt__StringAttrList*                  AFModes                        0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":ToneCompensationOptions is a complexType.
///
class tt__ToneCompensationOptions : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Supported options for Tone Compensation mode. Its options shall be chosen from tt:ToneCompensationMode Type.
/// </BLOCKQUOTE></PRE>
///
/// Vector of std::string of length 1..unbounded.
    std::vector<std::string            > Mode                           1;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not support Level parameter for Tone Compensation.
/// </BLOCKQUOTE></PRE>
///
/// Element "Level" of type xs:boolean.
    bool                                 Level                          1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":DefoggingOptions is a complexType.
///
class tt__DefoggingOptions : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Supported options for Defogging mode. Its options shall be chosen from tt:DefoggingMode Type.
/// </BLOCKQUOTE></PRE>
///
/// Vector of std::string of length 1..unbounded.
    std::vector<std::string            > Mode                           1;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not support Level parameter for Defogging.
/// </BLOCKQUOTE></PRE>
///
/// Element "Level" of type xs:boolean.
    bool                                 Level                          1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":NoiseReductionOptions is a complexType.
///
class tt__NoiseReductionOptions : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not support Level parameter for NoiseReduction.
/// </BLOCKQUOTE></PRE>
///
/// Element "Level" of type xs:boolean.
    bool                                 Level                          1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":MessageExtension is a complexType.
///
class tt__MessageExtension : public xsd__anyType
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
};

/// @brief "http://www.onvif.org/ver10/schema":ItemList is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   List of parameters according to the corresponding ItemListDescription.
///   Each item in the list shall have a unique name.
/// </BLOCKQUOTE></PRE>
///
class tt__ItemList : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Value name pair as defined by the corresponding description.
/// </BLOCKQUOTE></PRE>
///
/// Vector of SimpleItem of length 0..unbounded.
    std::vector<
    class _tt__ItemList_SimpleItem
    { public:
/// <PRE><BLOCKQUOTE>
///   Item name.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "Name" of type xs:string.
  @ std::string                          Name                           1;	///< Required attribute.
/// <PRE><BLOCKQUOTE>
///   Item value. The type is defined in the corresponding description.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "Value" of type xs:anySimpleType.
  @ xsd__anySimpleType                   Value                          1;	///< Required attribute.
    }>                                   SimpleItem                     0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Complex value structure.
/// </BLOCKQUOTE></PRE>
///
/// Vector of ElementItem of length 0..unbounded.
    std::vector<
    class _tt__ItemList_ElementItem
    { public:
/// <any namespace="##any">
    xsd__anyType                         __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <PRE><BLOCKQUOTE>
///   Item name.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "Name" of type xs:string.
  @ std::string                          Name                           1;	///< Required attribute.
    }>                                   ElementItem                    0;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":ItemListExtension.
    tt__ItemListExtension*               Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":ItemListExtension is a complexType.
///
class tt__ItemListExtension : public xsd__anyType
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
};

/// @brief "http://www.onvif.org/ver10/schema":MessageDescription is a complexType.
///
class tt__MessageDescription : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Set of tokens producing this message. The list may only contain SimpleItemDescription items.
///   The set of tokens identify the component within the WS-Endpoint, which is responsible for the producing the message.<br/>
///   For analytics events the token set shall include the VideoSourceConfigurationToken, the VideoAnalyticsConfigurationToken
///   and the name of the analytics module or rule.
/// </BLOCKQUOTE></PRE>
///
/// Element "Source" of type "http://www.onvif.org/ver10/schema":ItemListDescription.
    tt__ItemListDescription*             Source                         0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Describes optional message payload parameters that may be used as key. E.g. object IDs of tracked objects are conveyed as key.
/// </BLOCKQUOTE></PRE>
///
/// Element "Key" of type "http://www.onvif.org/ver10/schema":ItemListDescription.
    tt__ItemListDescription*             Key                            0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Describes the payload of the message.
/// </BLOCKQUOTE></PRE>
///
/// Element "Data" of type "http://www.onvif.org/ver10/schema":ItemListDescription.
    tt__ItemListDescription*             Data                           0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":MessageDescriptionExtension.
    tt__MessageDescriptionExtension*     Extension                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Must be set to true when the described Message relates to a property. An alternative term of "property" is a "state" in contrast to a pure event, which contains relevant information for only a single point in time.<br/>Default is false.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "IsProperty" of type xs:boolean.
  @ bool*                                IsProperty                     0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":MessageDescriptionExtension is a complexType.
///
class tt__MessageDescriptionExtension : public xsd__anyType
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
};

/// @brief "http://www.onvif.org/ver10/schema":ItemListDescription is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Describes a list of items. Each item in the list shall have a unique name.
///   The list is designed as linear structure without optional or unbounded elements.
///   Use ElementItems only when complex structures are inevitable.
/// </BLOCKQUOTE></PRE>
///
class tt__ItemListDescription : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Description of a simple item. The type must be of cathegory simpleType (xs:string, xs:integer, xs:float, ...).
/// </BLOCKQUOTE></PRE>
///
/// Vector of SimpleItemDescription of length 0..unbounded.
    std::vector<
    class _tt__ItemListDescription_SimpleItemDescription
    { public:
/// <PRE><BLOCKQUOTE>
///   Item name. Must be unique within a list.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "Name" of type xs:string.
  @ std::string                          Name                           1;	///< Required attribute.
/// Attribute "Type" of type xs:QName.
  @ xsd__QName                           Type                           1;	///< Required attribute.
    }>                                   SimpleItemDescription          0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Description of a complex type. The Type must reference a defined type.
/// </BLOCKQUOTE></PRE>
///
/// Vector of ElementItemDescription of length 0..unbounded.
    std::vector<
    class _tt__ItemListDescription_ElementItemDescription
    { public:
/// <PRE><BLOCKQUOTE>
///   Item name. Must be unique within a list.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "Name" of type xs:string.
  @ std::string                          Name                           1;	///< Required attribute.
/// <PRE><BLOCKQUOTE>
///   The type of the item. The Type must reference a defined type.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "Type" of type xs:QName.
  @ xsd__QName                           Type                           1;	///< Required attribute.
    }>                                   ElementItemDescription         0;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":ItemListDescriptionExtension.
    tt__ItemListDescriptionExtension*    Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":ItemListDescriptionExtension is a complexType.
///
class tt__ItemListDescriptionExtension : public xsd__anyType
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
};

/// @brief "http://www.onvif.org/ver10/schema":Polyline is a complexType.
///
class tt__Polyline : public xsd__anyType
{ public:
/// Vector of tt__Vector* of length 2..unbounded.
    std::vector<tt__Vector*            > Point                          2;	///< Multiple elements.
};

/// @brief "http://www.onvif.org/ver10/schema":AnalyticsEngineConfiguration is a complexType.
///
class tt__AnalyticsEngineConfiguration : public xsd__anyType
{ public:
/// Vector of tt__Config* of length 0..unbounded.
    std::vector<tt__Config*            > AnalyticsModule                0;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":AnalyticsEngineConfigurationExtension.
    tt__AnalyticsEngineConfigurationExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":AnalyticsEngineConfigurationExtension is a complexType.
///
class tt__AnalyticsEngineConfigurationExtension : public xsd__anyType
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
};

/// @brief "http://www.onvif.org/ver10/schema":RuleEngineConfiguration is a complexType.
///
class tt__RuleEngineConfiguration : public xsd__anyType
{ public:
/// Vector of tt__Config* of length 0..unbounded.
    std::vector<tt__Config*            > Rule                           0;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":RuleEngineConfigurationExtension.
    tt__RuleEngineConfigurationExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":RuleEngineConfigurationExtension is a complexType.
///
class tt__RuleEngineConfigurationExtension : public xsd__anyType
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
};

/// @brief "http://www.onvif.org/ver10/schema":Config is a complexType.
///
class tt__Config : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   List of configuration parameters as defined in the correspding description.
/// </BLOCKQUOTE></PRE>
///
/// Element "Parameters" of type "http://www.onvif.org/ver10/schema":ItemList.
    tt__ItemList*                        Parameters                     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Name of the configuration.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "Name" of type xs:string.
  @ std::string                          Name                           1;	///< Required attribute.
/// <PRE><BLOCKQUOTE>
///   The Type attribute specifies the type of rule and shall be equal to value of one of Name attributes of ConfigDescription elements returned by GetSupportedRules and GetSupportedAnalyticsModules command.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "Type" of type xs:QName.
  @ xsd__QName                           Type                           1;	///< Required attribute.
};

/// @brief "http://www.onvif.org/ver10/schema":ConfigDescription is a complexType.
///
class tt__ConfigDescription : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   List describing the configuration parameters. The names of the parameters must be unique. If possible SimpleItems
///   should be used to transport the information to ease parsing of dynamically defined messages by a client
///   application.
/// </BLOCKQUOTE></PRE>
///
/// Element "Parameters" of type "http://www.onvif.org/ver10/schema":ItemListDescription.
    tt__ItemListDescription*             Parameters                     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The analytics modules and rule engine produce Events, which must be listed within the Analytics Module Description. In order to do so
///   the structure of the Message is defined and consists of three groups: Source, Key, and Data. It is recommended to use SimpleItemDescriptions wherever applicable.
///   The name of all Items must be unique within all Items contained in any group of this Message.
///   Depending on the component multiple parameters or none may be needed to identify the component uniquely.
/// </BLOCKQUOTE></PRE>
///
/// Vector of Messages of length 0..unbounded.
    std::vector<
    class _tt__ConfigDescription_Messages
    { public:
/// INHERITED FROM tt__MessageDescription:
/// <PRE><BLOCKQUOTE>
///   Set of tokens producing this message. The list may only contain SimpleItemDescription items.
///   The set of tokens identify the component within the WS-Endpoint, which is responsible for the producing the message.<br/>
///   For analytics events the token set shall include the VideoSourceConfigurationToken, the VideoAnalyticsConfigurationToken
///   and the name of the analytics module or rule.
/// </BLOCKQUOTE></PRE>
///
/// Element "Source" of type "http://www.onvif.org/ver10/schema":ItemListDescription.
    tt__ItemListDescription*             Source                         0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Describes optional message payload parameters that may be used as key. E.g. object IDs of tracked objects are conveyed as key.
/// </BLOCKQUOTE></PRE>
///
/// Element "Key" of type "http://www.onvif.org/ver10/schema":ItemListDescription.
    tt__ItemListDescription*             Key                            0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Describes the payload of the message.
/// </BLOCKQUOTE></PRE>
///
/// Element "Data" of type "http://www.onvif.org/ver10/schema":ItemListDescription.
    tt__ItemListDescription*             Data                           0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":MessageDescriptionExtension.
    tt__MessageDescriptionExtension*     Extension                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Must be set to true when the described Message relates to a property. An alternative term of "property" is a "state" in contrast to a pure event, which contains relevant information for only a single point in time.<br/>Default is false.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "IsProperty" of type xs:boolean.
  @ bool*                                IsProperty                     0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
//  END OF INHERITED FROM tt__MessageDescription
/// <PRE><BLOCKQUOTE>
///   The topic of the message. For historical reason the element is named ParentTopic, but the full topic is expected.
/// </BLOCKQUOTE></PRE>
///
/// Element "ParentTopic" of type xs:string.
    std::string                          ParentTopic                    1;	///< Required element.
    }>                                   Messages                       0;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":ConfigDescriptionExtension.
    tt__ConfigDescriptionExtension*      Extension                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The Name attribute (e.g. "tt::LineDetector") uniquely identifies the type of rule, not a type definition in a schema.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "Name" of type xs:QName.
  @ xsd__QName                           Name                           1;	///< Required attribute.
/// <PRE><BLOCKQUOTE>
///   The fixed attribute signals that it is not allowed to add or remove this type of configuration.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "fixed" of type xs:boolean.
  @ bool*                                fixed                          0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   The maxInstances attribute signals the maximum number of instances per configuration.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "maxInstances" of type xs:integer.
  @ xsd__integer*                        maxInstances                   0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":ConfigDescriptionExtension is a complexType.
///
class tt__ConfigDescriptionExtension : public xsd__anyType
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
};

/// @brief "http://www.onvif.org/ver10/schema":SupportedRules is a complexType.
///
class tt__SupportedRules : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Lists the location of all schemas that are referenced in the rules.
/// </BLOCKQUOTE></PRE>
///
/// Vector of xsd__anyURI of length 0..unbounded.
    std::vector<xsd__anyURI            > RuleContentSchemaLocation      0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   List of rules supported by the Video Analytics configuration..
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__ConfigDescription* of length 0..unbounded.
    std::vector<tt__ConfigDescription* > RuleDescription                0;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":SupportedRulesExtension.
    tt__SupportedRulesExtension*         Extension                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Maximum number of concurrent instances.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "Limit" of type xs:int.
  @ int*                                 Limit                          0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":SupportedRulesExtension is a complexType.
///
class tt__SupportedRulesExtension : public xsd__anyType
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
};

/// @brief "http://www.onvif.org/ver10/schema":SupportedAnalyticsModules is a complexType.
///
class tt__SupportedAnalyticsModules : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   It optionally contains a list of URLs that provide the location of schema files.
///   These schema files describe the types and elements used in the analytics module descriptions.
///   Analytics module descriptions that reference types or elements imported from any ONVIF defined schema files
///   need not explicitly list those schema files.
/// </BLOCKQUOTE></PRE>
///
/// Vector of xsd__anyURI of length 0..unbounded.
    std::vector<xsd__anyURI            > AnalyticsModuleContentSchemaLocation 0;	///< Multiple elements.
/// Vector of tt__ConfigDescription* of length 0..unbounded.
    std::vector<tt__ConfigDescription* > AnalyticsModuleDescription     0;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":SupportedAnalyticsModulesExtension.
    tt__SupportedAnalyticsModulesExtension*  Extension                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Maximum number of concurrent instances.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "Limit" of type xs:int.
  @ int*                                 Limit                          0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":SupportedAnalyticsModulesExtension is a complexType.
///
class tt__SupportedAnalyticsModulesExtension : public xsd__anyType
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
};

/// @brief "http://www.onvif.org/ver10/schema":PolylineArray is a complexType.
///
class tt__PolylineArray : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains array of Polyline
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__Polyline* of length 1..unbounded.
    std::vector<tt__Polyline*          > Segment                        1;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":PolylineArrayExtension.
    tt__PolylineArrayExtension*          Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":PolylineArrayExtension is a complexType.
///
class tt__PolylineArrayExtension : public xsd__anyType
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
};

/// @brief "http://www.onvif.org/ver10/schema":PolylineArrayConfiguration is a complexType.
///
class tt__PolylineArrayConfiguration : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains PolylineArray configuration data
/// </BLOCKQUOTE></PRE>
///
/// Element "PolylineArray" of type "http://www.onvif.org/ver10/schema":PolylineArray.
    tt__PolylineArray*                   PolylineArray                  1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":MotionExpression is a complexType.
///
class tt__MotionExpression : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Motion Expression data structure contains motion expression which is based on Scene Descriptor schema with XPATH syntax. The Type argument could allow introduction of different dialects
/// </BLOCKQUOTE></PRE>
///
/// Element "Expression" of type xs:string.
    std::string                          Expression                     1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Attribute "Type" of type xs:string.
  @ std::string*                         Type                           0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":MotionExpressionConfiguration is a complexType.
///
class tt__MotionExpressionConfiguration : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains Rule MotionExpression configuration
/// </BLOCKQUOTE></PRE>
///
/// Element "MotionExpression" of type "http://www.onvif.org/ver10/schema":MotionExpression.
    tt__MotionExpression*                MotionExpression               1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":CellLayout is a complexType.
///
class tt__CellLayout : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Mapping of the cell grid to the Video frame. The cell grid is starting from the upper left corner and x dimension is going from left to right and the y dimension from up to down.
/// </BLOCKQUOTE></PRE>
///
/// Element "Transformation" of type "http://www.onvif.org/ver10/schema":Transformation.
    tt__Transformation*                  Transformation                 1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <PRE><BLOCKQUOTE>
///   Number of columns of the cell grid (x dimension)
/// </BLOCKQUOTE></PRE>
///
/// Attribute "Columns" of type xs:integer.
  @ xsd__integer                         Columns                        1;	///< Required attribute.
/// <PRE><BLOCKQUOTE>
///   Number of rows of the cell grid (y dimension)
/// </BLOCKQUOTE></PRE>
///
/// Attribute "Rows" of type xs:integer.
  @ xsd__integer                         Rows                           1;	///< Required attribute.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":PaneConfiguration is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Configuration of the streaming and coding settings of a Video window.
/// </BLOCKQUOTE></PRE>
///
class tt__PaneConfiguration : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Optional name of the pane configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "PaneName" of type xs:string.
    std::string*                         PaneName                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If the device has audio outputs, this element contains a pointer to the audio output that is associated with the pane. A client
///   can retrieve the available audio outputs of a device using the GetAudioOutputs command of the DeviceIO service.
/// </BLOCKQUOTE></PRE>
///
/// Element "AudioOutputToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken*                  AudioOutputToken               0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If the device has audio sources, this element contains a pointer to the audio source that is associated with this pane.
///   The audio connection from a decoder device to the NVT is established using the backchannel mechanism. A client can retrieve the available audio sources of a device using the GetAudioSources command of the
///   DeviceIO service.
/// </BLOCKQUOTE></PRE>
///
/// Element "AudioSourceToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken*                  AudioSourceToken               0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The configuration of the audio encoder including codec, bitrate
///   and sample rate.
/// </BLOCKQUOTE></PRE>
///
/// Element "AudioEncoderConfiguration" of type "http://www.onvif.org/ver10/schema":AudioEncoderConfiguration.
    tt__AudioEncoderConfiguration*       AudioEncoderConfiguration      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   A pointer to a Receiver that has the necessary information to receive
///   data from a Transmitter. This Receiver can be connected and the network video decoder displays the received data on the specified outputs. A client can retrieve the available Receivers using the
///   GetReceivers command of the Receiver Service.
/// </BLOCKQUOTE></PRE>
///
/// Element "ReceiverToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken*                  ReceiverToken                  0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   A unique identifier in the display device.
/// </BLOCKQUOTE></PRE>
///
/// Element "Token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   Token                          1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":PaneLayout is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   A pane layout describes one Video window of a display. It links a pane configuration to a region of the screen.
/// </BLOCKQUOTE></PRE>
///
class tt__PaneLayout : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Reference to the configuration of the streaming and coding parameters.
/// </BLOCKQUOTE></PRE>
///
/// Element "Pane" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   Pane                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Describes the location and size of the area on the monitor. The area coordinate values are espressed in normalized units [-1.0, 1.0].
/// </BLOCKQUOTE></PRE>
///
/// Element "Area" of type "http://www.onvif.org/ver10/schema":Rectangle.
    tt__Rectangle*                       Area                           1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":Layout is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   A layout describes a set of Video windows that are displayed simultaniously on a display.
/// </BLOCKQUOTE></PRE>
///
class tt__Layout : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   List of panes assembling the display layout.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__PaneLayout* of length 1..unbounded.
    std::vector<tt__PaneLayout*        > PaneLayout                     1;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":LayoutExtension.
    tt__LayoutExtension*                 Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":LayoutExtension is a complexType.
///
class tt__LayoutExtension : public xsd__anyType
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
};

/// @brief "http://www.onvif.org/ver10/schema":CodingCapabilities is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   This type contains the Audio and Video coding capabilities of a display service.
/// </BLOCKQUOTE></PRE>
///
class tt__CodingCapabilities : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   If the device supports audio encoding this section describes the supported codecs and their configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "AudioEncodingCapabilities" of type "http://www.onvif.org/ver10/schema":AudioEncoderConfigurationOptions.
    tt__AudioEncoderConfigurationOptions*  AudioEncodingCapabilities      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If the device supports audio decoding this section describes the supported codecs and their settings.
/// </BLOCKQUOTE></PRE>
///
/// Element "AudioDecodingCapabilities" of type "http://www.onvif.org/ver10/schema":AudioDecoderConfigurationOptions.
    tt__AudioDecoderConfigurationOptions*  AudioDecodingCapabilities      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   This section describes the supported video codesc and their configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "VideoDecodingCapabilities" of type "http://www.onvif.org/ver10/schema":VideoDecoderConfigurationOptions.
    tt__VideoDecoderConfigurationOptions*  VideoDecodingCapabilities      1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":LayoutOptions is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   The options supported for a display layout.
/// </BLOCKQUOTE></PRE>
///
class tt__LayoutOptions : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Lists the possible Pane Layouts of the Video Output
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__PaneLayoutOptions* of length 1..unbounded.
    std::vector<tt__PaneLayoutOptions* > PaneLayoutOptions              1;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":LayoutOptionsExtension.
    tt__LayoutOptionsExtension*          Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":LayoutOptionsExtension is a complexType.
///
class tt__LayoutOptionsExtension : public xsd__anyType
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
};

/// @brief "http://www.onvif.org/ver10/schema":PaneLayoutOptions is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Description of a pane layout describing a complete display layout.
/// </BLOCKQUOTE></PRE>
///
class tt__PaneLayoutOptions : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   List of areas assembling a layout. Coordinate values are in the range [-1.0, 1.0].
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__Rectangle* of length 1..unbounded.
    std::vector<tt__Rectangle*         > Area                           1;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":PaneOptionExtension.
    tt__PaneOptionExtension*             Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":PaneOptionExtension is a complexType.
///
class tt__PaneOptionExtension : public xsd__anyType
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
};

/// @brief "http://www.onvif.org/ver10/schema":Receiver is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Description of a receiver, including its token and configuration.
/// </BLOCKQUOTE></PRE>
///
class tt__Receiver : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Unique identifier of the receiver.
/// </BLOCKQUOTE></PRE>
///
/// Element "Token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   Token                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Describes the configuration of the receiver.
/// </BLOCKQUOTE></PRE>
///
/// Element "Configuration" of type "http://www.onvif.org/ver10/schema":ReceiverConfiguration.
    tt__ReceiverConfiguration*           Configuration                  1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":ReceiverConfiguration is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Describes the configuration of a receiver.
/// </BLOCKQUOTE></PRE>
///
class tt__ReceiverConfiguration : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   The following connection modes are defined:
/// </BLOCKQUOTE></PRE>
///
/// Element "Mode" of type "http://www.onvif.org/ver10/schema":ReceiverMode.
    enum tt__ReceiverMode                Mode                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Details of the URI to which the receiver should connect.
/// </BLOCKQUOTE></PRE>
///
/// Element "MediaUri" of type xs:anyURI.
    xsd__anyURI                          MediaUri                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Stream connection parameters.
/// </BLOCKQUOTE></PRE>
///
/// Element "StreamSetup" of type "http://www.onvif.org/ver10/schema":StreamSetup.
    tt__StreamSetup*                     StreamSetup                    1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":ReceiverStateInformation is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Contains information about a receiver's current state.
/// </BLOCKQUOTE></PRE>
///
class tt__ReceiverStateInformation : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   The connection state of the receiver may have one of the following states:
/// </BLOCKQUOTE></PRE>
///
/// Element "State" of type "http://www.onvif.org/ver10/schema":ReceiverState.
    enum tt__ReceiverState               State                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not the receiver was created automatically.
/// </BLOCKQUOTE></PRE>
///
/// Element "AutoCreated" of type xs:boolean.
    bool                                 AutoCreated                    1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":SourceReference is a complexType.
///
class tt__SourceReference : public xsd__anyType
{ public:
/// Element "Token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   Token                          1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Attribute "Type" of type xs:anyURI.
  @ xsd__anyURI                          Type                           0 = "http://www.onvif.org/ver10/schema/Receiver";	///< Optional attribute with default value="http://www.onvif.org/ver10/schema/Receiver".
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":DateTimeRange is a complexType.
///
class tt__DateTimeRange : public xsd__anyType
{ public:
/// Element "From" of type xs:dateTime.
    xsd__dateTime                        From                           1;	///< Required element.
/// Element "Until" of type xs:dateTime.
    xsd__dateTime                        Until                          1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":RecordingSummary is a complexType.
///
class tt__RecordingSummary : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   The earliest point in time where there is recorded data on the device.
/// </BLOCKQUOTE></PRE>
///
/// Element "DataFrom" of type xs:dateTime.
    xsd__dateTime                        DataFrom                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The most recent point in time where there is recorded data on the device.
/// </BLOCKQUOTE></PRE>
///
/// Element "DataUntil" of type xs:dateTime.
    xsd__dateTime                        DataUntil                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The device contains this many recordings.
/// </BLOCKQUOTE></PRE>
///
/// Element "NumberRecordings" of type xs:int.
    int                                  NumberRecordings               1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":SearchScope is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   A structure for defining a limited scope when searching in recorded data.
/// </BLOCKQUOTE></PRE>
///
class tt__SearchScope : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   A list of sources that are included in the scope. If this list is included, only data from one of these sources shall be searched.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__SourceReference* of length 0..unbounded.
    std::vector<tt__SourceReference*   > IncludedSources                0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   A list of recordings that are included in the scope. If this list is included, only data from one of these recordings shall be searched.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__RecordingReference of length 0..unbounded.
    std::vector<tt__RecordingReference > IncludedRecordings             0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   An xpath expression used to specify what recordings to search. Only those recordings with an RecordingInformation structure that matches the filter shall be searched.
/// </BLOCKQUOTE></PRE>
///
/// Element "RecordingInformationFilter" of type "http://www.onvif.org/ver10/schema":XPathExpression.
    tt__XPathExpression*                 RecordingInformationFilter     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Extension point
/// </BLOCKQUOTE></PRE>
///
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":SearchScopeExtension.
    tt__SearchScopeExtension*            Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":SearchScopeExtension is a complexType.
///
class tt__SearchScopeExtension : public xsd__anyType
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPositionFilter is a complexType.
///
class tt__PTZPositionFilter : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   The lower boundary of the PTZ volume to look for.
/// </BLOCKQUOTE></PRE>
///
/// Element "MinPosition" of type "http://www.onvif.org/ver10/schema":PTZVector.
    tt__PTZVector*                       MinPosition                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The upper boundary of the PTZ volume to look for.
/// </BLOCKQUOTE></PRE>
///
/// Element "MaxPosition" of type "http://www.onvif.org/ver10/schema":PTZVector.
    tt__PTZVector*                       MaxPosition                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   If true, search for when entering the specified PTZ volume.
/// </BLOCKQUOTE></PRE>
///
/// Element "EnterOrExit" of type xs:boolean.
    bool                                 EnterOrExit                    1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":MetadataFilter is a complexType.
///
class tt__MetadataFilter : public xsd__anyType
{ public:
/// Element "MetadataStreamFilter" of type "http://www.onvif.org/ver10/schema":XPathExpression.
    tt__XPathExpression                  MetadataStreamFilter           1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":FindRecordingResultList is a complexType.
///
class tt__FindRecordingResultList : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   The state of the search when the result is returned. Indicates if there can be more results, or if the search is completed.
/// </BLOCKQUOTE></PRE>
///
/// Element "SearchState" of type "http://www.onvif.org/ver10/schema":SearchState.
    enum tt__SearchState                 SearchState                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A RecordingInformation structure for each found recording matching the search.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__RecordingInformation* of length 0..unbounded.
    std::vector<tt__RecordingInformation*> RecordingInformation           0;	///< Multiple elements.
};

/// @brief "http://www.onvif.org/ver10/schema":FindEventResultList is a complexType.
///
class tt__FindEventResultList : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   The state of the search when the result is returned. Indicates if there can be more results, or if the search is completed.
/// </BLOCKQUOTE></PRE>
///
/// Element "SearchState" of type "http://www.onvif.org/ver10/schema":SearchState.
    enum tt__SearchState                 SearchState                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A FindEventResult structure for each found event matching the search.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__FindEventResult* of length 0..unbounded.
    std::vector<tt__FindEventResult*   > Result                         0;	///< Multiple elements.
};

/// @brief "http://www.onvif.org/ver10/schema":FindEventResult is a complexType.
///
class tt__FindEventResult : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   The recording where this event was found. Empty string if no recording is associated with this event.
/// </BLOCKQUOTE></PRE>
///
/// Element "RecordingToken" of type "http://www.onvif.org/ver10/schema":RecordingReference.
    tt__RecordingReference               RecordingToken                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A reference to the track where this event was found. Empty string if no track is associated with this event.
/// </BLOCKQUOTE></PRE>
///
/// Element "TrackToken" of type "http://www.onvif.org/ver10/schema":TrackReference.
    tt__TrackReference                   TrackToken                     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The time when the event occured.
/// </BLOCKQUOTE></PRE>
///
/// Element "Time" of type xs:dateTime.
    xsd__dateTime                        Time                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The description of the event.
/// </BLOCKQUOTE></PRE>
///
/// Element "Event" of type "http://docs.oasis-open.org/wsn/b-2":NotificationMessageHolderType.
    wsnt__NotificationMessageHolderType*  Event                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   If true, indicates that the event is a virtual event generated for this particular search session to give the state of a property at the start time of the search.
/// </BLOCKQUOTE></PRE>
///
/// Element "StartStateEvent" of type xs:boolean.
    bool                                 StartStateEvent                1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":FindPTZPositionResultList is a complexType.
///
class tt__FindPTZPositionResultList : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   The state of the search when the result is returned. Indicates if there can be more results, or if the search is completed.
/// </BLOCKQUOTE></PRE>
///
/// Element "SearchState" of type "http://www.onvif.org/ver10/schema":SearchState.
    enum tt__SearchState                 SearchState                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A FindPTZPositionResult structure for each found PTZ position matching the search.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__FindPTZPositionResult* of length 0..unbounded.
    std::vector<tt__FindPTZPositionResult*> Result                         0;	///< Multiple elements.
};

/// @brief "http://www.onvif.org/ver10/schema":FindPTZPositionResult is a complexType.
///
class tt__FindPTZPositionResult : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   A reference to the recording containing the PTZ position.
/// </BLOCKQUOTE></PRE>
///
/// Element "RecordingToken" of type "http://www.onvif.org/ver10/schema":RecordingReference.
    tt__RecordingReference               RecordingToken                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A reference to the metadata track containing the PTZ position.
/// </BLOCKQUOTE></PRE>
///
/// Element "TrackToken" of type "http://www.onvif.org/ver10/schema":TrackReference.
    tt__TrackReference                   TrackToken                     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The time when the PTZ position was valid.
/// </BLOCKQUOTE></PRE>
///
/// Element "Time" of type xs:dateTime.
    xsd__dateTime                        Time                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The PTZ position.
/// </BLOCKQUOTE></PRE>
///
/// Element "Position" of type "http://www.onvif.org/ver10/schema":PTZVector.
    tt__PTZVector*                       Position                       1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":FindMetadataResultList is a complexType.
///
class tt__FindMetadataResultList : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   The state of the search when the result is returned. Indicates if there can be more results, or if the search is completed.
/// </BLOCKQUOTE></PRE>
///
/// Element "SearchState" of type "http://www.onvif.org/ver10/schema":SearchState.
    enum tt__SearchState                 SearchState                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A FindMetadataResult structure for each found set of Metadata matching the search.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__FindMetadataResult* of length 0..unbounded.
    std::vector<tt__FindMetadataResult*> Result                         0;	///< Multiple elements.
};

/// @brief "http://www.onvif.org/ver10/schema":FindMetadataResult is a complexType.
///
class tt__FindMetadataResult : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   A reference to the recording containing the metadata.
/// </BLOCKQUOTE></PRE>
///
/// Element "RecordingToken" of type "http://www.onvif.org/ver10/schema":RecordingReference.
    tt__RecordingReference               RecordingToken                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A reference to the metadata track containing the matching metadata.
/// </BLOCKQUOTE></PRE>
///
/// Element "TrackToken" of type "http://www.onvif.org/ver10/schema":TrackReference.
    tt__TrackReference                   TrackToken                     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The point in time when the matching metadata occurs in the metadata track.
/// </BLOCKQUOTE></PRE>
///
/// Element "Time" of type xs:dateTime.
    xsd__dateTime                        Time                           1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":RecordingInformation is a complexType.
///
class tt__RecordingInformation : public xsd__anyType
{ public:
/// Element "RecordingToken" of type "http://www.onvif.org/ver10/schema":RecordingReference.
    tt__RecordingReference               RecordingToken                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Information about the source of the recording. This gives a description of where the data in the recording comes from. Since a single
///   recording is intended to record related material, there is just one source. It is indicates the physical location or the
///   major data source for the recording. Currently the recordingconfiguration cannot describe each individual data source.
/// </BLOCKQUOTE></PRE>
///
/// Element "Source" of type "http://www.onvif.org/ver10/schema":RecordingSourceInformation.
    tt__RecordingSourceInformation*      Source                         1;	///< Required element.
/// Element "EarliestRecording" of type xs:dateTime.
    xsd__dateTime*                       EarliestRecording              0;	///< Optional element.
/// Element "LatestRecording" of type xs:dateTime.
    xsd__dateTime*                       LatestRecording                0;	///< Optional element.
/// Element "Content" of type "http://www.onvif.org/ver10/schema":Description.
    tt__Description                      Content                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Basic information about the track. Note that a track may represent a single contiguous time span or consist of multiple slices.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__TrackInformation* of length 0..unbounded.
    std::vector<tt__TrackInformation*  > Track                          0;	///< Multiple elements.
/// Element "RecordingStatus" of type "http://www.onvif.org/ver10/schema":RecordingStatus.
    enum tt__RecordingStatus             RecordingStatus                1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":RecordingSourceInformation is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   A set of informative desciptions of a data source. The Search searvice allows a client to filter on recordings based on information in this structure.
/// </BLOCKQUOTE></PRE>
///
class tt__RecordingSourceInformation : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Identifier for the source chosen by the client that creates the structure.
///   This identifier is opaque to the device. Clients may use any type of URI for this field. A device shall support at least 128 characters.
/// </BLOCKQUOTE></PRE>
///
/// Element "SourceId" of type xs:anyURI.
    xsd__anyURI                          SourceId                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Informative user readable name of the source, e.g. "Camera23". A device shall support at least 20 characters.
/// </BLOCKQUOTE></PRE>
///
/// Element "Name" of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Informative description of the physical location of the source, e.g. the coordinates on a map.
/// </BLOCKQUOTE></PRE>
///
/// Element "Location" of type "http://www.onvif.org/ver10/schema":Description.
    tt__Description                      Location                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Informative description of the source.
/// </BLOCKQUOTE></PRE>
///
/// Element "Description" of type "http://www.onvif.org/ver10/schema":Description.
    tt__Description                      Description                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   URI provided by the service supplying data to be recorded. A device shall support at least 128 characters.
/// </BLOCKQUOTE></PRE>
///
/// Element "Address" of type xs:anyURI.
    xsd__anyURI                          Address                        1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":TrackInformation is a complexType.
///
class tt__TrackInformation : public xsd__anyType
{ public:
/// Element "TrackToken" of type "http://www.onvif.org/ver10/schema":TrackReference.
    tt__TrackReference                   TrackToken                     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Type of the track: "Video", "Audio" or "Metadata".
///   The track shall only be able to hold data of that type.
/// </BLOCKQUOTE></PRE>
///
/// Element "TrackType" of type "http://www.onvif.org/ver10/schema":TrackType.
    enum tt__TrackType                   TrackType                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Informative description of the contents of the track.
/// </BLOCKQUOTE></PRE>
///
/// Element "Description" of type "http://www.onvif.org/ver10/schema":Description.
    tt__Description                      Description                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The start date and time of the oldest recorded data in the track.
/// </BLOCKQUOTE></PRE>
///
/// Element "DataFrom" of type xs:dateTime.
    xsd__dateTime                        DataFrom                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The stop date and time of the newest recorded data in the track.
/// </BLOCKQUOTE></PRE>
///
/// Element "DataTo" of type xs:dateTime.
    xsd__dateTime                        DataTo                         1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":MediaAttributes is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   A set of media attributes valid for a recording at a point in time or for a time interval.
/// </BLOCKQUOTE></PRE>
///
class tt__MediaAttributes : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   A reference to the recording that has these attributes.
/// </BLOCKQUOTE></PRE>
///
/// Element "RecordingToken" of type "http://www.onvif.org/ver10/schema":RecordingReference.
    tt__RecordingReference               RecordingToken                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A set of attributes for each track.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__TrackAttributes* of length 0..unbounded.
    std::vector<tt__TrackAttributes*   > TrackAttributes                0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   The attributes are valid from this point in time in the recording.
/// </BLOCKQUOTE></PRE>
///
/// Element "From" of type xs:dateTime.
    xsd__dateTime                        From                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The attributes are valid until this point in time in the recording. Can be equal to 'From' to indicate that the attributes are only known to be valid for this particular point in time.
/// </BLOCKQUOTE></PRE>
///
/// Element "Until" of type xs:dateTime.
    xsd__dateTime                        Until                          1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":TrackAttributes is a complexType.
///
class tt__TrackAttributes : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   The basic information about the track. Note that a track may represent a single contiguous time span or consist of multiple slices.
/// </BLOCKQUOTE></PRE>
///
/// Element "TrackInformation" of type "http://www.onvif.org/ver10/schema":TrackInformation.
    tt__TrackInformation*                TrackInformation               1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   If the track is a video track, exactly one of this structure shall be present and contain the video attributes.
/// </BLOCKQUOTE></PRE>
///
/// Element "VideoAttributes" of type "http://www.onvif.org/ver10/schema":VideoAttributes.
    tt__VideoAttributes*                 VideoAttributes                0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If the track is an audio track, exactly one of this structure shall be present and contain the audio attributes.
/// </BLOCKQUOTE></PRE>
///
/// Element "AudioAttributes" of type "http://www.onvif.org/ver10/schema":AudioAttributes.
    tt__AudioAttributes*                 AudioAttributes                0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If the track is an metadata track, exactly one of this structure shall be present and contain the metadata attributes.
/// </BLOCKQUOTE></PRE>
///
/// Element "MetadataAttributes" of type "http://www.onvif.org/ver10/schema":MetadataAttributes.
    tt__MetadataAttributes*              MetadataAttributes             0;	///< Optional element.

/// </BLOCKQUOTE></PRE>
///
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":TrackAttributesExtension.
    tt__TrackAttributesExtension*        Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":TrackAttributesExtension is a complexType.
///
class tt__TrackAttributesExtension : public xsd__anyType
{ public:
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
};

/// @brief "http://www.onvif.org/ver10/schema":VideoAttributes is a complexType.
///
class tt__VideoAttributes : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Average bitrate in kbps.
/// </BLOCKQUOTE></PRE>
///
/// Element "Bitrate" of type xs:int.
    int*                                 Bitrate                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The width of the video in pixels.
/// </BLOCKQUOTE></PRE>
///
/// Element "Width" of type xs:int.
    int                                  Width                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The height of the video in pixels.
/// </BLOCKQUOTE></PRE>
///
/// Element "Height" of type xs:int.
    int                                  Height                         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Video encoding of the track. Use value from tt:VideoEncoding for MPEG4. Otherwise use values from tt:VideoEncodingMimeNames and <a href="https://www.iana.org/assignments/media-types/media-types.xhtml#video"> IANA Media Types</a>.
/// </BLOCKQUOTE></PRE>
///
/// Element "Encoding" of type xs:string.
    std::string                          Encoding                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Average framerate in frames per second.
/// </BLOCKQUOTE></PRE>
///
/// Element "Framerate" of type xs:float.
    float                                Framerate                      1;	///< Required element.
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":AudioAttributes is a complexType.
///
class tt__AudioAttributes : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   The bitrate in kbps.
/// </BLOCKQUOTE></PRE>
///
/// Element "Bitrate" of type xs:int.
    int*                                 Bitrate                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Audio encoding of the track. Use values from tt:AudioEncoding for G711 and AAC. Otherwise use values from tt:AudioEncodingMimeNames and <a href="https://www.iana.org/assignments/media-types/media-types.xhtml#audio"> IANA Media Types</a>.
/// </BLOCKQUOTE></PRE>
///
/// Element "Encoding" of type xs:string.
    std::string                          Encoding                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The sample rate in kHz.
/// </BLOCKQUOTE></PRE>
///
/// Element "Samplerate" of type xs:int.
    int                                  Samplerate                     1;	///< Required element.
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":MetadataAttributes is a complexType.
///
class tt__MetadataAttributes : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicates that there can be PTZ data in the metadata track in the specified time interval.
/// </BLOCKQUOTE></PRE>
///
/// Element "CanContainPTZ" of type xs:boolean.
    bool                                 CanContainPTZ                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates that there can be analytics data in the metadata track in the specified time interval.
/// </BLOCKQUOTE></PRE>
///
/// Element "CanContainAnalytics" of type xs:boolean.
    bool                                 CanContainAnalytics            1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates that there can be notifications in the metadata track in the specified time interval.
/// </BLOCKQUOTE></PRE>
///
/// Element "CanContainNotifications" of type xs:boolean.
    bool                                 CanContainNotifications        1;	///< Required element.
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <PRE><BLOCKQUOTE>
///   List of all PTZ spaces active for recording. Note that events are only recorded on position changes and the actual point of recording may not necessarily contain an event of the specified type.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "PtzSpaces" of type "http://www.onvif.org/ver10/schema":StringAttrList.
  @ tt__StringAttrList*                  PtzSpaces                      0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":RecordingConfiguration is a complexType.
///
class tt__RecordingConfiguration : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Information about the source of the recording.
/// </BLOCKQUOTE></PRE>
///
/// Element "Source" of type "http://www.onvif.org/ver10/schema":RecordingSourceInformation.
    tt__RecordingSourceInformation*      Source                         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Informative description of the source.
/// </BLOCKQUOTE></PRE>
///
/// Element "Content" of type "http://www.onvif.org/ver10/schema":Description.
    tt__Description                      Content                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Sspecifies the maximum time that data in any track within the
///   recording shall be stored. The device shall delete any data older than the maximum retention
///   time. Such data shall not be accessible anymore. If the MaximumRetentionPeriod is set to 0,
///   the device shall not limit the retention time of stored data, except by resource constraints.
///   Whatever the value of MaximumRetentionTime, the device may automatically delete
///   recordings to free up storage space for new recordings.
/// </BLOCKQUOTE></PRE>
///
/// Element "MaximumRetentionTime" of type xs:duration.
    xsd__duration                        MaximumRetentionTime           1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":TrackConfiguration is a complexType.
///
class tt__TrackConfiguration : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Type of the track. It shall be equal to the strings Video,
///   Audio or Metadata. The track shall only be able to hold data of that type.
/// </BLOCKQUOTE></PRE>
///
/// Element "TrackType" of type "http://www.onvif.org/ver10/schema":TrackType.
    enum tt__TrackType                   TrackType                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Informative description of the track.
/// </BLOCKQUOTE></PRE>
///
/// Element "Description" of type "http://www.onvif.org/ver10/schema":Description.
    tt__Description                      Description                    1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":GetRecordingsResponseItem is a complexType.
///
class tt__GetRecordingsResponseItem : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Token of the recording.
/// </BLOCKQUOTE></PRE>
///
/// Element "RecordingToken" of type "http://www.onvif.org/ver10/schema":RecordingReference.
    tt__RecordingReference               RecordingToken                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Configuration of the recording.
/// </BLOCKQUOTE></PRE>
///
/// Element "Configuration" of type "http://www.onvif.org/ver10/schema":RecordingConfiguration.
    tt__RecordingConfiguration*          Configuration                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of tracks.
/// </BLOCKQUOTE></PRE>
///
/// Element "Tracks" of type "http://www.onvif.org/ver10/schema":GetTracksResponseList.
    tt__GetTracksResponseList*           Tracks                         1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":GetTracksResponseList is a complexType.
///
class tt__GetTracksResponseList : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Configuration of a track.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__GetTracksResponseItem* of length 0..unbounded.
    std::vector<tt__GetTracksResponseItem*> Track                          0;	///< Multiple elements.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":GetTracksResponseItem is a complexType.
///
class tt__GetTracksResponseItem : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Token of the track.
/// </BLOCKQUOTE></PRE>
///
/// Element "TrackToken" of type "http://www.onvif.org/ver10/schema":TrackReference.
    tt__TrackReference                   TrackToken                     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Configuration of the track.
/// </BLOCKQUOTE></PRE>
///
/// Element "Configuration" of type "http://www.onvif.org/ver10/schema":TrackConfiguration.
    tt__TrackConfiguration*              Configuration                  1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":RecordingJobConfiguration is a complexType.
///
class tt__RecordingJobConfiguration : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Identifies the recording to which this job shall store the received data.
/// </BLOCKQUOTE></PRE>
///
/// Element "RecordingToken" of type "http://www.onvif.org/ver10/schema":RecordingReference.
    tt__RecordingReference               RecordingToken                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The mode of the job. If it is idle, nothing shall happen. If it is active, the device shall try
///   to obtain data from the receivers. A client shall use GetRecordingJobState to determine if data transfer is really taking place.<br/>
///   The only valid values for Mode shall be Idle and Active.
/// </BLOCKQUOTE></PRE>
///
/// Element "Mode" of type "http://www.onvif.org/ver10/schema":RecordingJobMode.
    tt__RecordingJobMode                 Mode                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   This shall be a non-negative number. If there are multiple recording jobs that store data to
///   the same track, the device will only store the data for the recording job with the highest
///   priority. The priority is specified per recording job, but the device shall determine the priority
///   of each track individually. If there are two recording jobs with the same priority, the device
///   shall record the data corresponding to the recording job that was activated the latest.
/// </BLOCKQUOTE></PRE>
///
/// Element "Priority" of type xs:int.
    int                                  Priority                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Source of the recording.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__RecordingJobSource* of length 0..unbounded.
    std::vector<tt__RecordingJobSource*> Source                         0;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":RecordingJobConfigurationExtension.
    tt__RecordingJobConfigurationExtension*  Extension                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   This attribute adds an additional requirement for activating the recording job. If this optional field is provided the job shall only record if the schedule exists and is active.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "ScheduleToken" has no type or ref: assuming string content.
  @ std::string*                         ScheduleToken                  0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":RecordingJobConfigurationExtension is a complexType.
///
class tt__RecordingJobConfigurationExtension : public xsd__anyType
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
};

/// @brief "http://www.onvif.org/ver10/schema":RecordingJobSource is a complexType.
///
class tt__RecordingJobSource : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   This field shall be a reference to the source of the data. The type of the source
///   is determined by the attribute Type in the SourceToken structure. If Type is
///   http://www.onvif.org/ver10/schema/Receiver, the token is a ReceiverReference. In this case
///   the device shall receive the data over the network. If Type is
///   http://www.onvif.org/ver10/schema/Profile, the token identifies a media profile, instructing the
///   device to obtain data from a profile that exists on the local device.
/// </BLOCKQUOTE></PRE>
///
/// Element "SourceToken" of type "http://www.onvif.org/ver10/schema":SourceReference.
    tt__SourceReference*                 SourceToken                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If this field is TRUE, and if the SourceToken is omitted, the device
///   shall create a receiver object (through the receiver service) and assign the
///   ReceiverReference to the SourceToken field. When retrieving the RecordingJobConfiguration
///   from the device, the AutoCreateReceiver field shall never be present.
/// </BLOCKQUOTE></PRE>
///
/// Element "AutoCreateReceiver" of type xs:boolean.
    bool*                                AutoCreateReceiver             0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   List of tracks associated with the recording.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__RecordingJobTrack* of length 0..unbounded.
    std::vector<tt__RecordingJobTrack* > Tracks                         0;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":RecordingJobSourceExtension.
    tt__RecordingJobSourceExtension*     Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":RecordingJobSourceExtension is a complexType.
///
class tt__RecordingJobSourceExtension : public xsd__anyType
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
};

/// @brief "http://www.onvif.org/ver10/schema":RecordingJobTrack is a complexType.
///
class tt__RecordingJobTrack : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   If the received RTSP stream contains multiple tracks of the same type, the
///   SourceTag differentiates between those Tracks. This field can be ignored in case of recording a local source.
/// </BLOCKQUOTE></PRE>
///
/// Element "SourceTag" of type xs:string.
    std::string                          SourceTag                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The destination is the tracktoken of the track to which the device shall store the
///   received data.
/// </BLOCKQUOTE></PRE>
///
/// Element "Destination" of type "http://www.onvif.org/ver10/schema":TrackReference.
    tt__TrackReference                   Destination                    1;	///< Required element.
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":RecordingJobStateInformation is a complexType.
///
class tt__RecordingJobStateInformation : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Identification of the recording that the recording job records to.
/// </BLOCKQUOTE></PRE>
///
/// Element "RecordingToken" of type "http://www.onvif.org/ver10/schema":RecordingReference.
    tt__RecordingReference               RecordingToken                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Holds the aggregated state over the whole RecordingJobInformation structure.
/// </BLOCKQUOTE></PRE>
///
/// Element "State" of type "http://www.onvif.org/ver10/schema":RecordingJobState.
    tt__RecordingJobState                State                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Identifies the data source of the recording job.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__RecordingJobStateSource* of length 0..unbounded.
    std::vector<tt__RecordingJobStateSource*> Sources                        0;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":RecordingJobStateInformationExtension.
    tt__RecordingJobStateInformationExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":RecordingJobStateInformationExtension is a complexType.
///
class tt__RecordingJobStateInformationExtension : public xsd__anyType
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
};

/// @brief "http://www.onvif.org/ver10/schema":RecordingJobStateSource is a complexType.
///
class tt__RecordingJobStateSource : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Identifies the data source of the recording job.
/// </BLOCKQUOTE></PRE>
///
/// Element "SourceToken" of type "http://www.onvif.org/ver10/schema":SourceReference.
    tt__SourceReference*                 SourceToken                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Holds the aggregated state over all substructures of RecordingJobStateSource.
/// </BLOCKQUOTE></PRE>
///
/// Element "State" of type "http://www.onvif.org/ver10/schema":RecordingJobState.
    tt__RecordingJobState                State                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of track items.
/// </BLOCKQUOTE></PRE>
///
/// Element "Tracks" of type "http://www.onvif.org/ver10/schema":RecordingJobStateTracks.
    tt__RecordingJobStateTracks*         Tracks                         1;	///< Required element.
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":RecordingJobStateTracks is a complexType.
///
class tt__RecordingJobStateTracks : public xsd__anyType
{ public:
/// Vector of tt__RecordingJobStateTrack* of length 0..unbounded.
    std::vector<tt__RecordingJobStateTrack*> Track                          0;	///< Multiple elements.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":RecordingJobStateTrack is a complexType.
///
class tt__RecordingJobStateTrack : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Identifies the track of the data source that provides the data.
/// </BLOCKQUOTE></PRE>
///
/// Element "SourceTag" of type xs:string.
    std::string                          SourceTag                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates the destination track.
/// </BLOCKQUOTE></PRE>
///
/// Element "Destination" of type "http://www.onvif.org/ver10/schema":TrackReference.
    tt__TrackReference                   Destination                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optionally holds an implementation defined string value that describes the error.
///   The string should be in the English language.
/// </BLOCKQUOTE></PRE>
///
/// Element "Error" of type xs:string.
    std::string*                         Error                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Provides the job state of the track. The valid
///   values of state shall be Idle, Active and Error. If state equals Error, the Error field may be filled in with an implementation defined value.
/// </BLOCKQUOTE></PRE>
///
/// Element "State" of type "http://www.onvif.org/ver10/schema":RecordingJobState.
    tt__RecordingJobState                State                          1;	///< Required element.
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":GetRecordingJobsResponseItem is a complexType.
///
class tt__GetRecordingJobsResponseItem : public xsd__anyType
{ public:
/// Element "JobToken" of type "http://www.onvif.org/ver10/schema":RecordingJobReference.
    tt__RecordingJobReference            JobToken                       1;	///< Required element.
/// Element "JobConfiguration" of type "http://www.onvif.org/ver10/schema":RecordingJobConfiguration.
    tt__RecordingJobConfiguration*       JobConfiguration               1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":ReplayConfiguration is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Configuration parameters for the replay service.
/// </BLOCKQUOTE></PRE>
///
class tt__ReplayConfiguration : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   The RTSP session timeout.
/// </BLOCKQUOTE></PRE>
///
/// Element "SessionTimeout" of type xs:duration.
    xsd__duration                        SessionTimeout                 1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":AnalyticsDeviceEngineConfiguration is a complexType.
///
class tt__AnalyticsDeviceEngineConfiguration : public xsd__anyType
{ public:
/// Vector of tt__EngineConfiguration* of length 1..unbounded.
    std::vector<tt__EngineConfiguration*> EngineConfiguration            1;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":AnalyticsDeviceEngineConfigurationExtension.
    tt__AnalyticsDeviceEngineConfigurationExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":AnalyticsDeviceEngineConfigurationExtension is a complexType.
///
class tt__AnalyticsDeviceEngineConfigurationExtension : public xsd__anyType
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
};

/// @brief "http://www.onvif.org/ver10/schema":EngineConfiguration is a complexType.
///
class tt__EngineConfiguration : public xsd__anyType
{ public:
/// Element "VideoAnalyticsConfiguration" of type "http://www.onvif.org/ver10/schema":VideoAnalyticsConfiguration.
    tt__VideoAnalyticsConfiguration*     VideoAnalyticsConfiguration    1;	///< Required element.
/// Element "AnalyticsEngineInputInfo" of type "http://www.onvif.org/ver10/schema":AnalyticsEngineInputInfo.
    tt__AnalyticsEngineInputInfo*        AnalyticsEngineInputInfo       1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":AnalyticsEngineInputInfo is a complexType.
///
class tt__AnalyticsEngineInputInfo : public xsd__anyType
{ public:
/// Element "InputInfo" of type "http://www.onvif.org/ver10/schema":Config.
    tt__Config*                          InputInfo                      0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":AnalyticsEngineInputInfoExtension.
    tt__AnalyticsEngineInputInfoExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":AnalyticsEngineInputInfoExtension is a complexType.
///
class tt__AnalyticsEngineInputInfoExtension : public xsd__anyType
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
};

/// @brief "http://www.onvif.org/ver10/schema":SourceIdentification is a complexType.
///
class tt__SourceIdentification : public xsd__anyType
{ public:
/// Element "Name" of type xs:string.
    std::string                          Name                           1;	///< Required element.
/// Vector of tt__ReferenceToken of length 1..unbounded.
    std::vector<tt__ReferenceToken     > Token                          1;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":SourceIdentificationExtension.
    tt__SourceIdentificationExtension*   Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":SourceIdentificationExtension is a complexType.
///
class tt__SourceIdentificationExtension : public xsd__anyType
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
};

/// @brief "http://www.onvif.org/ver10/schema":MetadataInput is a complexType.
///
class tt__MetadataInput : public xsd__anyType
{ public:
/// Vector of tt__Config* of length 0..unbounded.
    std::vector<tt__Config*            > MetadataConfig                 0;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":MetadataInputExtension.
    tt__MetadataInputExtension*          Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":MetadataInputExtension is a complexType.
///
class tt__MetadataInputExtension : public xsd__anyType
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
};

/// @brief "http://www.onvif.org/ver10/schema":AnalyticsStateInformation is a complexType.
///
class tt__AnalyticsStateInformation : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Token of the control object whose status is requested.
/// </BLOCKQUOTE></PRE>
///
/// Element "AnalyticsEngineControlToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   AnalyticsEngineControlToken    1;	///< Required element.
/// Element "State" of type "http://www.onvif.org/ver10/schema":AnalyticsState.
    tt__AnalyticsState*                  State                          1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":AnalyticsState is a complexType.
///
class tt__AnalyticsState : public xsd__anyType
{ public:
/// Element "Error" of type xs:string.
    std::string*                         Error                          0;	///< Optional element.
/// Element "State" of type xs:string.
    std::string                          State                          1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":ActionEngineEventPayload is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Action Engine Event Payload data structure contains the information about the ONVIF command invocations. Since this event could be generated by other or proprietary actions, the command invocation specific fields are defined as optional and additional extension mechanism is provided for future or additional action definitions.
/// </BLOCKQUOTE></PRE>
///
class tt__ActionEngineEventPayload : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Request Message
/// </BLOCKQUOTE></PRE>
///
/// Element "RequestInfo" of type SOAP-ENV:Envelope.
    SOAP_ENV__Envelope*                  RequestInfo                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Response Message
/// </BLOCKQUOTE></PRE>
///
/// Element "ResponseInfo" of type SOAP-ENV:Envelope.
    SOAP_ENV__Envelope*                  ResponseInfo                   0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Fault Message
/// </BLOCKQUOTE></PRE>
///
/// Element "Fault" of type SOAP-ENV:Fault.
    struct SOAP_ENV__Fault*              Fault                          0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":ActionEngineEventPayloadExtension.
    tt__ActionEngineEventPayloadExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":ActionEngineEventPayloadExtension is a complexType.
///
class tt__ActionEngineEventPayloadExtension : public xsd__anyType
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":AudioClassCandidate is a complexType.
///
class tt__AudioClassCandidate : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicates audio class label
/// </BLOCKQUOTE></PRE>
///
/// Element "Type" of type "http://www.onvif.org/ver10/schema":AudioClassType.
    tt__AudioClassType                   Type                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A likelihood/probability that the corresponding audio event belongs to this class. The sum of the likelihoods shall NOT exceed 1
/// </BLOCKQUOTE></PRE>
///
/// Element "Likelihood" of type xs:float.
    float                                Likelihood                     1;	///< Required element.
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":AudioClassDescriptor is a complexType.
///
class tt__AudioClassDescriptor : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Array of audio class label and class probability
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__AudioClassCandidate* of length 0..unbounded.
    std::vector<tt__AudioClassCandidate*> ClassCandidate                 0;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":AudioClassDescriptorExtension.
    tt__AudioClassDescriptorExtension*   Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":AudioClassDescriptorExtension is a complexType.
///
class tt__AudioClassDescriptorExtension : public xsd__anyType
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":ActiveConnection is a complexType.
///
class tt__ActiveConnection : public xsd__anyType
{ public:
/// Element "CurrentBitrate" of type xs:float.
    float                                CurrentBitrate                 1;	///< Required element.
/// Element "CurrentFps" of type xs:float.
    float                                CurrentFps                     1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":ProfileStatus is a complexType.
///
class tt__ProfileStatus : public xsd__anyType
{ public:
/// Vector of tt__ActiveConnection* of length 0..unbounded.
    std::vector<tt__ActiveConnection*  > ActiveConnections              0;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":ProfileStatusExtension.
    tt__ProfileStatusExtension*          Extension                      0;	///< Optional element.
};

/// @brief "http://www.onvif.org/ver10/schema":ProfileStatusExtension is a complexType.
///
class tt__ProfileStatusExtension : public xsd__anyType
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":OSDPosConfiguration is a complexType.
///
class tt__OSDPosConfiguration : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   For OSD position type, following are the pre-defined: <ul><li>UpperLeft</li>
///   <li>UpperRight</li>
///   <li>LowerLeft</li>
///   <li>LowerRight</li>
///   <li>Custom</li></ul>
/// </BLOCKQUOTE></PRE>
///
/// Element "Type" of type xs:string.
    std::string                          Type                           1;	///< Required element.
/// Element "Pos" of type "http://www.onvif.org/ver10/schema":Vector.
    tt__Vector*                          Pos                            0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":OSDPosConfigurationExtension.
    tt__OSDPosConfigurationExtension*    Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":OSDPosConfigurationExtension is a complexType.
///
class tt__OSDPosConfigurationExtension : public xsd__anyType
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":OSDColor is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   The value range of "Transparent" could be defined by vendors only should follow this rule: the minimum value means non-transparent and the maximum value maens fully transparent.
/// </BLOCKQUOTE></PRE>
///
class tt__OSDColor : public xsd__anyType
{ public:
/// Element "Color" of type "http://www.onvif.org/ver10/schema":Color.
    tt__Color*                           Color                          1;	///< Required element.
/// Attribute "Transparent" of type xs:int.
  @ int*                                 Transparent                    0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":OSDTextConfiguration is a complexType.
///
class tt__OSDTextConfiguration : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   The following OSD Text Type are defined:<ul>
///   <li>Plain - The Plain type means the OSD is shown as a text string which defined in the "PlainText" item.</li>
///   <li>Date - The Date type means the OSD is shown as a date, format of which should be present in the "DateFormat" item.</li>
///   <li>Time - The Time type means the OSD is shown as a time, format of which should be present in the "TimeFormat" item.</li>
///   <li>DateAndTime - The DateAndTime type means the OSD is shown as date and time, format of which should be present in the "DateFormat" and the "TimeFormat" item.</li>
///   </ul>
/// </BLOCKQUOTE></PRE>
///
/// Element "Type" of type xs:string.
    std::string                          Type                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of supported OSD date formats. This element shall be present when the value of Type field has Date or DateAndTime. The following DateFormat are defined:<ul>
///   <li>M/d/yyyy - e.g. 3/6/2013</li>
///   <li>MM/dd/yyyy - e.g. 03/06/2013</li>
///   <li>dd/MM/yyyy - e.g. 06/03/2013</li>
///   <li>yyyy/MM/dd - e.g. 2013/03/06</li>
///   <li>yyyy-MM-dd - e.g. 2013-06-03</li>
///   <li>dddd, MMMM dd, yyyy - e.g. Wednesday, March 06, 2013</li>
///   <li>MMMM dd, yyyy - e.g. March 06, 2013</li>
///   <li>dd MMMM, yyyy - e.g. 06 March, 2013</li>
///   </ul>
/// </BLOCKQUOTE></PRE>
///
/// Element "DateFormat" of type xs:string.
    std::string*                         DateFormat                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   List of supported OSD time formats. This element shall be present when the value of Type field has Time or DateAndTime. The following TimeFormat are defined:<ul>
///   <li>h:mm:ss tt - e.g. 2:14:21 PM</li>
///   <li>hh:mm:ss tt - e.g. 02:14:21 PM</li>
///   <li>H:mm:ss - e.g. 14:14:21</li>
///   <li>HH:mm:ss - e.g. 14:14:21</li>
///   </ul>
/// </BLOCKQUOTE></PRE>
///
/// Element "TimeFormat" of type xs:string.
    std::string*                         TimeFormat                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Font size of the text in pt.
/// </BLOCKQUOTE></PRE>
///
/// Element "FontSize" of type xs:int.
    int*                                 FontSize                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Font color of the text.
/// </BLOCKQUOTE></PRE>
///
/// Element "FontColor" of type "http://www.onvif.org/ver10/schema":OSDColor.
    tt__OSDColor*                        FontColor                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Background color of the text.
/// </BLOCKQUOTE></PRE>
///
/// Element "BackgroundColor" of type "http://www.onvif.org/ver10/schema":OSDColor.
    tt__OSDColor*                        BackgroundColor                0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The content of text to be displayed.
/// </BLOCKQUOTE></PRE>
///
/// Element "PlainText" of type xs:string.
    std::string*                         PlainText                      0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":OSDTextConfigurationExtension.
    tt__OSDTextConfigurationExtension*   Extension                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   This flag is applicable for Type Plain and defaults to true. When set to false the PlainText content will not be persistent across device reboots.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "IsPersistentText" of type xs:boolean.
  @ bool*                                IsPersistentText               0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":OSDTextConfigurationExtension is a complexType.
///
class tt__OSDTextConfigurationExtension : public xsd__anyType
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":OSDImgConfiguration is a complexType.
///
class tt__OSDImgConfiguration : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   The URI of the image which to be displayed.
/// </BLOCKQUOTE></PRE>
///
/// Element "ImgPath" of type xs:anyURI.
    xsd__anyURI                          ImgPath                        1;	///< Required element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":OSDImgConfigurationExtension.
    tt__OSDImgConfigurationExtension*    Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":OSDImgConfigurationExtension is a complexType.
///
class tt__OSDImgConfigurationExtension : public xsd__anyType
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":ColorspaceRange is a complexType.
///
class tt__ColorspaceRange : public xsd__anyType
{ public:
/// Element "X" of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      X                              1;	///< Required element.
/// Element "Y" of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      Y                              1;	///< Required element.
/// Element "Z" of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      Z                              1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Acceptable values are the same as in tt:Color.
/// </BLOCKQUOTE></PRE>
///
/// Element "Colorspace" of type xs:anyURI.
    xsd__anyURI                          Colorspace                     1;	///< Required element.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":ColorOptions is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Describe the colors supported. Either list each color or define the range of color values.
/// </BLOCKQUOTE></PRE>
///
class tt__ColorOptions : public xsd__anyType
{ public:
//  BEGIN CHOICE <xs:choice>
  $ int                                  __union_ColorOptions          ;	///< Union _tt__union_ColorOptions selector: set to SOAP_UNION__tt__union_ColorOptions_<fieldname>
/// Union for choice in tt__ColorOptions.
    union _tt__union_ColorOptions
    {
/// <PRE><BLOCKQUOTE>
///   List the supported color.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__Color* of length 1..unbounded.
    std::vector<tt__Color*            > *ColorList                     ;	///< Choice of element (one of multiple choices).
/// <PRE><BLOCKQUOTE>
///   Define the range of color supported.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__ColorspaceRange* of length 1..unbounded.
    std::vector<tt__ColorspaceRange*  > *ColorspaceRange               ;	///< Choice of element (one of multiple choices).
    }                                    union_ColorOptions            ;
//  END OF CHOICE
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":OSDColorOptions is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Describe the option of the color and its transparency.
/// </BLOCKQUOTE></PRE>
///
class tt__OSDColorOptions : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Optional list of supported colors.
/// </BLOCKQUOTE></PRE>
///
/// Element "Color" of type "http://www.onvif.org/ver10/schema":ColorOptions.
    tt__ColorOptions*                    Color                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Range of the transparent level. Larger means more tranparent.
/// </BLOCKQUOTE></PRE>
///
/// Element "Transparent" of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        Transparent                    0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":OSDColorOptionsExtension.
    tt__OSDColorOptionsExtension*        Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":OSDColorOptionsExtension is a complexType.
///
class tt__OSDColorOptionsExtension : public xsd__anyType
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":OSDTextOptions is a complexType.
///
class tt__OSDTextOptions : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   List of supported OSD text type. When a device indicates the supported number relating to Text type in MaximumNumberOfOSDs, the type shall be presented.
/// </BLOCKQUOTE></PRE>
///
/// Vector of std::string of length 1..unbounded.
    std::vector<std::string            > Type                           1;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Range of the font size value.
/// </BLOCKQUOTE></PRE>
///
/// Element "FontSizeRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        FontSizeRange                  0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   List of supported date format.
/// </BLOCKQUOTE></PRE>
///
/// Vector of std::string of length 0..unbounded.
    std::vector<std::string            > DateFormat                     0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   List of supported time format.
/// </BLOCKQUOTE></PRE>
///
/// Vector of std::string of length 0..unbounded.
    std::vector<std::string            > TimeFormat                     0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   List of supported font color.
/// </BLOCKQUOTE></PRE>
///
/// Element "FontColor" of type "http://www.onvif.org/ver10/schema":OSDColorOptions.
    tt__OSDColorOptions*                 FontColor                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   List of supported background color.
/// </BLOCKQUOTE></PRE>
///
/// Element "BackgroundColor" of type "http://www.onvif.org/ver10/schema":OSDColorOptions.
    tt__OSDColorOptions*                 BackgroundColor                0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":OSDTextOptionsExtension.
    tt__OSDTextOptionsExtension*         Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":OSDTextOptionsExtension is a complexType.
///
class tt__OSDTextOptionsExtension : public xsd__anyType
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":OSDImgOptions is a complexType.
///
class tt__OSDImgOptions : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   List of available image URIs.
/// </BLOCKQUOTE></PRE>
///
/// Vector of xsd__anyURI of length 1..unbounded.
    std::vector<xsd__anyURI            > ImagePath                      1;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":OSDImgOptionsExtension.
    tt__OSDImgOptionsExtension*          Extension                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   List of supported image MIME types, such as "image/png".
/// </BLOCKQUOTE></PRE>
///
/// Attribute "FormatsSupported" of type "http://www.onvif.org/ver10/schema":StringAttrList.
  @ tt__StringAttrList*                  FormatsSupported               0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   The maximum size (in bytes) of the image that can be uploaded.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "MaxSize" of type xs:int.
  @ int*                                 MaxSize                        0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   The maximum width (in pixels) of the image that can be uploaded.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "MaxWidth" of type xs:int.
  @ int*                                 MaxWidth                       0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   The maximum height (in pixels) of the image that can be uploaded.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "MaxHeight" of type xs:int.
  @ int*                                 MaxHeight                      0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":OSDImgOptionsExtension is a complexType.
///
class tt__OSDImgOptionsExtension : public xsd__anyType
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":OSDConfigurationExtension is a complexType.
///
class tt__OSDConfigurationExtension : public xsd__anyType
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":MaximumNumberOfOSDs is a complexType.
///
class tt__MaximumNumberOfOSDs : public xsd__anyType
{ public:
/// Attribute "Total" of type xs:int.
  @ int                                  Total                          1;	///< Required attribute.
/// Attribute "Image" of type xs:int.
  @ int*                                 Image                          0;	///< Optional attribute.
/// Attribute "PlainText" of type xs:int.
  @ int*                                 PlainText                      0;	///< Optional attribute.
/// Attribute "Date" of type xs:int.
  @ int*                                 Date                           0;	///< Optional attribute.
/// Attribute "Time" of type xs:int.
  @ int*                                 Time                           0;	///< Optional attribute.
/// Attribute "DateAndTime" of type xs:int.
  @ int*                                 DateAndTime                    0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":OSDConfigurationOptions is a complexType.
///
class tt__OSDConfigurationOptions : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   The maximum number of OSD configurations supported for the specified video source configuration. If the configuration does not support OSDs, this value shall be zero and the Type and PositionOption elements are ignored. If a device limits the number of instances by OSDType, it shall indicate the supported number for each type via the related attribute.
/// </BLOCKQUOTE></PRE>
///
/// Element "MaximumNumberOfOSDs" of type "http://www.onvif.org/ver10/schema":MaximumNumberOfOSDs.
    tt__MaximumNumberOfOSDs*             MaximumNumberOfOSDs            1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List supported type of OSD configuration. When a device indicates the supported number for each types in MaximumNumberOfOSDs, related type shall be presented. A device shall return Option element relating to listed type.
/// </BLOCKQUOTE></PRE>
///
/// Vector of enum tt__OSDType of length 1..unbounded.
    std::vector<enum tt__OSDType       > Type                           1;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   List available OSD position type. Following are the pre-defined:<ul><li>UpperLeft</li>
///   <li>UpperRight</li>
///   <li>LowerLeft</li>
///   <li>LowerRight</li>
///   <li>Custom</li></ul>
/// </BLOCKQUOTE></PRE>
///
/// Vector of std::string of length 1..unbounded.
    std::vector<std::string            > PositionOption                 1;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Option of the OSD text configuration. This element shall be returned if the device is signaling the support for Text.
/// </BLOCKQUOTE></PRE>
///
/// Element "TextOption" of type "http://www.onvif.org/ver10/schema":OSDTextOptions.
    tt__OSDTextOptions*                  TextOption                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Option of the OSD image configuration. This element shall be returned if the device is signaling the support for Image.
/// </BLOCKQUOTE></PRE>
///
/// Element "ImageOption" of type "http://www.onvif.org/ver10/schema":OSDImgOptions.
    tt__OSDImgOptions*                   ImageOption                    0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":OSDConfigurationOptionsExtension.
    tt__OSDConfigurationOptionsExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":OSDConfigurationOptionsExtension is a complexType.
///
class tt__OSDConfigurationOptionsExtension : public xsd__anyType
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":FileProgress is a complexType.
///
class tt__FileProgress : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Exported file name
/// </BLOCKQUOTE></PRE>
///
/// Element "FileName" of type xs:string.
    std::string                          FileName                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Normalized percentage completion for uploading the exported file
/// </BLOCKQUOTE></PRE>
///
/// Element "Progress" of type xs:float.
    float                                Progress                       1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":ArrayOfFileProgress is a complexType.
///
class tt__ArrayOfFileProgress : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Exported file name and export progress information
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__FileProgress* of length 0..unbounded.
    std::vector<tt__FileProgress*      > FileProgress                   0;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":ArrayOfFileProgressExtension.
    tt__ArrayOfFileProgressExtension*    Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":ArrayOfFileProgressExtension is a complexType.
///
class tt__ArrayOfFileProgressExtension : public xsd__anyType
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":StorageReferencePath is a complexType.
///
class tt__StorageReferencePath : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   identifier of an existing Storage Configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "StorageToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   StorageToken                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   gives the relative directory path on the storage
/// </BLOCKQUOTE></PRE>
///
/// Element "RelativePath" of type xs:string.
    std::string*                         RelativePath                   0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":StorageReferencePathExtension.
    tt__StorageReferencePathExtension*   Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":StorageReferencePathExtension is a complexType.
///
class tt__StorageReferencePathExtension : public xsd__anyType
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":PolygonOptions is a complexType.
///
class tt__PolygonOptions : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   True if the device supports defining a region only using Rectangle.
///   The rectangle points are still passed using a Polygon element if the device does not support polygon regions. In this case, the points provided in the Polygon element shall represent a rectangle.
/// </BLOCKQUOTE></PRE>
///
/// Element "RectangleOnly" of type xs:boolean.
    bool*                                RectangleOnly                  0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Provides the minimum and maximum number of points that can be defined in the Polygon.
///   If RectangleOnly is not set to true, this parameter is required.
/// </BLOCKQUOTE></PRE>
///
/// Element "VertexLimits" of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        VertexLimits                   0;	///< Optional element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":StringItems
/// @brief "http://www.onvif.org/ver10/schema":StringItems is a complexType.
///
class _tt__StringItems
{ public:
/// Vector of std::string of length 1..unbounded.
    std::vector<std::string            > Item                           1;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":Message
/// @brief "http://www.onvif.org/ver10/schema":Message is a complexType.
///
class _tt__Message
{ public:
/// <PRE><BLOCKQUOTE>
///   Token value pairs that triggered this message. Typically only one item is present.
/// </BLOCKQUOTE></PRE>
///
/// Element "Source" of type "http://www.onvif.org/ver10/schema":ItemList.
    tt__ItemList*                        Source                         0;	///< Optional element.
/// Element "Key" of type "http://www.onvif.org/ver10/schema":ItemList.
    tt__ItemList*                        Key                            0;	///< Optional element.
/// Element "Data" of type "http://www.onvif.org/ver10/schema":ItemList.
    tt__ItemList*                        Data                           0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":MessageExtension.
    tt__MessageExtension*                Extension                      0;	///< Optional element.
/// Attribute "UtcTime" of type xs:dateTime.
  @ xsd__dateTime                        UtcTime                        1;	///< Required attribute.
/// Attribute "PropertyOperation" of type "http://www.onvif.org/ver10/schema":PropertyOperation.
  @ enum tt__PropertyOperation*          PropertyOperation              0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.onvif.org/ver10/media/wsdl                                    *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver10/media/wsdl":Capabilities is a complexType.
///
class trt__Capabilities : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Media profile capabilities.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileCapabilities" of type "http://www.onvif.org/ver10/media/wsdl":ProfileCapabilities.
    trt__ProfileCapabilities*            ProfileCapabilities            1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Streaming capabilities.
/// </BLOCKQUOTE></PRE>
///
/// Element "StreamingCapabilities" of type "http://www.onvif.org/ver10/media/wsdl":StreamingCapabilities.
    trt__StreamingCapabilities*          StreamingCapabilities          1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <PRE><BLOCKQUOTE>
///   Indicates if GetSnapshotUri is supported.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "SnapshotUri" of type xs:boolean.
  @ bool*                                SnapshotUri                    0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not Rotation feature is supported.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "Rotation" of type xs:boolean.
  @ bool*                                Rotation                       0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates the support for changing video source mode.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "VideoSourceMode" of type xs:boolean.
  @ bool*                                VideoSourceMode                0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates if OSD is supported.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "OSD" of type xs:boolean.
  @ bool*                                OSD                            0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates the support for the Efficient XML Interchange (EXI) binary XML format.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "EXICompression" of type xs:boolean.
  @ bool*                                EXICompression                 0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/media/wsdl":ProfileCapabilities is a complexType.
///
class trt__ProfileCapabilities : public xsd__anyType
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <PRE><BLOCKQUOTE>
///   Maximum number of profiles supported.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "MaximumNumberOfProfiles" of type xs:int.
  @ int*                                 MaximumNumberOfProfiles        0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/media/wsdl":StreamingCapabilities is a complexType.
///
class trt__StreamingCapabilities : public xsd__anyType
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <PRE><BLOCKQUOTE>
///   Indicates support for RTP multicast.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "RTPMulticast" of type xs:boolean.
  @ bool*                                RTPMulticast                   0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for RTP over TCP.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "RTP_TCP" of type xs:boolean.
  @ bool*                                RTP_USCORETCP                  0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for RTP/RTSP/TCP.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "RTP_RTSP_TCP" of type xs:boolean.
  @ bool*                                RTP_USCORERTSP_USCORETCP       0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for non aggregate RTSP control.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "NonAggregateControl" of type xs:boolean.
  @ bool*                                NonAggregateControl            0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates the device does not support live media streaming via RTSP.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "NoRTSPStreaming" of type xs:boolean.
  @ bool*                                NoRTSPStreaming                0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/media/wsdl":VideoSourceMode is a complexType.
///
class trt__VideoSourceMode : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Max frame rate in frames per second for this video source mode.
/// </BLOCKQUOTE></PRE>
///
/// Element "MaxFramerate" of type xs:float.
    float                                MaxFramerate                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Max horizontal and vertical resolution for this video source mode.
/// </BLOCKQUOTE></PRE>
///
/// Element "MaxResolution" of type "http://www.onvif.org/ver10/schema":VideoResolution.
    tt__VideoResolution*                 MaxResolution                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indication which encodings are supported for this video source. The list may contain one or more enumeration values of tt:VideoEncoding.
/// </BLOCKQUOTE></PRE>
///
/// Element "Encodings" of type "http://www.onvif.org/ver10/media/wsdl":EncodingTypes.
    trt__EncodingTypes                   Encodings                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   After setting the mode if a device starts to reboot this value is true. If a device change the mode without rebooting this value is false. If true, configured parameters may not be guaranteed by the device after rebooting.
/// </BLOCKQUOTE></PRE>
///
/// Element "Reboot" of type xs:boolean.
    bool                                 Reboot                         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Informative description of this video source mode. This field should be described in English.
/// </BLOCKQUOTE></PRE>
///
/// Element "Description" of type "http://www.onvif.org/ver10/schema":Description.
    tt__Description*                     Description                    0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/media/wsdl":VideoSourceModeExtension.
    trt__VideoSourceModeExtension*       Extension                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Indicate token for video source mode.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   token                          1;	///< Required attribute.
/// <PRE><BLOCKQUOTE>
///   Indication of whether this mode is active. If active this value is true. In case of non-indication, it means as false. The value of true shall be had by only one video source mode.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "Enabled" of type xs:boolean.
  @ bool*                                Enabled                        0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/media/wsdl":VideoSourceModeExtension is a complexType.
///
class trt__VideoSourceModeExtension : public xsd__anyType
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetServiceCapabilities
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetServiceCapabilities is a complexType.
///
class _trt__GetServiceCapabilities
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetServiceCapabilitiesResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetServiceCapabilitiesResponse is a complexType.
///
class _trt__GetServiceCapabilitiesResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   The capabilities for the media service is returned in the Capabilities element.
/// </BLOCKQUOTE></PRE>
///
/// Element "Capabilities" of type "http://www.onvif.org/ver10/media/wsdl":Capabilities.
    trt__Capabilities*                   Capabilities                   1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoSources
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetVideoSources is a complexType.
///
class _trt__GetVideoSources
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoSourcesResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetVideoSourcesResponse is a complexType.
///
class _trt__GetVideoSourcesResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   List of existing Video Sources
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__VideoSource* of length 0..unbounded.
    std::vector<tt__VideoSource*       > VideoSources                   0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioSources
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioSources is a complexType.
///
class _trt__GetAudioSources
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioSourcesResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioSourcesResponse is a complexType.
///
class _trt__GetAudioSourcesResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   List of existing Audio Sources
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__AudioSource* of length 0..unbounded.
    std::vector<tt__AudioSource*       > AudioSources                   0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputs
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputs is a complexType.
///
class _trt__GetAudioOutputs
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputsResponse is a complexType.
///
class _trt__GetAudioOutputsResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   List of existing Audio Outputs
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__AudioOutput* of length 0..unbounded.
    std::vector<tt__AudioOutput*       > AudioOutputs                   0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":CreateProfile
/// @brief "http://www.onvif.org/ver10/media/wsdl":CreateProfile is a complexType.
///
class _trt__CreateProfile
{ public:
/// <PRE><BLOCKQUOTE>
///   friendly name of the profile to be created
/// </BLOCKQUOTE></PRE>
///
/// Element "Name" of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional token, specifying the unique identifier of the new profile. <br/>A device supports at least a token length of 12 characters and characters "A-Z" | "a-z" | "0-9" | "-.".
/// </BLOCKQUOTE></PRE>
///
/// Element "Token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken*                  Token                          0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":CreateProfileResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":CreateProfileResponse is a complexType.
///
class _trt__CreateProfileResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   returns the new created profile
/// </BLOCKQUOTE></PRE>
///
/// Element "Profile" of type "http://www.onvif.org/ver10/schema":Profile.
    tt__Profile*                         Profile                        1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetProfile
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetProfile is a complexType.
///
class _trt__GetProfile
{ public:
/// <PRE><BLOCKQUOTE>
///   this command requests a specific profile
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetProfileResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetProfileResponse is a complexType.
///
class _trt__GetProfileResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   returns the requested media profile
/// </BLOCKQUOTE></PRE>
///
/// Element "Profile" of type "http://www.onvif.org/ver10/schema":Profile.
    tt__Profile*                         Profile                        1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetProfiles
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetProfiles is a complexType.
///
class _trt__GetProfiles
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetProfilesResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetProfilesResponse is a complexType.
///
class _trt__GetProfilesResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   lists all profiles that exist in the media service
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__Profile* of length 0..unbounded.
    std::vector<tt__Profile*           > Profiles                       0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddVideoEncoderConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":AddVideoEncoderConfiguration is a complexType.
///
class _trt__AddVideoEncoderConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Reference to the profile where the configuration should be added
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Contains a reference to the VideoEncoderConfiguration to add
/// </BLOCKQUOTE></PRE>
///
/// Element "ConfigurationToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddVideoEncoderConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":AddVideoEncoderConfigurationResponse is a complexType.
///
class _trt__AddVideoEncoderConfigurationResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveVideoEncoderConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":RemoveVideoEncoderConfiguration is a complexType.
///
class _trt__RemoveVideoEncoderConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains a reference to the media profile from which the
///   VideoEncoderConfiguration shall be removed.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveVideoEncoderConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":RemoveVideoEncoderConfigurationResponse is a complexType.
///
class _trt__RemoveVideoEncoderConfigurationResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddVideoSourceConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":AddVideoSourceConfiguration is a complexType.
///
class _trt__AddVideoSourceConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Reference to the profile where the configuration should be added
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Contains a reference to the VideoSourceConfiguration to add
/// </BLOCKQUOTE></PRE>
///
/// Element "ConfigurationToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddVideoSourceConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":AddVideoSourceConfigurationResponse is a complexType.
///
class _trt__AddVideoSourceConfigurationResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveVideoSourceConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":RemoveVideoSourceConfiguration is a complexType.
///
class _trt__RemoveVideoSourceConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains a reference to the media profile from which the
///   VideoSourceConfiguration shall be removed.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveVideoSourceConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":RemoveVideoSourceConfigurationResponse is a complexType.
///
class _trt__RemoveVideoSourceConfigurationResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddAudioEncoderConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":AddAudioEncoderConfiguration is a complexType.
///
class _trt__AddAudioEncoderConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Reference to the profile where the configuration should be added
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Contains a reference to the AudioEncoderConfiguration to add
/// </BLOCKQUOTE></PRE>
///
/// Element "ConfigurationToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddAudioEncoderConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":AddAudioEncoderConfigurationResponse is a complexType.
///
class _trt__AddAudioEncoderConfigurationResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveAudioEncoderConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":RemoveAudioEncoderConfiguration is a complexType.
///
class _trt__RemoveAudioEncoderConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains a reference to the media profile from which the
///   AudioEncoderConfiguration shall be removed.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveAudioEncoderConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":RemoveAudioEncoderConfigurationResponse is a complexType.
///
class _trt__RemoveAudioEncoderConfigurationResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddAudioSourceConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":AddAudioSourceConfiguration is a complexType.
///
class _trt__AddAudioSourceConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Reference to the profile where the configuration should be added
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Contains a reference to the AudioSourceConfiguration to add
/// </BLOCKQUOTE></PRE>
///
/// Element "ConfigurationToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddAudioSourceConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":AddAudioSourceConfigurationResponse is a complexType.
///
class _trt__AddAudioSourceConfigurationResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveAudioSourceConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":RemoveAudioSourceConfiguration is a complexType.
///
class _trt__RemoveAudioSourceConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains a reference to the media profile from which the
///   AudioSourceConfiguration shall be removed.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveAudioSourceConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":RemoveAudioSourceConfigurationResponse is a complexType.
///
class _trt__RemoveAudioSourceConfigurationResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddPTZConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":AddPTZConfiguration is a complexType.
///
class _trt__AddPTZConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Reference to the profile where the configuration should be added
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Contains a reference to the PTZConfiguration to add
/// </BLOCKQUOTE></PRE>
///
/// Element "ConfigurationToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddPTZConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":AddPTZConfigurationResponse is a complexType.
///
class _trt__AddPTZConfigurationResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemovePTZConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":RemovePTZConfiguration is a complexType.
///
class _trt__RemovePTZConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains a reference to the media profile from which the
///   PTZConfiguration shall be removed.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemovePTZConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":RemovePTZConfigurationResponse is a complexType.
///
class _trt__RemovePTZConfigurationResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddVideoAnalyticsConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":AddVideoAnalyticsConfiguration is a complexType.
///
class _trt__AddVideoAnalyticsConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Reference to the profile where the configuration should be added
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Contains a reference to the VideoAnalyticsConfiguration to add
/// </BLOCKQUOTE></PRE>
///
/// Element "ConfigurationToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddVideoAnalyticsConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":AddVideoAnalyticsConfigurationResponse is a complexType.
///
class _trt__AddVideoAnalyticsConfigurationResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveVideoAnalyticsConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":RemoveVideoAnalyticsConfiguration is a complexType.
///
class _trt__RemoveVideoAnalyticsConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains a reference to the media profile from which the
///   VideoAnalyticsConfiguration shall be removed.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveVideoAnalyticsConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":RemoveVideoAnalyticsConfigurationResponse is a complexType.
///
class _trt__RemoveVideoAnalyticsConfigurationResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddMetadataConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":AddMetadataConfiguration is a complexType.
///
class _trt__AddMetadataConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Reference to the profile where the configuration should be added
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Contains a reference to the MetadataConfiguration to add
/// </BLOCKQUOTE></PRE>
///
/// Element "ConfigurationToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddMetadataConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":AddMetadataConfigurationResponse is a complexType.
///
class _trt__AddMetadataConfigurationResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveMetadataConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":RemoveMetadataConfiguration is a complexType.
///
class _trt__RemoveMetadataConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains a reference to the media profile from which the
///   MetadataConfiguration shall be removed.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveMetadataConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":RemoveMetadataConfigurationResponse is a complexType.
///
class _trt__RemoveMetadataConfigurationResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddAudioOutputConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":AddAudioOutputConfiguration is a complexType.
///
class _trt__AddAudioOutputConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Reference to the profile where the configuration should be added
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Contains a reference to the AudioOutputConfiguration to add
/// </BLOCKQUOTE></PRE>
///
/// Element "ConfigurationToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddAudioOutputConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":AddAudioOutputConfigurationResponse is a complexType.
///
class _trt__AddAudioOutputConfigurationResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveAudioOutputConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":RemoveAudioOutputConfiguration is a complexType.
///
class _trt__RemoveAudioOutputConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains a reference to the media profile from which the
///   AudioOutputConfiguration shall be removed.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveAudioOutputConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":RemoveAudioOutputConfigurationResponse is a complexType.
///
class _trt__RemoveAudioOutputConfigurationResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddAudioDecoderConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":AddAudioDecoderConfiguration is a complexType.
///
class _trt__AddAudioDecoderConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   This element contains a reference to the profile where the configuration should be added.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   This element contains a reference to the AudioDecoderConfiguration to add.
/// </BLOCKQUOTE></PRE>
///
/// Element "ConfigurationToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddAudioDecoderConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":AddAudioDecoderConfigurationResponse is a complexType.
///
class _trt__AddAudioDecoderConfigurationResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveAudioDecoderConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":RemoveAudioDecoderConfiguration is a complexType.
///
class _trt__RemoveAudioDecoderConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   This element contains a reference to the media profile from which the AudioDecoderConfiguration shall be removed.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveAudioDecoderConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":RemoveAudioDecoderConfigurationResponse is a complexType.
///
class _trt__RemoveAudioDecoderConfigurationResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":DeleteProfile
/// @brief "http://www.onvif.org/ver10/media/wsdl":DeleteProfile is a complexType.
///
class _trt__DeleteProfile
{ public:
/// <PRE><BLOCKQUOTE>
///   This element contains a reference to the profile that should be deleted.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":DeleteProfileResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":DeleteProfileResponse is a complexType.
///
class _trt__DeleteProfileResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoEncoderConfigurations
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetVideoEncoderConfigurations is a complexType.
///
class _trt__GetVideoEncoderConfigurations
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoEncoderConfigurationsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetVideoEncoderConfigurationsResponse is a complexType.
///
class _trt__GetVideoEncoderConfigurationsResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   This element contains a list of video encoder configurations.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__VideoEncoderConfiguration* of length 0..unbounded.
    std::vector<tt__VideoEncoderConfiguration*> Configurations                 0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceConfigurations
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceConfigurations is a complexType.
///
class _trt__GetVideoSourceConfigurations
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceConfigurationsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceConfigurationsResponse is a complexType.
///
class _trt__GetVideoSourceConfigurationsResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   This element contains a list of video source configurations.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__VideoSourceConfiguration* of length 0..unbounded.
    std::vector<tt__VideoSourceConfiguration*> Configurations                 0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioEncoderConfigurations
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioEncoderConfigurations is a complexType.
///
class _trt__GetAudioEncoderConfigurations
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioEncoderConfigurationsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioEncoderConfigurationsResponse is a complexType.
///
class _trt__GetAudioEncoderConfigurationsResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   This element contains a list of audio encoder configurations.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__AudioEncoderConfiguration* of length 0..unbounded.
    std::vector<tt__AudioEncoderConfiguration*> Configurations                 0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioSourceConfigurations
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioSourceConfigurations is a complexType.
///
class _trt__GetAudioSourceConfigurations
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioSourceConfigurationsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioSourceConfigurationsResponse is a complexType.
///
class _trt__GetAudioSourceConfigurationsResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   This element contains a list of audio source configurations.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__AudioSourceConfiguration* of length 0..unbounded.
    std::vector<tt__AudioSourceConfiguration*> Configurations                 0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoAnalyticsConfigurations
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetVideoAnalyticsConfigurations is a complexType.
///
class _trt__GetVideoAnalyticsConfigurations
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoAnalyticsConfigurationsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetVideoAnalyticsConfigurationsResponse is a complexType.
///
class _trt__GetVideoAnalyticsConfigurationsResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   This element contains a list of VideoAnalytics configurations.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__VideoAnalyticsConfiguration* of length 0..unbounded.
    std::vector<tt__VideoAnalyticsConfiguration*> Configurations                 0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetMetadataConfigurations
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetMetadataConfigurations is a complexType.
///
class _trt__GetMetadataConfigurations
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetMetadataConfigurationsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetMetadataConfigurationsResponse is a complexType.
///
class _trt__GetMetadataConfigurationsResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   This element contains a list of metadata configurations
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__MetadataConfiguration* of length 0..unbounded.
    std::vector<tt__MetadataConfiguration*> Configurations                 0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputConfigurations
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputConfigurations is a complexType.
///
class _trt__GetAudioOutputConfigurations
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputConfigurationsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputConfigurationsResponse is a complexType.
///
class _trt__GetAudioOutputConfigurationsResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   This element contains a list of audio output configurations
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__AudioOutputConfiguration* of length 0..unbounded.
    std::vector<tt__AudioOutputConfiguration*> Configurations                 0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioDecoderConfigurations
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioDecoderConfigurations is a complexType.
///
class _trt__GetAudioDecoderConfigurations
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioDecoderConfigurationsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioDecoderConfigurationsResponse is a complexType.
///
class _trt__GetAudioDecoderConfigurationsResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   This element contains a list of audio decoder configurations
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__AudioDecoderConfiguration* of length 0..unbounded.
    std::vector<tt__AudioDecoderConfiguration*> Configurations                 0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceConfiguration is a complexType.
///
class _trt__GetVideoSourceConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Token of the requested video source configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "ConfigurationToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceConfigurationResponse is a complexType.
///
class _trt__GetVideoSourceConfigurationResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   The requested video source configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "Configuration" of type "http://www.onvif.org/ver10/schema":VideoSourceConfiguration.
    tt__VideoSourceConfiguration*        Configuration                  1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoEncoderConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetVideoEncoderConfiguration is a complexType.
///
class _trt__GetVideoEncoderConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Token of the requested video encoder configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "ConfigurationToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoEncoderConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetVideoEncoderConfigurationResponse is a complexType.
///
class _trt__GetVideoEncoderConfigurationResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   The requested video encoder configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "Configuration" of type "http://www.onvif.org/ver10/schema":VideoEncoderConfiguration.
    tt__VideoEncoderConfiguration*       Configuration                  1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioSourceConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioSourceConfiguration is a complexType.
///
class _trt__GetAudioSourceConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Token of the requested audio source configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "ConfigurationToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioSourceConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioSourceConfigurationResponse is a complexType.
///
class _trt__GetAudioSourceConfigurationResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   The requested audio source configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "Configuration" of type "http://www.onvif.org/ver10/schema":AudioSourceConfiguration.
    tt__AudioSourceConfiguration*        Configuration                  1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioEncoderConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioEncoderConfiguration is a complexType.
///
class _trt__GetAudioEncoderConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Token of the requested audio encoder configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "ConfigurationToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioEncoderConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioEncoderConfigurationResponse is a complexType.
///
class _trt__GetAudioEncoderConfigurationResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   The requested audio encoder configuration
/// </BLOCKQUOTE></PRE>
///
/// Element "Configuration" of type "http://www.onvif.org/ver10/schema":AudioEncoderConfiguration.
    tt__AudioEncoderConfiguration*       Configuration                  1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoAnalyticsConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetVideoAnalyticsConfiguration is a complexType.
///
class _trt__GetVideoAnalyticsConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Token of the requested video analytics configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "ConfigurationToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoAnalyticsConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetVideoAnalyticsConfigurationResponse is a complexType.
///
class _trt__GetVideoAnalyticsConfigurationResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   The requested video analytics configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "Configuration" of type "http://www.onvif.org/ver10/schema":VideoAnalyticsConfiguration.
    tt__VideoAnalyticsConfiguration*     Configuration                  1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetMetadataConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetMetadataConfiguration is a complexType.
///
class _trt__GetMetadataConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Token of the requested metadata configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "ConfigurationToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetMetadataConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetMetadataConfigurationResponse is a complexType.
///
class _trt__GetMetadataConfigurationResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   The requested metadata configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "Configuration" of type "http://www.onvif.org/ver10/schema":MetadataConfiguration.
    tt__MetadataConfiguration*           Configuration                  1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputConfiguration is a complexType.
///
class _trt__GetAudioOutputConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Token of the requested audio output configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "ConfigurationToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputConfigurationResponse is a complexType.
///
class _trt__GetAudioOutputConfigurationResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   The requested audio output configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "Configuration" of type "http://www.onvif.org/ver10/schema":AudioOutputConfiguration.
    tt__AudioOutputConfiguration*        Configuration                  1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioDecoderConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioDecoderConfiguration is a complexType.
///
class _trt__GetAudioDecoderConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Token of the requested audio decoder configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "ConfigurationToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioDecoderConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioDecoderConfigurationResponse is a complexType.
///
class _trt__GetAudioDecoderConfigurationResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   The requested audio decoder configuration
/// </BLOCKQUOTE></PRE>
///
/// Element "Configuration" of type "http://www.onvif.org/ver10/schema":AudioDecoderConfiguration.
    tt__AudioDecoderConfiguration*       Configuration                  1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleVideoEncoderConfigurations
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetCompatibleVideoEncoderConfigurations is a complexType.
///
class _trt__GetCompatibleVideoEncoderConfigurations
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains the token of an existing media profile the configurations shall be compatible with.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleVideoEncoderConfigurationsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetCompatibleVideoEncoderConfigurationsResponse is a complexType.
///
class _trt__GetCompatibleVideoEncoderConfigurationsResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains a list of video encoder configurations that are compatible with the specified media profile.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__VideoEncoderConfiguration* of length 0..unbounded.
    std::vector<tt__VideoEncoderConfiguration*> Configurations                 0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleVideoSourceConfigurations
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetCompatibleVideoSourceConfigurations is a complexType.
///
class _trt__GetCompatibleVideoSourceConfigurations
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains the token of an existing media profile the configurations shall be compatible with.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleVideoSourceConfigurationsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetCompatibleVideoSourceConfigurationsResponse is a complexType.
///
class _trt__GetCompatibleVideoSourceConfigurationsResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains a list of video source configurations that are compatible with the specified media profile.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__VideoSourceConfiguration* of length 0..unbounded.
    std::vector<tt__VideoSourceConfiguration*> Configurations                 0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioEncoderConfigurations
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioEncoderConfigurations is a complexType.
///
class _trt__GetCompatibleAudioEncoderConfigurations
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains the token of an existing media profile the configurations shall be compatible with.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioEncoderConfigurationsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioEncoderConfigurationsResponse is a complexType.
///
class _trt__GetCompatibleAudioEncoderConfigurationsResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains a list of audio encoder configurations that are compatible with the specified media profile.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__AudioEncoderConfiguration* of length 0..unbounded.
    std::vector<tt__AudioEncoderConfiguration*> Configurations                 0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioSourceConfigurations
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioSourceConfigurations is a complexType.
///
class _trt__GetCompatibleAudioSourceConfigurations
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains the token of an existing media profile the configurations shall be compatible with.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioSourceConfigurationsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioSourceConfigurationsResponse is a complexType.
///
class _trt__GetCompatibleAudioSourceConfigurationsResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains a list of audio source configurations that are compatible with the specified media profile.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__AudioSourceConfiguration* of length 0..unbounded.
    std::vector<tt__AudioSourceConfiguration*> Configurations                 0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleVideoAnalyticsConfigurations
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetCompatibleVideoAnalyticsConfigurations is a complexType.
///
class _trt__GetCompatibleVideoAnalyticsConfigurations
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains the token of an existing media profile the configurations shall be compatible with.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleVideoAnalyticsConfigurationsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetCompatibleVideoAnalyticsConfigurationsResponse is a complexType.
///
class _trt__GetCompatibleVideoAnalyticsConfigurationsResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains a list of video analytics configurations that are compatible with the specified media profile.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__VideoAnalyticsConfiguration* of length 0..unbounded.
    std::vector<tt__VideoAnalyticsConfiguration*> Configurations                 0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleMetadataConfigurations
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetCompatibleMetadataConfigurations is a complexType.
///
class _trt__GetCompatibleMetadataConfigurations
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains the token of an existing media profile the configurations shall be compatible with.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleMetadataConfigurationsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetCompatibleMetadataConfigurationsResponse is a complexType.
///
class _trt__GetCompatibleMetadataConfigurationsResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains a list of metadata configurations that are compatible with the specified media profile.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__MetadataConfiguration* of length 0..unbounded.
    std::vector<tt__MetadataConfiguration*> Configurations                 0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioOutputConfigurations
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioOutputConfigurations is a complexType.
///
class _trt__GetCompatibleAudioOutputConfigurations
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains the token of an existing media profile the configurations shall be compatible with.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioOutputConfigurationsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioOutputConfigurationsResponse is a complexType.
///
class _trt__GetCompatibleAudioOutputConfigurationsResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains a list of audio output configurations that are compatible with the specified media profile.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__AudioOutputConfiguration* of length 0..unbounded.
    std::vector<tt__AudioOutputConfiguration*> Configurations                 0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioDecoderConfigurations
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioDecoderConfigurations is a complexType.
///
class _trt__GetCompatibleAudioDecoderConfigurations
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains the token of an existing media profile the configurations shall be compatible with.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioDecoderConfigurationsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioDecoderConfigurationsResponse is a complexType.
///
class _trt__GetCompatibleAudioDecoderConfigurationsResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains a list of audio decoder configurations that are compatible with the specified media profile.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__AudioDecoderConfiguration* of length 0..unbounded.
    std::vector<tt__AudioDecoderConfiguration*> Configurations                 0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetVideoEncoderConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetVideoEncoderConfiguration is a complexType.
///
class _trt__SetVideoEncoderConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains the modified video encoder configuration. The configuration shall exist in the device.
/// </BLOCKQUOTE></PRE>
///
/// Element "Configuration" of type "http://www.onvif.org/ver10/schema":VideoEncoderConfiguration.
    tt__VideoEncoderConfiguration*       Configuration                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The ForcePersistence element is obsolete and should always be assumed to be true.
/// </BLOCKQUOTE></PRE>
///
/// Element "ForcePersistence" of type xs:boolean.
    bool                                 ForcePersistence               1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetVideoEncoderConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetVideoEncoderConfigurationResponse is a complexType.
///
class _trt__SetVideoEncoderConfigurationResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetVideoSourceConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetVideoSourceConfiguration is a complexType.
///
class _trt__SetVideoSourceConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains the modified video source configuration. The configuration shall exist in the device.
/// </BLOCKQUOTE></PRE>
///
/// Element "Configuration" of type "http://www.onvif.org/ver10/schema":VideoSourceConfiguration.
    tt__VideoSourceConfiguration*        Configuration                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The ForcePersistence element is obsolete and should always be assumed to be true.
/// </BLOCKQUOTE></PRE>
///
/// Element "ForcePersistence" of type xs:boolean.
    bool                                 ForcePersistence               1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetVideoSourceConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetVideoSourceConfigurationResponse is a complexType.
///
class _trt__SetVideoSourceConfigurationResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetAudioEncoderConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetAudioEncoderConfiguration is a complexType.
///
class _trt__SetAudioEncoderConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains the modified audio encoder configuration. The configuration shall exist in the device.
/// </BLOCKQUOTE></PRE>
///
/// Element "Configuration" of type "http://www.onvif.org/ver10/schema":AudioEncoderConfiguration.
    tt__AudioEncoderConfiguration*       Configuration                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The ForcePersistence element is obsolete and should always be assumed to be true.
/// </BLOCKQUOTE></PRE>
///
/// Element "ForcePersistence" of type xs:boolean.
    bool                                 ForcePersistence               1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetAudioEncoderConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetAudioEncoderConfigurationResponse is a complexType.
///
class _trt__SetAudioEncoderConfigurationResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetAudioSourceConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetAudioSourceConfiguration is a complexType.
///
class _trt__SetAudioSourceConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains the modified audio source configuration. The configuration shall exist in the device.
/// </BLOCKQUOTE></PRE>
///
/// Element "Configuration" of type "http://www.onvif.org/ver10/schema":AudioSourceConfiguration.
    tt__AudioSourceConfiguration*        Configuration                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The ForcePersistence element is obsolete and should always be assumed to be true.
/// </BLOCKQUOTE></PRE>
///
/// Element "ForcePersistence" of type xs:boolean.
    bool                                 ForcePersistence               1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetAudioSourceConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetAudioSourceConfigurationResponse is a complexType.
///
class _trt__SetAudioSourceConfigurationResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetVideoAnalyticsConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetVideoAnalyticsConfiguration is a complexType.
///
class _trt__SetVideoAnalyticsConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains the modified video analytics configuration. The configuration shall exist in the device.
/// </BLOCKQUOTE></PRE>
///
/// Element "Configuration" of type "http://www.onvif.org/ver10/schema":VideoAnalyticsConfiguration.
    tt__VideoAnalyticsConfiguration*     Configuration                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The ForcePersistence element is obsolete and should always be assumed to be true.
/// </BLOCKQUOTE></PRE>
///
/// Element "ForcePersistence" of type xs:boolean.
    bool                                 ForcePersistence               1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetVideoAnalyticsConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetVideoAnalyticsConfigurationResponse is a complexType.
///
class _trt__SetVideoAnalyticsConfigurationResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetMetadataConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetMetadataConfiguration is a complexType.
///
class _trt__SetMetadataConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains the modified metadata configuration. The configuration shall exist in the device.
/// </BLOCKQUOTE></PRE>
///
/// Element "Configuration" of type "http://www.onvif.org/ver10/schema":MetadataConfiguration.
    tt__MetadataConfiguration*           Configuration                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The ForcePersistence element is obsolete and should always be assumed to be true.
/// </BLOCKQUOTE></PRE>
///
/// Element "ForcePersistence" of type xs:boolean.
    bool                                 ForcePersistence               1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetMetadataConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetMetadataConfigurationResponse is a complexType.
///
class _trt__SetMetadataConfigurationResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetAudioOutputConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetAudioOutputConfiguration is a complexType.
///
class _trt__SetAudioOutputConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains the modified audio output configuration. The configuration shall exist in the device.
/// </BLOCKQUOTE></PRE>
///
/// Element "Configuration" of type "http://www.onvif.org/ver10/schema":AudioOutputConfiguration.
    tt__AudioOutputConfiguration*        Configuration                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The ForcePersistence element is obsolete and should always be assumed to be true.
/// </BLOCKQUOTE></PRE>
///
/// Element "ForcePersistence" of type xs:boolean.
    bool                                 ForcePersistence               1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetAudioOutputConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetAudioOutputConfigurationResponse is a complexType.
///
class _trt__SetAudioOutputConfigurationResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetAudioDecoderConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetAudioDecoderConfiguration is a complexType.
///
class _trt__SetAudioDecoderConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains the modified audio decoder configuration. The configuration shall exist in the device.
/// </BLOCKQUOTE></PRE>
///
/// Element "Configuration" of type "http://www.onvif.org/ver10/schema":AudioDecoderConfiguration.
    tt__AudioDecoderConfiguration*       Configuration                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The ForcePersistence element is obsolete and should always be assumed to be true.
/// </BLOCKQUOTE></PRE>
///
/// Element "ForcePersistence" of type xs:boolean.
    bool                                 ForcePersistence               1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetAudioDecoderConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetAudioDecoderConfigurationResponse is a complexType.
///
class _trt__SetAudioDecoderConfigurationResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceConfigurationOptions
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceConfigurationOptions is a complexType.
///
class _trt__GetVideoSourceConfigurationOptions
{ public:
/// <PRE><BLOCKQUOTE>
///   Optional video source configurationToken that specifies an existing configuration that the options are intended for.
/// </BLOCKQUOTE></PRE>
///
/// Element "ConfigurationToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken*                  ConfigurationToken             0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional ProfileToken that specifies an existing media profile that the options shall be compatible with.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken*                  ProfileToken                   0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceConfigurationOptionsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceConfigurationOptionsResponse is a complexType.
///
class _trt__GetVideoSourceConfigurationOptionsResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   This message contains the video source configuration options. If a video source configuration is specified, the options shall concern that particular configuration. If a media profile is specified, the options shall be compatible with that media profile. If no tokens are specified, the options shall be considered generic for the device.
/// </BLOCKQUOTE></PRE>
///
/// Element "Options" of type "http://www.onvif.org/ver10/schema":VideoSourceConfigurationOptions.
    tt__VideoSourceConfigurationOptions*  Options                        1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoEncoderConfigurationOptions
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetVideoEncoderConfigurationOptions is a complexType.
///
class _trt__GetVideoEncoderConfigurationOptions
{ public:
/// <PRE><BLOCKQUOTE>
///   Optional video encoder configuration token that specifies an existing configuration that the options are intended for.
/// </BLOCKQUOTE></PRE>
///
/// Element "ConfigurationToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken*                  ConfigurationToken             0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional ProfileToken that specifies an existing media profile that the options shall be compatible with.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken*                  ProfileToken                   0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoEncoderConfigurationOptionsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetVideoEncoderConfigurationOptionsResponse is a complexType.
///
class _trt__GetVideoEncoderConfigurationOptionsResponse
{ public:
/// Element "Options" of type "http://www.onvif.org/ver10/schema":VideoEncoderConfigurationOptions.
    tt__VideoEncoderConfigurationOptions*  Options                        1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioSourceConfigurationOptions
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioSourceConfigurationOptions is a complexType.
///
class _trt__GetAudioSourceConfigurationOptions
{ public:
/// <PRE><BLOCKQUOTE>
///   Optional audio source configuration token that specifies an existing configuration that the options are intended for.
/// </BLOCKQUOTE></PRE>
///
/// Element "ConfigurationToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken*                  ConfigurationToken             0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional ProfileToken that specifies an existing media profile that the options shall be compatible with.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken*                  ProfileToken                   0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioSourceConfigurationOptionsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioSourceConfigurationOptionsResponse is a complexType.
///
class _trt__GetAudioSourceConfigurationOptionsResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   This message contains the audio source configuration options. If a audio source configuration is specified, the options shall concern that particular configuration. If a media profile is specified, the options shall be compatible with that media profile. If no tokens are specified, the options shall be considered generic for the device.
/// </BLOCKQUOTE></PRE>
///
/// Element "Options" of type "http://www.onvif.org/ver10/schema":AudioSourceConfigurationOptions.
    tt__AudioSourceConfigurationOptions*  Options                        1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioEncoderConfigurationOptions
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioEncoderConfigurationOptions is a complexType.
///
class _trt__GetAudioEncoderConfigurationOptions
{ public:
/// <PRE><BLOCKQUOTE>
///   Optional audio encoder configuration token that specifies an existing configuration that the options are intended for.
/// </BLOCKQUOTE></PRE>
///
/// Element "ConfigurationToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken*                  ConfigurationToken             0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional ProfileToken that specifies an existing media profile that the options shall be compatible with.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken*                  ProfileToken                   0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioEncoderConfigurationOptionsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioEncoderConfigurationOptionsResponse is a complexType.
///
class _trt__GetAudioEncoderConfigurationOptionsResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   This message contains the audio encoder configuration options. If a audio encoder configuration is specified, the options shall concern that particular configuration. If a media profile is specified, the options shall be compatible with that media profile. If no tokens are specified, the options shall be considered generic for the device.
/// </BLOCKQUOTE></PRE>
///
/// Element "Options" of type "http://www.onvif.org/ver10/schema":AudioEncoderConfigurationOptions.
    tt__AudioEncoderConfigurationOptions*  Options                        1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetMetadataConfigurationOptions
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetMetadataConfigurationOptions is a complexType.
///
class _trt__GetMetadataConfigurationOptions
{ public:
/// <PRE><BLOCKQUOTE>
///   Optional metadata configuration token that specifies an existing configuration that the options are intended for.
/// </BLOCKQUOTE></PRE>
///
/// Element "ConfigurationToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken*                  ConfigurationToken             0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional ProfileToken that specifies an existing media profile that the options shall be compatible with.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken*                  ProfileToken                   0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetMetadataConfigurationOptionsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetMetadataConfigurationOptionsResponse is a complexType.
///
class _trt__GetMetadataConfigurationOptionsResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   This message contains the metadata configuration options. If a metadata configuration is specified, the options shall concern that particular configuration. If a media profile is specified, the options shall be compatible with that media profile. If no tokens are specified, the options shall be considered generic for the device.
/// </BLOCKQUOTE></PRE>
///
/// Element "Options" of type "http://www.onvif.org/ver10/schema":MetadataConfigurationOptions.
    tt__MetadataConfigurationOptions*    Options                        1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputConfigurationOptions
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputConfigurationOptions is a complexType.
///
class _trt__GetAudioOutputConfigurationOptions
{ public:
/// <PRE><BLOCKQUOTE>
///   Optional audio output configuration token that specifies an existing configuration that the options are intended for.
/// </BLOCKQUOTE></PRE>
///
/// Element "ConfigurationToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken*                  ConfigurationToken             0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional ProfileToken that specifies an existing media profile that the options shall be compatible with.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken*                  ProfileToken                   0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputConfigurationOptionsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputConfigurationOptionsResponse is a complexType.
///
class _trt__GetAudioOutputConfigurationOptionsResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   This message contains the audio output configuration options. If a audio output configuration is specified, the options shall concern that particular configuration. If a media profile is specified, the options shall be compatible with that media profile. If no tokens are specified, the options shall be considered generic for the device.
/// </BLOCKQUOTE></PRE>
///
/// Element "Options" of type "http://www.onvif.org/ver10/schema":AudioOutputConfigurationOptions.
    tt__AudioOutputConfigurationOptions*  Options                        1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioDecoderConfigurationOptions
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioDecoderConfigurationOptions is a complexType.
///
class _trt__GetAudioDecoderConfigurationOptions
{ public:
/// <PRE><BLOCKQUOTE>
///   Optional audio decoder configuration token that specifies an existing configuration that the options are intended for.
/// </BLOCKQUOTE></PRE>
///
/// Element "ConfigurationToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken*                  ConfigurationToken             0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional ProfileToken that specifies an existing media profile that the options shall be compatible with.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken*                  ProfileToken                   0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioDecoderConfigurationOptionsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioDecoderConfigurationOptionsResponse is a complexType.
///
class _trt__GetAudioDecoderConfigurationOptionsResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   This message contains the audio decoder configuration options. If a audio decoder configuration is specified, the options shall concern that particular configuration. If a media profile is specified, the options shall be compatible with that media profile. If no tokens are specified, the options shall be considered generic for the device.
/// </BLOCKQUOTE></PRE>
///
/// Element "Options" of type "http://www.onvif.org/ver10/schema":AudioDecoderConfigurationOptions.
    tt__AudioDecoderConfigurationOptions*  Options                        1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetGuaranteedNumberOfVideoEncoderInstances
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetGuaranteedNumberOfVideoEncoderInstances is a complexType.
///
class _trt__GetGuaranteedNumberOfVideoEncoderInstances
{ public:
/// <PRE><BLOCKQUOTE>
///   Token of the video source configuration
/// </BLOCKQUOTE></PRE>
///
/// Element "ConfigurationToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetGuaranteedNumberOfVideoEncoderInstancesResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetGuaranteedNumberOfVideoEncoderInstancesResponse is a complexType.
///
class _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   The minimum guaranteed total number of encoder instances (applications) per VideoSourceConfiguration. The device is able to deliver the TotalNumber of streams
/// </BLOCKQUOTE></PRE>
///
/// Element "TotalNumber" of type xs:int.
    int                                  TotalNumber                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   If a device limits the number of instances for respective Video Codecs the response contains the information how many Jpeg streams can be set up at the same time per VideoSource.
/// </BLOCKQUOTE></PRE>
///
/// Element "JPEG" of type xs:int.
    int*                                 JPEG                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If a device limits the number of instances for respective Video Codecs the response contains the information how many H264 streams can be set up at the same time per VideoSource.
/// </BLOCKQUOTE></PRE>
///
/// Element "H264" of type xs:int.
    int*                                 H264                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If a device limits the number of instances for respective Video Codecs the response contains the information how many Mpeg4 streams can be set up at the same time per VideoSource.
/// </BLOCKQUOTE></PRE>
///
/// Element "MPEG4" of type xs:int.
    int*                                 MPEG4                          0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetStreamUri
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetStreamUri is a complexType.
///
class _trt__GetStreamUri
{ public:
/// <PRE><BLOCKQUOTE>
///   Stream Setup that should be used with the uri
/// </BLOCKQUOTE></PRE>
///
/// Element "StreamSetup" of type "http://www.onvif.org/ver10/schema":StreamSetup.
    tt__StreamSetup*                     StreamSetup                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The ProfileToken element indicates the media profile to use and will define the configuration of the content of the stream.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetStreamUriResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetStreamUriResponse is a complexType.
///
class _trt__GetStreamUriResponse
{ public:

/// </BLOCKQUOTE></PRE>
///
/// Element "MediaUri" of type "http://www.onvif.org/ver10/schema":MediaUri.
    tt__MediaUri*                        MediaUri                       1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":StartMulticastStreaming
/// @brief "http://www.onvif.org/ver10/media/wsdl":StartMulticastStreaming is a complexType.
///
class _trt__StartMulticastStreaming
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains the token of the Profile that is used to define the multicast stream.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":StartMulticastStreamingResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":StartMulticastStreamingResponse is a complexType.
///
class _trt__StartMulticastStreamingResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":StopMulticastStreaming
/// @brief "http://www.onvif.org/ver10/media/wsdl":StopMulticastStreaming is a complexType.
///
class _trt__StopMulticastStreaming
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains the token of the Profile that is used to define the multicast stream.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":StopMulticastStreamingResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":StopMulticastStreamingResponse is a complexType.
///
class _trt__StopMulticastStreamingResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetSynchronizationPoint
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetSynchronizationPoint is a complexType.
///
class _trt__SetSynchronizationPoint
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains a Profile reference for which a Synchronization Point is requested.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetSynchronizationPointResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetSynchronizationPointResponse is a complexType.
///
class _trt__SetSynchronizationPointResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetSnapshotUri
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetSnapshotUri is a complexType.
///
class _trt__GetSnapshotUri
{ public:
/// <PRE><BLOCKQUOTE>
///   The ProfileToken element indicates the media profile to use and will define the source and dimensions of the snapshot.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetSnapshotUriResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetSnapshotUriResponse is a complexType.
///
class _trt__GetSnapshotUriResponse
{ public:

/// </BLOCKQUOTE></PRE>
///
/// Element "MediaUri" of type "http://www.onvif.org/ver10/schema":MediaUri.
    tt__MediaUri*                        MediaUri                       1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceModes
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceModes is a complexType.
///
class _trt__GetVideoSourceModes
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains a video source reference for which a video source mode is requested.
/// </BLOCKQUOTE></PRE>
///
/// Element "VideoSourceToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   VideoSourceToken               1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceModesResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceModesResponse is a complexType.
///
class _trt__GetVideoSourceModesResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Return the information for specified video source mode.
/// </BLOCKQUOTE></PRE>
///
/// Vector of trt__VideoSourceMode* of length 1..unbounded.
    std::vector<trt__VideoSourceMode*  > VideoSourceModes               1;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetVideoSourceMode
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetVideoSourceMode is a complexType.
///
class _trt__SetVideoSourceMode
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains a video source reference for which a video source mode is requested.
/// </BLOCKQUOTE></PRE>
///
/// Element "VideoSourceToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   VideoSourceToken               1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicate video source mode.
/// </BLOCKQUOTE></PRE>
///
/// Element "VideoSourceModeToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   VideoSourceModeToken           1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetVideoSourceModeResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetVideoSourceModeResponse is a complexType.
///
class _trt__SetVideoSourceModeResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   The response contains information about rebooting after returning response. When Reboot is set true, a device will reboot automatically after setting mode.
/// </BLOCKQUOTE></PRE>
///
/// Element "Reboot" of type xs:boolean.
    bool                                 Reboot                         1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetOSDs
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetOSDs is a complexType.
///
class _trt__GetOSDs
{ public:
/// <PRE><BLOCKQUOTE>
///   Token of the Video Source Configuration, which has OSDs associated with are requested. If token not exist, request all available OSDs.
/// </BLOCKQUOTE></PRE>
///
/// Element "ConfigurationToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken*                  ConfigurationToken             0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetOSDsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetOSDsResponse is a complexType.
///
class _trt__GetOSDsResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   This element contains a list of requested OSDs.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__OSDConfiguration* of length 0..unbounded.
    std::vector<tt__OSDConfiguration*  > OSDs                           0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetOSD
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetOSD is a complexType.
///
class _trt__GetOSD
{ public:
/// <PRE><BLOCKQUOTE>
///   The GetOSD command fetches the OSD configuration if the OSD token is known.
/// </BLOCKQUOTE></PRE>
///
/// Element "OSDToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   OSDToken                       1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetOSDResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetOSDResponse is a complexType.
///
class _trt__GetOSDResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   The requested OSD configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "OSD" of type "http://www.onvif.org/ver10/schema":OSDConfiguration.
    tt__OSDConfiguration*                OSD                            1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetOSD
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetOSD is a complexType.
///
class _trt__SetOSD
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains the modified OSD configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "OSD" of type "http://www.onvif.org/ver10/schema":OSDConfiguration.
    tt__OSDConfiguration*                OSD                            1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetOSDResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetOSDResponse is a complexType.
///
class _trt__SetOSDResponse
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetOSDOptions
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetOSDOptions is a complexType.
///
class _trt__GetOSDOptions
{ public:
/// <PRE><BLOCKQUOTE>
///   Video Source Configuration Token that specifies an existing video source configuration that the options shall be compatible with.
/// </BLOCKQUOTE></PRE>
///
/// Element "ConfigurationToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetOSDOptionsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetOSDOptionsResponse is a complexType.
///
class _trt__GetOSDOptionsResponse
{ public:

/// </BLOCKQUOTE></PRE>
///
/// Element "OSDOptions" of type "http://www.onvif.org/ver10/schema":OSDConfigurationOptions.
    tt__OSDConfigurationOptions*         OSDOptions                     1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":CreateOSD
/// @brief "http://www.onvif.org/ver10/media/wsdl":CreateOSD is a complexType.
///
class _trt__CreateOSD
{ public:
/// <PRE><BLOCKQUOTE>
///   Contain the initial OSD configuration for create.
/// </BLOCKQUOTE></PRE>
///
/// Element "OSD" of type "http://www.onvif.org/ver10/schema":OSDConfiguration.
    tt__OSDConfiguration*                OSD                            1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":CreateOSDResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":CreateOSDResponse is a complexType.
///
class _trt__CreateOSDResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Returns Token of the newly created OSD
/// </BLOCKQUOTE></PRE>
///
/// Element "OSDToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   OSDToken                       1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":DeleteOSD
/// @brief "http://www.onvif.org/ver10/media/wsdl":DeleteOSD is a complexType.
///
class _trt__DeleteOSD
{ public:
/// <PRE><BLOCKQUOTE>
///   This element contains a reference to the OSD configuration that should be deleted.
/// </BLOCKQUOTE></PRE>
///
/// Element "OSDToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   OSDToken                       1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":DeleteOSDResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":DeleteOSDResponse is a complexType.
///
class _trt__DeleteOSDResponse
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.onvif.org/ver10/search/wsdl                                   *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver10/search/wsdl":Capabilities is a complexType.
///
class tse__Capabilities : public xsd__anyType
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Attribute "MetadataSearch" of type xs:boolean.
  @ bool*                                MetadataSearch                 0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for general virtual property events in the FindEvents method.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "GeneralStartEvents" of type xs:boolean.
  @ bool*                                GeneralStartEvents             0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief Top-level root element "http://www.onvif.org/ver10/search/wsdl":GetServiceCapabilities
/// @brief "http://www.onvif.org/ver10/search/wsdl":GetServiceCapabilities is a complexType.
///
class _tse__GetServiceCapabilities
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/search/wsdl":GetServiceCapabilitiesResponse
/// @brief "http://www.onvif.org/ver10/search/wsdl":GetServiceCapabilitiesResponse is a complexType.
///
class _tse__GetServiceCapabilitiesResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   The capabilities for the search service is returned in the Capabilities element.
/// </BLOCKQUOTE></PRE>
///
/// Element "Capabilities" of type "http://www.onvif.org/ver10/search/wsdl":Capabilities.
    tse__Capabilities*                   Capabilities                   1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/search/wsdl":GetRecordingSummary
/// @brief "http://www.onvif.org/ver10/search/wsdl":GetRecordingSummary is a complexType.
///
class _tse__GetRecordingSummary
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/search/wsdl":GetRecordingSummaryResponse
/// @brief "http://www.onvif.org/ver10/search/wsdl":GetRecordingSummaryResponse is a complexType.
///
class _tse__GetRecordingSummaryResponse
{ public:
/// Element "Summary" of type "http://www.onvif.org/ver10/schema":RecordingSummary.
    tt__RecordingSummary*                Summary                        1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/search/wsdl":GetRecordingInformation
/// @brief "http://www.onvif.org/ver10/search/wsdl":GetRecordingInformation is a complexType.
///
class _tse__GetRecordingInformation
{ public:
/// Element "RecordingToken" of type "http://www.onvif.org/ver10/schema":RecordingReference.
    tt__RecordingReference               RecordingToken                 1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/search/wsdl":GetRecordingInformationResponse
/// @brief "http://www.onvif.org/ver10/search/wsdl":GetRecordingInformationResponse is a complexType.
///
class _tse__GetRecordingInformationResponse
{ public:
/// Element "RecordingInformation" of type "http://www.onvif.org/ver10/schema":RecordingInformation.
    tt__RecordingInformation*            RecordingInformation           1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/search/wsdl":GetMediaAttributes
/// @brief "http://www.onvif.org/ver10/search/wsdl":GetMediaAttributes is a complexType.
///
class _tse__GetMediaAttributes
{ public:
/// Vector of tt__RecordingReference of length 0..unbounded.
    std::vector<tt__RecordingReference > RecordingTokens                0;	///< Multiple elements.
/// Element "Time" of type xs:dateTime.
    xsd__dateTime                        Time                           1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/search/wsdl":GetMediaAttributesResponse
/// @brief "http://www.onvif.org/ver10/search/wsdl":GetMediaAttributesResponse is a complexType.
///
class _tse__GetMediaAttributesResponse
{ public:
/// Vector of tt__MediaAttributes* of length 0..unbounded.
    std::vector<tt__MediaAttributes*   > MediaAttributes                0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/search/wsdl":FindRecordings
/// @brief "http://www.onvif.org/ver10/search/wsdl":FindRecordings is a complexType.
///
class _tse__FindRecordings
{ public:
/// <PRE><BLOCKQUOTE>
///   Scope defines the dataset to consider for this search.
/// </BLOCKQUOTE></PRE>
///
/// Element "Scope" of type "http://www.onvif.org/ver10/schema":SearchScope.
    tt__SearchScope*                     Scope                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The search will be completed after this many matches. If not specified, the search will continue until reaching the endpoint or until the session expires.
/// </BLOCKQUOTE></PRE>
///
/// Element "MaxMatches" of type xs:int.
    int*                                 MaxMatches                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The time the search session will be kept alive after responding to this and subsequent requests. A device shall support at least values up to ten seconds.
/// </BLOCKQUOTE></PRE>
///
/// Element "KeepAliveTime" of type xs:duration.
    xsd__duration                        KeepAliveTime                  1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/search/wsdl":FindRecordingsResponse
/// @brief "http://www.onvif.org/ver10/search/wsdl":FindRecordingsResponse is a complexType.
///
class _tse__FindRecordingsResponse
{ public:
/// Element "SearchToken" of type "http://www.onvif.org/ver10/schema":JobToken.
    tt__JobToken                         SearchToken                    1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/search/wsdl":GetRecordingSearchResults
/// <PRE><BLOCKQUOTE>
///   Gets results from a particular recording listingession.
/// </BLOCKQUOTE></PRE>
///
/// @brief "http://www.onvif.org/ver10/search/wsdl":GetRecordingSearchResults is a complexType.
///
class _tse__GetRecordingSearchResults
{ public:
/// <PRE><BLOCKQUOTE>
///   The search session to get results from.
/// </BLOCKQUOTE></PRE>
///
/// Element "SearchToken" of type "http://www.onvif.org/ver10/schema":JobToken.
    tt__JobToken                         SearchToken                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The minimum number of results to return in one response.
/// </BLOCKQUOTE></PRE>
///
/// Element "MinResults" of type xs:int.
    int*                                 MinResults                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The maximum number of results to return in one response.
/// </BLOCKQUOTE></PRE>
///
/// Element "MaxResults" of type xs:int.
    int*                                 MaxResults                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The maximum time before responding to the request, even if the MinResults parameter is not fulfilled.
/// </BLOCKQUOTE></PRE>
///
/// Element "WaitTime" of type xs:duration.
    xsd__duration*                       WaitTime                       0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/search/wsdl":GetRecordingSearchResultsResponse
/// @brief "http://www.onvif.org/ver10/search/wsdl":GetRecordingSearchResultsResponse is a complexType.
///
class _tse__GetRecordingSearchResultsResponse
{ public:
/// Element "ResultList" of type "http://www.onvif.org/ver10/schema":FindRecordingResultList.
    tt__FindRecordingResultList*         ResultList                     1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/search/wsdl":FindEvents
/// <PRE><BLOCKQUOTE>
///   Starts a search session and specifies the search parameters.
/// </BLOCKQUOTE></PRE>
///
/// @brief "http://www.onvif.org/ver10/search/wsdl":FindEvents is a complexType.
///
class _tse__FindEvents
{ public:
/// <PRE><BLOCKQUOTE>
///   The point of time where the search will start.
/// </BLOCKQUOTE></PRE>
///
/// Element "StartPoint" of type xs:dateTime.
    xsd__dateTime                        StartPoint                     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The point of time where the search will stop. This can be a time before the StartPoint, in which case the search is performed backwards in time.
/// </BLOCKQUOTE></PRE>
///
/// Element "EndPoint" of type xs:dateTime.
    xsd__dateTime*                       EndPoint                       0;	///< Optional element.
/// Element "Scope" of type "http://www.onvif.org/ver10/schema":SearchScope.
    tt__SearchScope*                     Scope                          1;	///< Required element.
/// Element "SearchFilter" of type "http://www.onvif.org/ver10/schema":EventFilter.
    tt__EventFilter*                     SearchFilter                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Setting IncludeStartState to true means that the server should return virtual events representing the start state for any recording included in the scope. Start state events are limited to the topics defined in the SearchFilter that have the IsProperty flag set to true.
/// </BLOCKQUOTE></PRE>
///
/// Element "IncludeStartState" of type xs:boolean.
    bool                                 IncludeStartState              1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The search will be completed after this many matches. If not specified, the search will continue until reaching the endpoint or until the session expires.
/// </BLOCKQUOTE></PRE>
///
/// Element "MaxMatches" of type xs:int.
    int*                                 MaxMatches                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The time the search session will be kept alive after responding to this and subsequent requests. A device shall support at least values up to ten seconds.
/// </BLOCKQUOTE></PRE>
///
/// Element "KeepAliveTime" of type xs:duration.
    xsd__duration                        KeepAliveTime                  1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/search/wsdl":FindEventsResponse
/// @brief "http://www.onvif.org/ver10/search/wsdl":FindEventsResponse is a complexType.
///
class _tse__FindEventsResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   A unique reference to the search session created by this request.
/// </BLOCKQUOTE></PRE>
///
/// Element "SearchToken" of type "http://www.onvif.org/ver10/schema":JobToken.
    tt__JobToken                         SearchToken                    1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/search/wsdl":GetEventSearchResults
/// <PRE><BLOCKQUOTE>
///   Gets results from a particular search session.
/// </BLOCKQUOTE></PRE>
///
/// @brief "http://www.onvif.org/ver10/search/wsdl":GetEventSearchResults is a complexType.
///
class _tse__GetEventSearchResults
{ public:
/// <PRE><BLOCKQUOTE>
///   The search session to get results from.
/// </BLOCKQUOTE></PRE>
///
/// Element "SearchToken" of type "http://www.onvif.org/ver10/schema":JobToken.
    tt__JobToken                         SearchToken                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The minimum number of results to return in one response.
/// </BLOCKQUOTE></PRE>
///
/// Element "MinResults" of type xs:int.
    int*                                 MinResults                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The maximum number of results to return in one response.
/// </BLOCKQUOTE></PRE>
///
/// Element "MaxResults" of type xs:int.
    int*                                 MaxResults                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The maximum time before responding to the request, even if the MinResults parameter is not fulfilled.
/// </BLOCKQUOTE></PRE>
///
/// Element "WaitTime" of type xs:duration.
    xsd__duration*                       WaitTime                       0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/search/wsdl":GetEventSearchResultsResponse
/// @brief "http://www.onvif.org/ver10/search/wsdl":GetEventSearchResultsResponse is a complexType.
///
class _tse__GetEventSearchResultsResponse
{ public:
/// Element "ResultList" of type "http://www.onvif.org/ver10/schema":FindEventResultList.
    tt__FindEventResultList*             ResultList                     1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/search/wsdl":FindPTZPosition
/// <PRE><BLOCKQUOTE>
///   Starts a search session and specifies the search parameters.
/// </BLOCKQUOTE></PRE>
///
/// @brief "http://www.onvif.org/ver10/search/wsdl":FindPTZPosition is a complexType.
///
class _tse__FindPTZPosition
{ public:
/// <PRE><BLOCKQUOTE>
///   The point of time where the search will start.
/// </BLOCKQUOTE></PRE>
///
/// Element "StartPoint" of type xs:dateTime.
    xsd__dateTime                        StartPoint                     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The point of time where the search will stop. This can be a time before the StartPoint, in which case the search is performed backwards in time.
/// </BLOCKQUOTE></PRE>
///
/// Element "EndPoint" of type xs:dateTime.
    xsd__dateTime*                       EndPoint                       0;	///< Optional element.
/// Element "Scope" of type "http://www.onvif.org/ver10/schema":SearchScope.
    tt__SearchScope*                     Scope                          1;	///< Required element.
/// Element "SearchFilter" of type "http://www.onvif.org/ver10/schema":PTZPositionFilter.
    tt__PTZPositionFilter*               SearchFilter                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The search will be completed after this many matches. If not specified, the search will continue until reaching the endpoint or until the session expires.
/// </BLOCKQUOTE></PRE>
///
/// Element "MaxMatches" of type xs:int.
    int*                                 MaxMatches                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The time the search session will be kept alive after responding to this and subsequent requests. A device shall support at least values up to ten seconds.
/// </BLOCKQUOTE></PRE>
///
/// Element "KeepAliveTime" of type xs:duration.
    xsd__duration                        KeepAliveTime                  1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/search/wsdl":FindPTZPositionResponse
/// @brief "http://www.onvif.org/ver10/search/wsdl":FindPTZPositionResponse is a complexType.
///
class _tse__FindPTZPositionResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   A unique reference to the search session created by this request.
/// </BLOCKQUOTE></PRE>
///
/// Element "SearchToken" of type "http://www.onvif.org/ver10/schema":JobToken.
    tt__JobToken                         SearchToken                    1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/search/wsdl":GetPTZPositionSearchResults
/// <PRE><BLOCKQUOTE>
///   Gets results from a particular search session.
/// </BLOCKQUOTE></PRE>
///
/// @brief "http://www.onvif.org/ver10/search/wsdl":GetPTZPositionSearchResults is a complexType.
///
class _tse__GetPTZPositionSearchResults
{ public:
/// <PRE><BLOCKQUOTE>
///   The search session to get results from.
/// </BLOCKQUOTE></PRE>
///
/// Element "SearchToken" of type "http://www.onvif.org/ver10/schema":JobToken.
    tt__JobToken                         SearchToken                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The minimum number of results to return in one response.
/// </BLOCKQUOTE></PRE>
///
/// Element "MinResults" of type xs:int.
    int*                                 MinResults                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The maximum number of results to return in one response.
/// </BLOCKQUOTE></PRE>
///
/// Element "MaxResults" of type xs:int.
    int*                                 MaxResults                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The maximum time before responding to the request, even if the MinResults parameter is not fulfilled.
/// </BLOCKQUOTE></PRE>
///
/// Element "WaitTime" of type xs:duration.
    xsd__duration*                       WaitTime                       0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/search/wsdl":GetPTZPositionSearchResultsResponse
/// @brief "http://www.onvif.org/ver10/search/wsdl":GetPTZPositionSearchResultsResponse is a complexType.
///
class _tse__GetPTZPositionSearchResultsResponse
{ public:
/// Element "ResultList" of type "http://www.onvif.org/ver10/schema":FindPTZPositionResultList.
    tt__FindPTZPositionResultList*       ResultList                     1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/search/wsdl":FindMetadata
/// <PRE><BLOCKQUOTE>
///   Starts a search session and specifies the search parameters.
/// </BLOCKQUOTE></PRE>
///
/// @brief "http://www.onvif.org/ver10/search/wsdl":FindMetadata is a complexType.
///
class _tse__FindMetadata
{ public:
/// <PRE><BLOCKQUOTE>
///   The point of time where the search will start.
/// </BLOCKQUOTE></PRE>
///
/// Element "StartPoint" of type xs:dateTime.
    xsd__dateTime                        StartPoint                     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The point of time where the search will stop. This can be a time before the StartPoint, in which case the search is performed backwards in time.
/// </BLOCKQUOTE></PRE>
///
/// Element "EndPoint" of type xs:dateTime.
    xsd__dateTime*                       EndPoint                       0;	///< Optional element.
/// Element "Scope" of type "http://www.onvif.org/ver10/schema":SearchScope.
    tt__SearchScope*                     Scope                          1;	///< Required element.
/// Element "MetadataFilter" of type "http://www.onvif.org/ver10/schema":MetadataFilter.
    tt__MetadataFilter*                  MetadataFilter                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The search will be completed after this many matches. If not specified, the search will continue until reaching the endpoint or until the session expires.
/// </BLOCKQUOTE></PRE>
///
/// Element "MaxMatches" of type xs:int.
    int*                                 MaxMatches                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The time the search session will be kept alive after responding to this and subsequent requests. A device shall support at least values up to ten seconds.
/// </BLOCKQUOTE></PRE>
///
/// Element "KeepAliveTime" of type xs:duration.
    xsd__duration                        KeepAliveTime                  1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/search/wsdl":FindMetadataResponse
/// @brief "http://www.onvif.org/ver10/search/wsdl":FindMetadataResponse is a complexType.
///
class _tse__FindMetadataResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   A unique reference to the search session created by this request.
/// </BLOCKQUOTE></PRE>
///
/// Element "SearchToken" of type "http://www.onvif.org/ver10/schema":JobToken.
    tt__JobToken                         SearchToken                    1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/search/wsdl":GetMetadataSearchResults
/// <PRE><BLOCKQUOTE>
///   Gets results from a particular search session.
/// </BLOCKQUOTE></PRE>
///
/// @brief "http://www.onvif.org/ver10/search/wsdl":GetMetadataSearchResults is a complexType.
///
class _tse__GetMetadataSearchResults
{ public:
/// <PRE><BLOCKQUOTE>
///   The search session to get results from.
/// </BLOCKQUOTE></PRE>
///
/// Element "SearchToken" of type "http://www.onvif.org/ver10/schema":JobToken.
    tt__JobToken                         SearchToken                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The minimum number of results to return in one response.
/// </BLOCKQUOTE></PRE>
///
/// Element "MinResults" of type xs:int.
    int*                                 MinResults                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The maximum number of results to return in one response.
/// </BLOCKQUOTE></PRE>
///
/// Element "MaxResults" of type xs:int.
    int*                                 MaxResults                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The maximum time before responding to the request, even if the MinResults parameter is not fulfilled.
/// </BLOCKQUOTE></PRE>
///
/// Element "WaitTime" of type xs:duration.
    xsd__duration*                       WaitTime                       0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/search/wsdl":GetMetadataSearchResultsResponse
/// @brief "http://www.onvif.org/ver10/search/wsdl":GetMetadataSearchResultsResponse is a complexType.
///
class _tse__GetMetadataSearchResultsResponse
{ public:
/// Element "ResultList" of type "http://www.onvif.org/ver10/schema":FindMetadataResultList.
    tt__FindMetadataResultList*          ResultList                     1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/search/wsdl":GetSearchState
/// <PRE><BLOCKQUOTE>
///   Returns the state of an ongoing search session.
/// </BLOCKQUOTE></PRE>
///
/// @brief "http://www.onvif.org/ver10/search/wsdl":GetSearchState is a complexType.
///
class _tse__GetSearchState
{ public:
/// <PRE><BLOCKQUOTE>
///   The search session to get the state from.
/// </BLOCKQUOTE></PRE>
///
/// Element "SearchToken" of type "http://www.onvif.org/ver10/schema":JobToken.
    tt__JobToken                         SearchToken                    1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/search/wsdl":GetSearchStateResponse
/// @brief "http://www.onvif.org/ver10/search/wsdl":GetSearchStateResponse is a complexType.
///
class _tse__GetSearchStateResponse
{ public:
/// Element "State" of type "http://www.onvif.org/ver10/schema":SearchState.
    enum tt__SearchState                 State                          1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/search/wsdl":EndSearch
/// <PRE><BLOCKQUOTE>
///   Ends an ongoing search session, freeing any resources.
/// </BLOCKQUOTE></PRE>
///
/// @brief "http://www.onvif.org/ver10/search/wsdl":EndSearch is a complexType.
///
class _tse__EndSearch
{ public:
/// <PRE><BLOCKQUOTE>
///   The search session to end.
/// </BLOCKQUOTE></PRE>
///
/// Element "SearchToken" of type "http://www.onvif.org/ver10/schema":JobToken.
    tt__JobToken                         SearchToken                    1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/search/wsdl":EndSearchResponse
/// @brief "http://www.onvif.org/ver10/search/wsdl":EndSearchResponse is a complexType.
///
class _tse__EndSearchResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   The point of time the search had reached when it was ended. It is equal to the EndPoint specified in Find-operation if the search was completed.
/// </BLOCKQUOTE></PRE>
///
/// Element "Endpoint" of type xs:dateTime.
    xsd__dateTime                        Endpoint                       1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.onvif.org/ver20/imaging/wsdl                                  *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver20/imaging/wsdl":Capabilities is a complexType.
///
class timg__Capabilities : public xsd__anyType
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not Image Stabilization feature is supported.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "ImageStabilization" of type xs:boolean.
  @ bool*                                ImageStabilization             0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not Imaging Presets feature is supported.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "Presets" of type xs:boolean.
  @ bool*                                Presets                        0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver20/imaging/wsdl":ImagingPreset is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Type describing the Imaging Preset settings.
/// </BLOCKQUOTE></PRE>
///
class timg__ImagingPreset : public xsd__anyType
{ public:
/// <PRE><BLOCKQUOTE>
///   Human readable name of the Imaging Preset.
/// </BLOCKQUOTE></PRE>
///
/// Element "Name" of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Unique identifier of this Imaging Preset.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   token                          1;	///< Required attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates Imaging Preset Type. Use timg:ImagingPresetType. Used for multi-language support and display.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "type" of type xs:string.
  @ std::string                          type                           1;	///< Required attribute.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief Top-level root element "http://www.onvif.org/ver20/imaging/wsdl":GetServiceCapabilities
/// @brief "http://www.onvif.org/ver20/imaging/wsdl":GetServiceCapabilities is a complexType.
///
class _timg__GetServiceCapabilities
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/imaging/wsdl":GetServiceCapabilitiesResponse
/// @brief "http://www.onvif.org/ver20/imaging/wsdl":GetServiceCapabilitiesResponse is a complexType.
///
class _timg__GetServiceCapabilitiesResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   The capabilities for the imaging service is returned in the Capabilities element.
/// </BLOCKQUOTE></PRE>
///
/// Element "Capabilities" of type "http://www.onvif.org/ver20/imaging/wsdl":Capabilities.
    timg__Capabilities*                  Capabilities                   1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/imaging/wsdl":GetImagingSettings
/// @brief "http://www.onvif.org/ver20/imaging/wsdl":GetImagingSettings is a complexType.
///
class _timg__GetImagingSettings
{ public:
/// <PRE><BLOCKQUOTE>
///   Reference token to the VideoSource for which the ImagingSettings.
/// </BLOCKQUOTE></PRE>
///
/// Element "VideoSourceToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   VideoSourceToken               1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/imaging/wsdl":GetImagingSettingsResponse
/// @brief "http://www.onvif.org/ver20/imaging/wsdl":GetImagingSettingsResponse is a complexType.
///
class _timg__GetImagingSettingsResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   ImagingSettings for the VideoSource that was requested.
/// </BLOCKQUOTE></PRE>
///
/// Element "ImagingSettings" of type "http://www.onvif.org/ver10/schema":ImagingSettings20.
    tt__ImagingSettings20*               ImagingSettings                1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/imaging/wsdl":SetImagingSettings
/// @brief "http://www.onvif.org/ver20/imaging/wsdl":SetImagingSettings is a complexType.
///
class _timg__SetImagingSettings
{ public:
/// Element "VideoSourceToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   VideoSourceToken               1;	///< Required element.
/// Element "ImagingSettings" of type "http://www.onvif.org/ver10/schema":ImagingSettings20.
    tt__ImagingSettings20*               ImagingSettings                1;	///< Required element.
/// Element "ForcePersistence" of type xs:boolean.
    bool*                                ForcePersistence               0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/imaging/wsdl":SetImagingSettingsResponse
/// @brief "http://www.onvif.org/ver20/imaging/wsdl":SetImagingSettingsResponse is a complexType.
///
class _timg__SetImagingSettingsResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/imaging/wsdl":GetOptions
/// @brief "http://www.onvif.org/ver20/imaging/wsdl":GetOptions is a complexType.
///
class _timg__GetOptions
{ public:
/// <PRE><BLOCKQUOTE>
///   Reference token to the VideoSource for which the imaging parameter options are requested.
/// </BLOCKQUOTE></PRE>
///
/// Element "VideoSourceToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   VideoSourceToken               1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/imaging/wsdl":GetOptionsResponse
/// @brief "http://www.onvif.org/ver20/imaging/wsdl":GetOptionsResponse is a complexType.
///
class _timg__GetOptionsResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Valid ranges for the imaging parameters that are categorized as device specific.
/// </BLOCKQUOTE></PRE>
///
/// Element "ImagingOptions" of type "http://www.onvif.org/ver10/schema":ImagingOptions20.
    tt__ImagingOptions20*                ImagingOptions                 1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/imaging/wsdl":Move
/// @brief "http://www.onvif.org/ver20/imaging/wsdl":Move is a complexType.
///
class _timg__Move
{ public:
/// <PRE><BLOCKQUOTE>
///   Reference to the VideoSource for the requested move (focus) operation.
/// </BLOCKQUOTE></PRE>
///
/// Element "VideoSourceToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   VideoSourceToken               1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Content of the requested move (focus) operation.
/// </BLOCKQUOTE></PRE>
///
/// Element "Focus" of type "http://www.onvif.org/ver10/schema":FocusMove.
    tt__FocusMove*                       Focus                          1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/imaging/wsdl":MoveResponse
/// @brief "http://www.onvif.org/ver20/imaging/wsdl":MoveResponse is a complexType.
///
class _timg__MoveResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/imaging/wsdl":GetMoveOptions
/// @brief "http://www.onvif.org/ver20/imaging/wsdl":GetMoveOptions is a complexType.
///
class _timg__GetMoveOptions
{ public:
/// <PRE><BLOCKQUOTE>
///   Reference token to the VideoSource for the requested move options.
/// </BLOCKQUOTE></PRE>
///
/// Element "VideoSourceToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   VideoSourceToken               1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/imaging/wsdl":GetMoveOptionsResponse
/// @brief "http://www.onvif.org/ver20/imaging/wsdl":GetMoveOptionsResponse is a complexType.
///
class _timg__GetMoveOptionsResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Valid ranges for the focus lens move options.
/// </BLOCKQUOTE></PRE>
///
/// Element "MoveOptions" of type "http://www.onvif.org/ver10/schema":MoveOptions20.
    tt__MoveOptions20*                   MoveOptions                    1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/imaging/wsdl":Stop
/// @brief "http://www.onvif.org/ver20/imaging/wsdl":Stop is a complexType.
///
class _timg__Stop
{ public:
/// <PRE><BLOCKQUOTE>
///   Reference token to the VideoSource where the focus movement should be stopped.
/// </BLOCKQUOTE></PRE>
///
/// Element "VideoSourceToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   VideoSourceToken               1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/imaging/wsdl":StopResponse
/// @brief "http://www.onvif.org/ver20/imaging/wsdl":StopResponse is a complexType.
///
class _timg__StopResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/imaging/wsdl":GetStatus
/// @brief "http://www.onvif.org/ver20/imaging/wsdl":GetStatus is a complexType.
///
class _timg__GetStatus
{ public:
/// <PRE><BLOCKQUOTE>
///   Reference token to the VideoSource where the imaging status should be requested.
/// </BLOCKQUOTE></PRE>
///
/// Element "VideoSourceToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   VideoSourceToken               1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/imaging/wsdl":GetStatusResponse
/// @brief "http://www.onvif.org/ver20/imaging/wsdl":GetStatusResponse is a complexType.
///
class _timg__GetStatusResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Requested imaging status.
/// </BLOCKQUOTE></PRE>
///
/// Element "Status" of type "http://www.onvif.org/ver10/schema":ImagingStatus20.
    tt__ImagingStatus20*                 Status                         1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/imaging/wsdl":GetPresets
/// @brief "http://www.onvif.org/ver20/imaging/wsdl":GetPresets is a complexType.
///
class _timg__GetPresets
{ public:
/// <PRE><BLOCKQUOTE>
///   A reference to the VideoSource where the operation should take place.
/// </BLOCKQUOTE></PRE>
///
/// Element "VideoSourceToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   VideoSourceToken               1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/imaging/wsdl":GetPresetsResponse
/// @brief "http://www.onvif.org/ver20/imaging/wsdl":GetPresetsResponse is a complexType.
///
class _timg__GetPresetsResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   List of Imaging Presets which are available for the requested VideoSource.
/// </BLOCKQUOTE></PRE>
///
/// Vector of timg__ImagingPreset* of length 1..unbounded.
    std::vector<timg__ImagingPreset*   > Preset                         1;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/imaging/wsdl":GetCurrentPreset
/// @brief "http://www.onvif.org/ver20/imaging/wsdl":GetCurrentPreset is a complexType.
///
class _timg__GetCurrentPreset
{ public:
/// <PRE><BLOCKQUOTE>
///   Reference token to the VideoSource where the current Imaging Preset should be requested.
/// </BLOCKQUOTE></PRE>
///
/// Element "VideoSourceToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   VideoSourceToken               1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/imaging/wsdl":GetCurrentPresetResponse
/// @brief "http://www.onvif.org/ver20/imaging/wsdl":GetCurrentPresetResponse is a complexType.
///
class _timg__GetCurrentPresetResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Current Imaging Preset in use for the specified Video Source.
/// </BLOCKQUOTE></PRE>
///
/// Element "Preset" of type "http://www.onvif.org/ver20/imaging/wsdl":ImagingPreset.
    timg__ImagingPreset*                 Preset                         0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/imaging/wsdl":SetCurrentPreset
/// @brief "http://www.onvif.org/ver20/imaging/wsdl":SetCurrentPreset is a complexType.
///
class _timg__SetCurrentPreset
{ public:
/// <PRE><BLOCKQUOTE>
///   Reference token to the VideoSource to which the specified Imaging Preset should be applied.
/// </BLOCKQUOTE></PRE>
///
/// Element "VideoSourceToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   VideoSourceToken               1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Reference token to the Imaging Preset to be applied to the specified Video Source.
/// </BLOCKQUOTE></PRE>
///
/// Element "PresetToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   PresetToken                    1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/imaging/wsdl":SetCurrentPresetResponse
/// @brief "http://www.onvif.org/ver20/imaging/wsdl":SetCurrentPresetResponse is a complexType.
///
class _timg__SetCurrentPresetResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://docs.oasis-open.org/wsrf/bf-2                                     *
 *                                                                            *
\******************************************************************************/

/// @brief "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType is a complexType.
///
/// This type is extended by:
/// - "http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFaultType as wsrfr__ResourceUnknownFaultType
/// - "http://docs.oasis-open.org/wsrf/r-2":ResourceUnavailableFaultType as wsrfr__ResourceUnavailableFaultType
/// - "http://docs.oasis-open.org/wsn/b-2":SubscribeCreationFailedFaultType as wsnt__SubscribeCreationFailedFaultType
/// - "http://docs.oasis-open.org/wsn/b-2":InvalidFilterFaultType as wsnt__InvalidFilterFaultType
/// - "http://docs.oasis-open.org/wsn/b-2":TopicExpressionDialectUnknownFaultType as wsnt__TopicExpressionDialectUnknownFaultType
/// - "http://docs.oasis-open.org/wsn/b-2":InvalidTopicExpressionFaultType as wsnt__InvalidTopicExpressionFaultType
/// - "http://docs.oasis-open.org/wsn/b-2":TopicNotSupportedFaultType as wsnt__TopicNotSupportedFaultType
/// - "http://docs.oasis-open.org/wsn/b-2":MultipleTopicsSpecifiedFaultType as wsnt__MultipleTopicsSpecifiedFaultType
/// - "http://docs.oasis-open.org/wsn/b-2":InvalidProducerPropertiesExpressionFaultType as wsnt__InvalidProducerPropertiesExpressionFaultType
/// - "http://docs.oasis-open.org/wsn/b-2":InvalidMessageContentExpressionFaultType as wsnt__InvalidMessageContentExpressionFaultType
/// - "http://docs.oasis-open.org/wsn/b-2":UnrecognizedPolicyRequestFaultType as wsnt__UnrecognizedPolicyRequestFaultType
/// - "http://docs.oasis-open.org/wsn/b-2":UnsupportedPolicyRequestFaultType as wsnt__UnsupportedPolicyRequestFaultType
/// - "http://docs.oasis-open.org/wsn/b-2":NotifyMessageNotSupportedFaultType as wsnt__NotifyMessageNotSupportedFaultType
/// - "http://docs.oasis-open.org/wsn/b-2":UnacceptableInitialTerminationTimeFaultType as wsnt__UnacceptableInitialTerminationTimeFaultType
/// - "http://docs.oasis-open.org/wsn/b-2":NoCurrentMessageOnTopicFaultType as wsnt__NoCurrentMessageOnTopicFaultType
/// - "http://docs.oasis-open.org/wsn/b-2":UnableToGetMessagesFaultType as wsnt__UnableToGetMessagesFaultType
/// - "http://docs.oasis-open.org/wsn/b-2":UnableToDestroyPullPointFaultType as wsnt__UnableToDestroyPullPointFaultType
/// - "http://docs.oasis-open.org/wsn/b-2":UnableToCreatePullPointFaultType as wsnt__UnableToCreatePullPointFaultType
/// - "http://docs.oasis-open.org/wsn/b-2":UnacceptableTerminationTimeFaultType as wsnt__UnacceptableTerminationTimeFaultType
/// - "http://docs.oasis-open.org/wsn/b-2":UnableToDestroySubscriptionFaultType as wsnt__UnableToDestroySubscriptionFaultType
/// - "http://docs.oasis-open.org/wsn/b-2":PauseFailedFaultType as wsnt__PauseFailedFaultType
/// - "http://docs.oasis-open.org/wsn/b-2":ResumeFailedFaultType as wsnt__ResumeFailedFaultType
///
class wsrfbf__BaseFaultType : public xsd__anyType
{ public:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Element "Timestamp" of type xs:dateTime.
    xsd__dateTime                        Timestamp                      1;	///< Required element.
/// Element "Originator" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
    class _wsrfbf__BaseFaultType_ErrorCode
    { public:
/// Attribute "dialect" of type xs:anyURI.
  @ xsd__anyURI                          dialect                        1;	///< Required attribute.
/// Mixed content.
    xsd__anyType                         __mixed                       0;	///< Store mixed content as xsd:any (by default a xsd__anyType DOM soap_dom_element linked node structure).
    }                                   *ErrorCode                      0;	///< Optional element.
/// Vector of Description of length 0..unbounded.
    std::vector<
    class _wsrfbf__BaseFaultType_Description
    { public:
/// __item wraps simpleContent of type xs:string.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
  @ _xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }>                                   Description                    0;	///< Multiple elements.
    class _wsrfbf__BaseFaultType_FaultCause
    { public:
/// <any namespace="##other" minOccurs="1" maxOccurs="1">
    xsd__anyType                         __any                         0;	///< Store any element content in DOM soap_dom_element node.
    }                                   *FaultCause                     0;	///< Optional element.
/// <anyAttribute namespace="##other">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":SubscribeCreationFailedFaultType is a complexType with complexContent extension of type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
class wsnt__SubscribeCreationFailedFaultType : public wsrfbf__BaseFaultType
{ public:
/*  INHERITED FROM wsrfbf__BaseFaultType:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Element "Timestamp" of type xs:dateTime.
    xsd__dateTime                        Timestamp                      1;	///< Required element.
/// Element "Originator" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
    class _wsrfbf__SubscribeCreationFailedFaultType_ErrorCode
    { public:
/// Attribute "dialect" of type xs:anyURI.
  @ xsd__anyURI                          dialect                        1;	///< Required attribute.
/// Mixed content.
    xsd__anyType                         __mixed                       0;	///< Store mixed content as xsd:any (by default a xsd__anyType DOM soap_dom_element linked node structure).
    }                                   *ErrorCode                      0;	///< Optional element.
/// Vector of Description of length 0..unbounded.
    std::vector<
    class _wsrfbf__SubscribeCreationFailedFaultType_Description
    { public:
/// __item wraps simpleContent of type xs:string.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
  @ _xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }>                                   Description                    0;	///< Multiple elements.
    class _wsrfbf__SubscribeCreationFailedFaultType_FaultCause
    { public:
/// <any namespace="##other" minOccurs="1" maxOccurs="1">
    xsd__anyType                         __any                         0;	///< Store any element content in DOM soap_dom_element node.
    }                                   *FaultCause                     0;	///< Optional element.
/// <anyAttribute namespace="##other">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
    END OF INHERITED FROM wsrfbf__BaseFaultType */
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":InvalidFilterFaultType is a complexType with complexContent extension of type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
class wsnt__InvalidFilterFaultType : public wsrfbf__BaseFaultType
{ public:
/*  INHERITED FROM wsrfbf__BaseFaultType:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Element "Timestamp" of type xs:dateTime.
    xsd__dateTime                        Timestamp                      1;	///< Required element.
/// Element "Originator" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
    class _wsrfbf__InvalidFilterFaultType_ErrorCode
    { public:
/// Attribute "dialect" of type xs:anyURI.
  @ xsd__anyURI                          dialect                        1;	///< Required attribute.
/// Mixed content.
    xsd__anyType                         __mixed                       0;	///< Store mixed content as xsd:any (by default a xsd__anyType DOM soap_dom_element linked node structure).
    }                                   *ErrorCode                      0;	///< Optional element.
/// Vector of Description of length 0..unbounded.
    std::vector<
    class _wsrfbf__InvalidFilterFaultType_Description
    { public:
/// __item wraps simpleContent of type xs:string.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
  @ _xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }>                                   Description                    0;	///< Multiple elements.
    class _wsrfbf__InvalidFilterFaultType_FaultCause
    { public:
/// <any namespace="##other" minOccurs="1" maxOccurs="1">
    xsd__anyType                         __any                         0;	///< Store any element content in DOM soap_dom_element node.
    }                                   *FaultCause                     0;	///< Optional element.
/// <anyAttribute namespace="##other">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
    END OF INHERITED FROM wsrfbf__BaseFaultType */
/// Vector of xsd__QName of length 1..unbounded.
    std::vector<xsd__QName             > UnknownFilter                  1;	///< Multiple elements.
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":TopicExpressionDialectUnknownFaultType is a complexType with complexContent extension of type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
class wsnt__TopicExpressionDialectUnknownFaultType : public wsrfbf__BaseFaultType
{ public:
/*  INHERITED FROM wsrfbf__BaseFaultType:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Element "Timestamp" of type xs:dateTime.
    xsd__dateTime                        Timestamp                      1;	///< Required element.
/// Element "Originator" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
    class _wsrfbf__TopicExpressionDialectUnknownFaultType_ErrorCode
    { public:
/// Attribute "dialect" of type xs:anyURI.
  @ xsd__anyURI                          dialect                        1;	///< Required attribute.
/// Mixed content.
    xsd__anyType                         __mixed                       0;	///< Store mixed content as xsd:any (by default a xsd__anyType DOM soap_dom_element linked node structure).
    }                                   *ErrorCode                      0;	///< Optional element.
/// Vector of Description of length 0..unbounded.
    std::vector<
    class _wsrfbf__TopicExpressionDialectUnknownFaultType_Description
    { public:
/// __item wraps simpleContent of type xs:string.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
  @ _xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }>                                   Description                    0;	///< Multiple elements.
    class _wsrfbf__TopicExpressionDialectUnknownFaultType_FaultCause
    { public:
/// <any namespace="##other" minOccurs="1" maxOccurs="1">
    xsd__anyType                         __any                         0;	///< Store any element content in DOM soap_dom_element node.
    }                                   *FaultCause                     0;	///< Optional element.
/// <anyAttribute namespace="##other">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
    END OF INHERITED FROM wsrfbf__BaseFaultType */
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":InvalidTopicExpressionFaultType is a complexType with complexContent extension of type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
class wsnt__InvalidTopicExpressionFaultType : public wsrfbf__BaseFaultType
{ public:
/*  INHERITED FROM wsrfbf__BaseFaultType:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Element "Timestamp" of type xs:dateTime.
    xsd__dateTime                        Timestamp                      1;	///< Required element.
/// Element "Originator" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
    class _wsrfbf__InvalidTopicExpressionFaultType_ErrorCode
    { public:
/// Attribute "dialect" of type xs:anyURI.
  @ xsd__anyURI                          dialect                        1;	///< Required attribute.
/// Mixed content.
    xsd__anyType                         __mixed                       0;	///< Store mixed content as xsd:any (by default a xsd__anyType DOM soap_dom_element linked node structure).
    }                                   *ErrorCode                      0;	///< Optional element.
/// Vector of Description of length 0..unbounded.
    std::vector<
    class _wsrfbf__InvalidTopicExpressionFaultType_Description
    { public:
/// __item wraps simpleContent of type xs:string.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
  @ _xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }>                                   Description                    0;	///< Multiple elements.
    class _wsrfbf__InvalidTopicExpressionFaultType_FaultCause
    { public:
/// <any namespace="##other" minOccurs="1" maxOccurs="1">
    xsd__anyType                         __any                         0;	///< Store any element content in DOM soap_dom_element node.
    }                                   *FaultCause                     0;	///< Optional element.
/// <anyAttribute namespace="##other">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
    END OF INHERITED FROM wsrfbf__BaseFaultType */
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":TopicNotSupportedFaultType is a complexType with complexContent extension of type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
class wsnt__TopicNotSupportedFaultType : public wsrfbf__BaseFaultType
{ public:
/*  INHERITED FROM wsrfbf__BaseFaultType:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Element "Timestamp" of type xs:dateTime.
    xsd__dateTime                        Timestamp                      1;	///< Required element.
/// Element "Originator" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
    class _wsrfbf__TopicNotSupportedFaultType_ErrorCode
    { public:
/// Attribute "dialect" of type xs:anyURI.
  @ xsd__anyURI                          dialect                        1;	///< Required attribute.
/// Mixed content.
    xsd__anyType                         __mixed                       0;	///< Store mixed content as xsd:any (by default a xsd__anyType DOM soap_dom_element linked node structure).
    }                                   *ErrorCode                      0;	///< Optional element.
/// Vector of Description of length 0..unbounded.
    std::vector<
    class _wsrfbf__TopicNotSupportedFaultType_Description
    { public:
/// __item wraps simpleContent of type xs:string.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
  @ _xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }>                                   Description                    0;	///< Multiple elements.
    class _wsrfbf__TopicNotSupportedFaultType_FaultCause
    { public:
/// <any namespace="##other" minOccurs="1" maxOccurs="1">
    xsd__anyType                         __any                         0;	///< Store any element content in DOM soap_dom_element node.
    }                                   *FaultCause                     0;	///< Optional element.
/// <anyAttribute namespace="##other">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
    END OF INHERITED FROM wsrfbf__BaseFaultType */
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":MultipleTopicsSpecifiedFaultType is a complexType with complexContent extension of type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
class wsnt__MultipleTopicsSpecifiedFaultType : public wsrfbf__BaseFaultType
{ public:
/*  INHERITED FROM wsrfbf__BaseFaultType:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Element "Timestamp" of type xs:dateTime.
    xsd__dateTime                        Timestamp                      1;	///< Required element.
/// Element "Originator" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
    class _wsrfbf__MultipleTopicsSpecifiedFaultType_ErrorCode
    { public:
/// Attribute "dialect" of type xs:anyURI.
  @ xsd__anyURI                          dialect                        1;	///< Required attribute.
/// Mixed content.
    xsd__anyType                         __mixed                       0;	///< Store mixed content as xsd:any (by default a xsd__anyType DOM soap_dom_element linked node structure).
    }                                   *ErrorCode                      0;	///< Optional element.
/// Vector of Description of length 0..unbounded.
    std::vector<
    class _wsrfbf__MultipleTopicsSpecifiedFaultType_Description
    { public:
/// __item wraps simpleContent of type xs:string.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
  @ _xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }>                                   Description                    0;	///< Multiple elements.
    class _wsrfbf__MultipleTopicsSpecifiedFaultType_FaultCause
    { public:
/// <any namespace="##other" minOccurs="1" maxOccurs="1">
    xsd__anyType                         __any                         0;	///< Store any element content in DOM soap_dom_element node.
    }                                   *FaultCause                     0;	///< Optional element.
/// <anyAttribute namespace="##other">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
    END OF INHERITED FROM wsrfbf__BaseFaultType */
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":InvalidProducerPropertiesExpressionFaultType is a complexType with complexContent extension of type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
class wsnt__InvalidProducerPropertiesExpressionFaultType : public wsrfbf__BaseFaultType
{ public:
/*  INHERITED FROM wsrfbf__BaseFaultType:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Element "Timestamp" of type xs:dateTime.
    xsd__dateTime                        Timestamp                      1;	///< Required element.
/// Element "Originator" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
    class _wsrfbf__InvalidProducerPropertiesExpressionFaultType_ErrorCode
    { public:
/// Attribute "dialect" of type xs:anyURI.
  @ xsd__anyURI                          dialect                        1;	///< Required attribute.
/// Mixed content.
    xsd__anyType                         __mixed                       0;	///< Store mixed content as xsd:any (by default a xsd__anyType DOM soap_dom_element linked node structure).
    }                                   *ErrorCode                      0;	///< Optional element.
/// Vector of Description of length 0..unbounded.
    std::vector<
    class _wsrfbf__InvalidProducerPropertiesExpressionFaultType_Description
    { public:
/// __item wraps simpleContent of type xs:string.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
  @ _xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }>                                   Description                    0;	///< Multiple elements.
    class _wsrfbf__InvalidProducerPropertiesExpressionFaultType_FaultCause
    { public:
/// <any namespace="##other" minOccurs="1" maxOccurs="1">
    xsd__anyType                         __any                         0;	///< Store any element content in DOM soap_dom_element node.
    }                                   *FaultCause                     0;	///< Optional element.
/// <anyAttribute namespace="##other">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
    END OF INHERITED FROM wsrfbf__BaseFaultType */
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":InvalidMessageContentExpressionFaultType is a complexType with complexContent extension of type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
class wsnt__InvalidMessageContentExpressionFaultType : public wsrfbf__BaseFaultType
{ public:
/*  INHERITED FROM wsrfbf__BaseFaultType:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Element "Timestamp" of type xs:dateTime.
    xsd__dateTime                        Timestamp                      1;	///< Required element.
/// Element "Originator" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
    class _wsrfbf__InvalidMessageContentExpressionFaultType_ErrorCode
    { public:
/// Attribute "dialect" of type xs:anyURI.
  @ xsd__anyURI                          dialect                        1;	///< Required attribute.
/// Mixed content.
    xsd__anyType                         __mixed                       0;	///< Store mixed content as xsd:any (by default a xsd__anyType DOM soap_dom_element linked node structure).
    }                                   *ErrorCode                      0;	///< Optional element.
/// Vector of Description of length 0..unbounded.
    std::vector<
    class _wsrfbf__InvalidMessageContentExpressionFaultType_Description
    { public:
/// __item wraps simpleContent of type xs:string.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
  @ _xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }>                                   Description                    0;	///< Multiple elements.
    class _wsrfbf__InvalidMessageContentExpressionFaultType_FaultCause
    { public:
/// <any namespace="##other" minOccurs="1" maxOccurs="1">
    xsd__anyType                         __any                         0;	///< Store any element content in DOM soap_dom_element node.
    }                                   *FaultCause                     0;	///< Optional element.
/// <anyAttribute namespace="##other">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
    END OF INHERITED FROM wsrfbf__BaseFaultType */
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":UnrecognizedPolicyRequestFaultType is a complexType with complexContent extension of type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
class wsnt__UnrecognizedPolicyRequestFaultType : public wsrfbf__BaseFaultType
{ public:
/*  INHERITED FROM wsrfbf__BaseFaultType:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Element "Timestamp" of type xs:dateTime.
    xsd__dateTime                        Timestamp                      1;	///< Required element.
/// Element "Originator" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
    class _wsrfbf__UnrecognizedPolicyRequestFaultType_ErrorCode
    { public:
/// Attribute "dialect" of type xs:anyURI.
  @ xsd__anyURI                          dialect                        1;	///< Required attribute.
/// Mixed content.
    xsd__anyType                         __mixed                       0;	///< Store mixed content as xsd:any (by default a xsd__anyType DOM soap_dom_element linked node structure).
    }                                   *ErrorCode                      0;	///< Optional element.
/// Vector of Description of length 0..unbounded.
    std::vector<
    class _wsrfbf__UnrecognizedPolicyRequestFaultType_Description
    { public:
/// __item wraps simpleContent of type xs:string.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
  @ _xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }>                                   Description                    0;	///< Multiple elements.
    class _wsrfbf__UnrecognizedPolicyRequestFaultType_FaultCause
    { public:
/// <any namespace="##other" minOccurs="1" maxOccurs="1">
    xsd__anyType                         __any                         0;	///< Store any element content in DOM soap_dom_element node.
    }                                   *FaultCause                     0;	///< Optional element.
/// <anyAttribute namespace="##other">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
    END OF INHERITED FROM wsrfbf__BaseFaultType */
/// Vector of xsd__QName of length 0..unbounded.
    std::vector<xsd__QName             > UnrecognizedPolicy             0;	///< Multiple elements.
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":UnsupportedPolicyRequestFaultType is a complexType with complexContent extension of type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
class wsnt__UnsupportedPolicyRequestFaultType : public wsrfbf__BaseFaultType
{ public:
/*  INHERITED FROM wsrfbf__BaseFaultType:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Element "Timestamp" of type xs:dateTime.
    xsd__dateTime                        Timestamp                      1;	///< Required element.
/// Element "Originator" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
    class _wsrfbf__UnsupportedPolicyRequestFaultType_ErrorCode
    { public:
/// Attribute "dialect" of type xs:anyURI.
  @ xsd__anyURI                          dialect                        1;	///< Required attribute.
/// Mixed content.
    xsd__anyType                         __mixed                       0;	///< Store mixed content as xsd:any (by default a xsd__anyType DOM soap_dom_element linked node structure).
    }                                   *ErrorCode                      0;	///< Optional element.
/// Vector of Description of length 0..unbounded.
    std::vector<
    class _wsrfbf__UnsupportedPolicyRequestFaultType_Description
    { public:
/// __item wraps simpleContent of type xs:string.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
  @ _xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }>                                   Description                    0;	///< Multiple elements.
    class _wsrfbf__UnsupportedPolicyRequestFaultType_FaultCause
    { public:
/// <any namespace="##other" minOccurs="1" maxOccurs="1">
    xsd__anyType                         __any                         0;	///< Store any element content in DOM soap_dom_element node.
    }                                   *FaultCause                     0;	///< Optional element.
/// <anyAttribute namespace="##other">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
    END OF INHERITED FROM wsrfbf__BaseFaultType */
/// Vector of xsd__QName of length 0..unbounded.
    std::vector<xsd__QName             > UnsupportedPolicy              0;	///< Multiple elements.
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":NotifyMessageNotSupportedFaultType is a complexType with complexContent extension of type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
class wsnt__NotifyMessageNotSupportedFaultType : public wsrfbf__BaseFaultType
{ public:
/*  INHERITED FROM wsrfbf__BaseFaultType:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Element "Timestamp" of type xs:dateTime.
    xsd__dateTime                        Timestamp                      1;	///< Required element.
/// Element "Originator" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
    class _wsrfbf__NotifyMessageNotSupportedFaultType_ErrorCode
    { public:
/// Attribute "dialect" of type xs:anyURI.
  @ xsd__anyURI                          dialect                        1;	///< Required attribute.
/// Mixed content.
    xsd__anyType                         __mixed                       0;	///< Store mixed content as xsd:any (by default a xsd__anyType DOM soap_dom_element linked node structure).
    }                                   *ErrorCode                      0;	///< Optional element.
/// Vector of Description of length 0..unbounded.
    std::vector<
    class _wsrfbf__NotifyMessageNotSupportedFaultType_Description
    { public:
/// __item wraps simpleContent of type xs:string.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
  @ _xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }>                                   Description                    0;	///< Multiple elements.
    class _wsrfbf__NotifyMessageNotSupportedFaultType_FaultCause
    { public:
/// <any namespace="##other" minOccurs="1" maxOccurs="1">
    xsd__anyType                         __any                         0;	///< Store any element content in DOM soap_dom_element node.
    }                                   *FaultCause                     0;	///< Optional element.
/// <anyAttribute namespace="##other">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
    END OF INHERITED FROM wsrfbf__BaseFaultType */
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":UnacceptableInitialTerminationTimeFaultType is a complexType with complexContent extension of type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
class wsnt__UnacceptableInitialTerminationTimeFaultType : public wsrfbf__BaseFaultType
{ public:
/*  INHERITED FROM wsrfbf__BaseFaultType:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Element "Timestamp" of type xs:dateTime.
    xsd__dateTime                        Timestamp                      1;	///< Required element.
/// Element "Originator" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
    class _wsrfbf__UnacceptableInitialTerminationTimeFaultType_ErrorCode
    { public:
/// Attribute "dialect" of type xs:anyURI.
  @ xsd__anyURI                          dialect                        1;	///< Required attribute.
/// Mixed content.
    xsd__anyType                         __mixed                       0;	///< Store mixed content as xsd:any (by default a xsd__anyType DOM soap_dom_element linked node structure).
    }                                   *ErrorCode                      0;	///< Optional element.
/// Vector of Description of length 0..unbounded.
    std::vector<
    class _wsrfbf__UnacceptableInitialTerminationTimeFaultType_Description
    { public:
/// __item wraps simpleContent of type xs:string.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
  @ _xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }>                                   Description                    0;	///< Multiple elements.
    class _wsrfbf__UnacceptableInitialTerminationTimeFaultType_FaultCause
    { public:
/// <any namespace="##other" minOccurs="1" maxOccurs="1">
    xsd__anyType                         __any                         0;	///< Store any element content in DOM soap_dom_element node.
    }                                   *FaultCause                     0;	///< Optional element.
/// <anyAttribute namespace="##other">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
    END OF INHERITED FROM wsrfbf__BaseFaultType */
/// Element "MinimumTime" of type xs:dateTime.
    xsd__dateTime                        MinimumTime                    1;	///< Required element.
/// Element "MaximumTime" of type xs:dateTime.
    xsd__dateTime*                       MaximumTime                    0;	///< Optional element.
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":NoCurrentMessageOnTopicFaultType is a complexType with complexContent extension of type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
class wsnt__NoCurrentMessageOnTopicFaultType : public wsrfbf__BaseFaultType
{ public:
/*  INHERITED FROM wsrfbf__BaseFaultType:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Element "Timestamp" of type xs:dateTime.
    xsd__dateTime                        Timestamp                      1;	///< Required element.
/// Element "Originator" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
    class _wsrfbf__NoCurrentMessageOnTopicFaultType_ErrorCode
    { public:
/// Attribute "dialect" of type xs:anyURI.
  @ xsd__anyURI                          dialect                        1;	///< Required attribute.
/// Mixed content.
    xsd__anyType                         __mixed                       0;	///< Store mixed content as xsd:any (by default a xsd__anyType DOM soap_dom_element linked node structure).
    }                                   *ErrorCode                      0;	///< Optional element.
/// Vector of Description of length 0..unbounded.
    std::vector<
    class _wsrfbf__NoCurrentMessageOnTopicFaultType_Description
    { public:
/// __item wraps simpleContent of type xs:string.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
  @ _xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }>                                   Description                    0;	///< Multiple elements.
    class _wsrfbf__NoCurrentMessageOnTopicFaultType_FaultCause
    { public:
/// <any namespace="##other" minOccurs="1" maxOccurs="1">
    xsd__anyType                         __any                         0;	///< Store any element content in DOM soap_dom_element node.
    }                                   *FaultCause                     0;	///< Optional element.
/// <anyAttribute namespace="##other">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
    END OF INHERITED FROM wsrfbf__BaseFaultType */
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":UnableToGetMessagesFaultType is a complexType with complexContent extension of type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
class wsnt__UnableToGetMessagesFaultType : public wsrfbf__BaseFaultType
{ public:
/*  INHERITED FROM wsrfbf__BaseFaultType:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Element "Timestamp" of type xs:dateTime.
    xsd__dateTime                        Timestamp                      1;	///< Required element.
/// Element "Originator" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
    class _wsrfbf__UnableToGetMessagesFaultType_ErrorCode
    { public:
/// Attribute "dialect" of type xs:anyURI.
  @ xsd__anyURI                          dialect                        1;	///< Required attribute.
/// Mixed content.
    xsd__anyType                         __mixed                       0;	///< Store mixed content as xsd:any (by default a xsd__anyType DOM soap_dom_element linked node structure).
    }                                   *ErrorCode                      0;	///< Optional element.
/// Vector of Description of length 0..unbounded.
    std::vector<
    class _wsrfbf__UnableToGetMessagesFaultType_Description
    { public:
/// __item wraps simpleContent of type xs:string.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
  @ _xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }>                                   Description                    0;	///< Multiple elements.
    class _wsrfbf__UnableToGetMessagesFaultType_FaultCause
    { public:
/// <any namespace="##other" minOccurs="1" maxOccurs="1">
    xsd__anyType                         __any                         0;	///< Store any element content in DOM soap_dom_element node.
    }                                   *FaultCause                     0;	///< Optional element.
/// <anyAttribute namespace="##other">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
    END OF INHERITED FROM wsrfbf__BaseFaultType */
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":UnableToDestroyPullPointFaultType is a complexType with complexContent extension of type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
class wsnt__UnableToDestroyPullPointFaultType : public wsrfbf__BaseFaultType
{ public:
/*  INHERITED FROM wsrfbf__BaseFaultType:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Element "Timestamp" of type xs:dateTime.
    xsd__dateTime                        Timestamp                      1;	///< Required element.
/// Element "Originator" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
    class _wsrfbf__UnableToDestroyPullPointFaultType_ErrorCode
    { public:
/// Attribute "dialect" of type xs:anyURI.
  @ xsd__anyURI                          dialect                        1;	///< Required attribute.
/// Mixed content.
    xsd__anyType                         __mixed                       0;	///< Store mixed content as xsd:any (by default a xsd__anyType DOM soap_dom_element linked node structure).
    }                                   *ErrorCode                      0;	///< Optional element.
/// Vector of Description of length 0..unbounded.
    std::vector<
    class _wsrfbf__UnableToDestroyPullPointFaultType_Description
    { public:
/// __item wraps simpleContent of type xs:string.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
  @ _xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }>                                   Description                    0;	///< Multiple elements.
    class _wsrfbf__UnableToDestroyPullPointFaultType_FaultCause
    { public:
/// <any namespace="##other" minOccurs="1" maxOccurs="1">
    xsd__anyType                         __any                         0;	///< Store any element content in DOM soap_dom_element node.
    }                                   *FaultCause                     0;	///< Optional element.
/// <anyAttribute namespace="##other">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
    END OF INHERITED FROM wsrfbf__BaseFaultType */
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":UnableToCreatePullPointFaultType is a complexType with complexContent extension of type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
class wsnt__UnableToCreatePullPointFaultType : public wsrfbf__BaseFaultType
{ public:
/*  INHERITED FROM wsrfbf__BaseFaultType:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Element "Timestamp" of type xs:dateTime.
    xsd__dateTime                        Timestamp                      1;	///< Required element.
/// Element "Originator" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
    class _wsrfbf__UnableToCreatePullPointFaultType_ErrorCode
    { public:
/// Attribute "dialect" of type xs:anyURI.
  @ xsd__anyURI                          dialect                        1;	///< Required attribute.
/// Mixed content.
    xsd__anyType                         __mixed                       0;	///< Store mixed content as xsd:any (by default a xsd__anyType DOM soap_dom_element linked node structure).
    }                                   *ErrorCode                      0;	///< Optional element.
/// Vector of Description of length 0..unbounded.
    std::vector<
    class _wsrfbf__UnableToCreatePullPointFaultType_Description
    { public:
/// __item wraps simpleContent of type xs:string.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
  @ _xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }>                                   Description                    0;	///< Multiple elements.
    class _wsrfbf__UnableToCreatePullPointFaultType_FaultCause
    { public:
/// <any namespace="##other" minOccurs="1" maxOccurs="1">
    xsd__anyType                         __any                         0;	///< Store any element content in DOM soap_dom_element node.
    }                                   *FaultCause                     0;	///< Optional element.
/// <anyAttribute namespace="##other">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
    END OF INHERITED FROM wsrfbf__BaseFaultType */
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":UnacceptableTerminationTimeFaultType is a complexType with complexContent extension of type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
class wsnt__UnacceptableTerminationTimeFaultType : public wsrfbf__BaseFaultType
{ public:
/*  INHERITED FROM wsrfbf__BaseFaultType:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Element "Timestamp" of type xs:dateTime.
    xsd__dateTime                        Timestamp                      1;	///< Required element.
/// Element "Originator" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
    class _wsrfbf__UnacceptableTerminationTimeFaultType_ErrorCode
    { public:
/// Attribute "dialect" of type xs:anyURI.
  @ xsd__anyURI                          dialect                        1;	///< Required attribute.
/// Mixed content.
    xsd__anyType                         __mixed                       0;	///< Store mixed content as xsd:any (by default a xsd__anyType DOM soap_dom_element linked node structure).
    }                                   *ErrorCode                      0;	///< Optional element.
/// Vector of Description of length 0..unbounded.
    std::vector<
    class _wsrfbf__UnacceptableTerminationTimeFaultType_Description
    { public:
/// __item wraps simpleContent of type xs:string.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
  @ _xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }>                                   Description                    0;	///< Multiple elements.
    class _wsrfbf__UnacceptableTerminationTimeFaultType_FaultCause
    { public:
/// <any namespace="##other" minOccurs="1" maxOccurs="1">
    xsd__anyType                         __any                         0;	///< Store any element content in DOM soap_dom_element node.
    }                                   *FaultCause                     0;	///< Optional element.
/// <anyAttribute namespace="##other">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
    END OF INHERITED FROM wsrfbf__BaseFaultType */
/// Element "MinimumTime" of type xs:dateTime.
    xsd__dateTime                        MinimumTime                    1;	///< Required element.
/// Element "MaximumTime" of type xs:dateTime.
    xsd__dateTime*                       MaximumTime                    0;	///< Optional element.
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":UnableToDestroySubscriptionFaultType is a complexType with complexContent extension of type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
class wsnt__UnableToDestroySubscriptionFaultType : public wsrfbf__BaseFaultType
{ public:
/*  INHERITED FROM wsrfbf__BaseFaultType:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Element "Timestamp" of type xs:dateTime.
    xsd__dateTime                        Timestamp                      1;	///< Required element.
/// Element "Originator" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
    class _wsrfbf__UnableToDestroySubscriptionFaultType_ErrorCode
    { public:
/// Attribute "dialect" of type xs:anyURI.
  @ xsd__anyURI                          dialect                        1;	///< Required attribute.
/// Mixed content.
    xsd__anyType                         __mixed                       0;	///< Store mixed content as xsd:any (by default a xsd__anyType DOM soap_dom_element linked node structure).
    }                                   *ErrorCode                      0;	///< Optional element.
/// Vector of Description of length 0..unbounded.
    std::vector<
    class _wsrfbf__UnableToDestroySubscriptionFaultType_Description
    { public:
/// __item wraps simpleContent of type xs:string.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
  @ _xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }>                                   Description                    0;	///< Multiple elements.
    class _wsrfbf__UnableToDestroySubscriptionFaultType_FaultCause
    { public:
/// <any namespace="##other" minOccurs="1" maxOccurs="1">
    xsd__anyType                         __any                         0;	///< Store any element content in DOM soap_dom_element node.
    }                                   *FaultCause                     0;	///< Optional element.
/// <anyAttribute namespace="##other">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
    END OF INHERITED FROM wsrfbf__BaseFaultType */
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":PauseFailedFaultType is a complexType with complexContent extension of type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
class wsnt__PauseFailedFaultType : public wsrfbf__BaseFaultType
{ public:
/*  INHERITED FROM wsrfbf__BaseFaultType:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Element "Timestamp" of type xs:dateTime.
    xsd__dateTime                        Timestamp                      1;	///< Required element.
/// Element "Originator" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
    class _wsrfbf__PauseFailedFaultType_ErrorCode
    { public:
/// Attribute "dialect" of type xs:anyURI.
  @ xsd__anyURI                          dialect                        1;	///< Required attribute.
/// Mixed content.
    xsd__anyType                         __mixed                       0;	///< Store mixed content as xsd:any (by default a xsd__anyType DOM soap_dom_element linked node structure).
    }                                   *ErrorCode                      0;	///< Optional element.
/// Vector of Description of length 0..unbounded.
    std::vector<
    class _wsrfbf__PauseFailedFaultType_Description
    { public:
/// __item wraps simpleContent of type xs:string.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
  @ _xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }>                                   Description                    0;	///< Multiple elements.
    class _wsrfbf__PauseFailedFaultType_FaultCause
    { public:
/// <any namespace="##other" minOccurs="1" maxOccurs="1">
    xsd__anyType                         __any                         0;	///< Store any element content in DOM soap_dom_element node.
    }                                   *FaultCause                     0;	///< Optional element.
/// <anyAttribute namespace="##other">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
    END OF INHERITED FROM wsrfbf__BaseFaultType */
};

/// @brief "http://docs.oasis-open.org/wsn/b-2":ResumeFailedFaultType is a complexType with complexContent extension of type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
class wsnt__ResumeFailedFaultType : public wsrfbf__BaseFaultType
{ public:
/*  INHERITED FROM wsrfbf__BaseFaultType:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Element "Timestamp" of type xs:dateTime.
    xsd__dateTime                        Timestamp                      1;	///< Required element.
/// Element "Originator" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
    class _wsrfbf__ResumeFailedFaultType_ErrorCode
    { public:
/// Attribute "dialect" of type xs:anyURI.
  @ xsd__anyURI                          dialect                        1;	///< Required attribute.
/// Mixed content.
    xsd__anyType                         __mixed                       0;	///< Store mixed content as xsd:any (by default a xsd__anyType DOM soap_dom_element linked node structure).
    }                                   *ErrorCode                      0;	///< Optional element.
/// Vector of Description of length 0..unbounded.
    std::vector<
    class _wsrfbf__ResumeFailedFaultType_Description
    { public:
/// __item wraps simpleContent of type xs:string.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
  @ _xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }>                                   Description                    0;	///< Multiple elements.
    class _wsrfbf__ResumeFailedFaultType_FaultCause
    { public:
/// <any namespace="##other" minOccurs="1" maxOccurs="1">
    xsd__anyType                         __any                         0;	///< Store any element content in DOM soap_dom_element node.
    }                                   *FaultCause                     0;	///< Optional element.
/// <anyAttribute namespace="##other">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
    END OF INHERITED FROM wsrfbf__BaseFaultType */
};

/// @brief "http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFaultType is a complexType with complexContent extension of type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
class wsrfr__ResourceUnknownFaultType : public wsrfbf__BaseFaultType
{ public:
/*  INHERITED FROM wsrfbf__BaseFaultType:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Element "Timestamp" of type xs:dateTime.
    xsd__dateTime                        Timestamp                      1;	///< Required element.
/// Element "Originator" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
    class _wsrfbf__ResourceUnknownFaultType_ErrorCode
    { public:
/// Attribute "dialect" of type xs:anyURI.
  @ xsd__anyURI                          dialect                        1;	///< Required attribute.
/// Mixed content.
    xsd__anyType                         __mixed                       0;	///< Store mixed content as xsd:any (by default a xsd__anyType DOM soap_dom_element linked node structure).
    }                                   *ErrorCode                      0;	///< Optional element.
/// Vector of Description of length 0..unbounded.
    std::vector<
    class _wsrfbf__ResourceUnknownFaultType_Description
    { public:
/// __item wraps simpleContent of type xs:string.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
  @ _xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }>                                   Description                    0;	///< Multiple elements.
    class _wsrfbf__ResourceUnknownFaultType_FaultCause
    { public:
/// <any namespace="##other" minOccurs="1" maxOccurs="1">
    xsd__anyType                         __any                         0;	///< Store any element content in DOM soap_dom_element node.
    }                                   *FaultCause                     0;	///< Optional element.
/// <anyAttribute namespace="##other">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
    END OF INHERITED FROM wsrfbf__BaseFaultType */
};

/// @brief "http://docs.oasis-open.org/wsrf/r-2":ResourceUnavailableFaultType is a complexType with complexContent extension of type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
///
class wsrfr__ResourceUnavailableFaultType : public wsrfbf__BaseFaultType
{ public:
/*  INHERITED FROM wsrfbf__BaseFaultType:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Element "Timestamp" of type xs:dateTime.
    xsd__dateTime                        Timestamp                      1;	///< Required element.
/// Element "Originator" of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
    class _wsrfbf__ResourceUnavailableFaultType_ErrorCode
    { public:
/// Attribute "dialect" of type xs:anyURI.
  @ xsd__anyURI                          dialect                        1;	///< Required attribute.
/// Mixed content.
    xsd__anyType                         __mixed                       0;	///< Store mixed content as xsd:any (by default a xsd__anyType DOM soap_dom_element linked node structure).
    }                                   *ErrorCode                      0;	///< Optional element.
/// Vector of Description of length 0..unbounded.
    std::vector<
    class _wsrfbf__ResourceUnavailableFaultType_Description
    { public:
/// __item wraps simpleContent of type xs:string.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
  @ _xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }>                                   Description                    0;	///< Multiple elements.
    class _wsrfbf__ResourceUnavailableFaultType_FaultCause
    { public:
/// <any namespace="##other" minOccurs="1" maxOccurs="1">
    xsd__anyType                         __any                         0;	///< Store any element content in DOM soap_dom_element node.
    }                                   *FaultCause                     0;	///< Optional element.
/// <anyAttribute namespace="##other">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
    END OF INHERITED FROM wsrfbf__BaseFaultType */
};

/// @brief "http://www.onvif.org/ver10/device/wsdl":StorageConfiguration is a complexType with complexContent extension of type "http://www.onvif.org/ver10/schema":DeviceEntity.
///
class tds__StorageConfiguration : public tt__DeviceEntity
{ public:
/*  INHERITED FROM tt__DeviceEntity:
/// <PRE><BLOCKQUOTE>
///   Unique identifier referencing the physical entity.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   token                          1;	///< Required attribute.
    END OF INHERITED FROM tt__DeviceEntity */
/// Element "Data" of type "http://www.onvif.org/ver10/device/wsdl":StorageConfigurationData.
    tds__StorageConfigurationData*       Data                           1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/deviceIO/wsdl":SerialPort is a complexType with complexContent extension of type "http://www.onvif.org/ver10/schema":DeviceEntity.
///
/// <PRE><BLOCKQUOTE>
///   Lists all available serial ports of a device
/// </BLOCKQUOTE></PRE>
///
class tmd__SerialPort : public tt__DeviceEntity
{ public:
/*  INHERITED FROM tt__DeviceEntity:
/// <PRE><BLOCKQUOTE>
///   Unique identifier referencing the physical entity.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   token                          1;	///< Required attribute.
    END OF INHERITED FROM tt__DeviceEntity */
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://docs.oasis-open.org/wsn/t-1":TopicNamespaceType is a complexType with complexContent extension of type "http://docs.oasis-open.org/wsn/t-1":ExtensibleDocumented.
///
class wstop__TopicNamespaceType : public wstop__ExtensibleDocumented
{ public:
/*  INHERITED FROM wstop__ExtensibleDocumented:
/// Element "documentation" of type "http://docs.oasis-open.org/wsn/t-1":Documentation.
    wstop__Documentation*                documentation                  0;	///< Optional element.
/// <anyAttribute namespace="##other">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
    END OF INHERITED FROM wstop__ExtensibleDocumented */
/// Vector of Topic of length 0..unbounded.
    std::vector<
    class _wstop__TopicNamespaceType_Topic
    { public:
/// INHERITED FROM wstop__ExtensibleDocumented:
/// Element "documentation" of type "http://docs.oasis-open.org/wsn/t-1":Documentation.
    wstop__Documentation*                documentation                  0;	///< Optional element.
/// <anyAttribute namespace="##other">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
//  END OF INHERITED FROM wstop__ExtensibleDocumented
/// INHERITED FROM wstop__TopicType:
/// Element "MessagePattern" of type "http://docs.oasis-open.org/wsn/t-1":QueryExpressionType.
    wstop__QueryExpressionType*          MessagePattern                 0;	///< Optional element.
/// Vector of wstop__TopicType* of length 0..unbounded.
    std::vector<wstop__TopicType*      > Topic                          0;	///< Multiple elements.
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Attribute "name" of type xs:NCName.
  @ xsd__NCName                          name                           1;	///< Required attribute.
@    xsd__QName                                                         

                                        *messageTypes                   0;	///< Optional attribute.
/// Attribute "final" of type xs:boolean.
  @ bool                                 final_                         0 = false;	///< Optional attribute with default value="false".
//  END OF INHERITED FROM wstop__TopicType
/// Attribute "parent" of type "http://docs.oasis-open.org/wsn/t-1":ConcreteTopicExpression.
  @ wstop__ConcreteTopicExpression*      parent                         0;	///< Optional attribute.
    }>                                   Topic                          0;	///< Multiple elements.
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Attribute "name" of type xs:NCName.
  @ xsd__NCName*                         name                           0;	///< Optional attribute.
/// Attribute "targetNamespace" of type xs:anyURI.
  @ xsd__anyURI                          targetNamespace                1;	///< Required attribute.
/// Attribute "final" of type xs:boolean.
  @ bool                                 final_                         0 = false;	///< Optional attribute with default value="false".
};

/// @brief "http://docs.oasis-open.org/wsn/t-1":TopicType is a complexType with complexContent extension of type "http://docs.oasis-open.org/wsn/t-1":ExtensibleDocumented.
///
class wstop__TopicType : public wstop__ExtensibleDocumented
{ public:
/*  INHERITED FROM wstop__ExtensibleDocumented:
/// Element "documentation" of type "http://docs.oasis-open.org/wsn/t-1":Documentation.
    wstop__Documentation*                documentation                  0;	///< Optional element.
/// <anyAttribute namespace="##other">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
    END OF INHERITED FROM wstop__ExtensibleDocumented */
/// Element "MessagePattern" of type "http://docs.oasis-open.org/wsn/t-1":QueryExpressionType.
    wstop__QueryExpressionType*          MessagePattern                 0;	///< Optional element.
/// Vector of wstop__TopicType* of length 0..unbounded.
    std::vector<wstop__TopicType*      > Topic                          0;	///< Multiple elements.
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Attribute "name" of type xs:NCName.
  @ xsd__NCName                          name                           1;	///< Required attribute.
@    xsd__QName                                                         

                                        *messageTypes                   0;	///< Optional attribute.
/// Attribute "final" of type xs:boolean.
  @ bool                                 final_                         0 = false;	///< Optional attribute with default value="false".
};

/// @brief "http://docs.oasis-open.org/wsn/t-1":TopicSetType is a complexType with complexContent extension of type "http://docs.oasis-open.org/wsn/t-1":ExtensibleDocumented.
///
class wstop__TopicSetType : public wstop__ExtensibleDocumented
{ public:
/*  INHERITED FROM wstop__ExtensibleDocumented:
/// Element "documentation" of type "http://docs.oasis-open.org/wsn/t-1":Documentation.
    wstop__Documentation*                documentation                  0;	///< Optional element.
/// <anyAttribute namespace="##other">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
    END OF INHERITED FROM wstop__ExtensibleDocumented */
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
};

/// @brief "http://www.onvif.org/ver10/schema":VideoSource is a complexType with complexContent extension of type "http://www.onvif.org/ver10/schema":DeviceEntity.
///
/// <PRE><BLOCKQUOTE>
///   Representation of a physical video input.
/// </BLOCKQUOTE></PRE>
///
class tt__VideoSource : public tt__DeviceEntity
{ public:
/*  INHERITED FROM tt__DeviceEntity:
/// <PRE><BLOCKQUOTE>
///   Unique identifier referencing the physical entity.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   token                          1;	///< Required attribute.
    END OF INHERITED FROM tt__DeviceEntity */
/// <PRE><BLOCKQUOTE>
///   Frame rate in frames per second.
/// </BLOCKQUOTE></PRE>
///
/// Element "Framerate" of type xs:float.
    float                                Framerate                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Horizontal and vertical resolution
/// </BLOCKQUOTE></PRE>
///
/// Element "Resolution" of type "http://www.onvif.org/ver10/schema":VideoResolution.
    tt__VideoResolution*                 Resolution                     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional configuration of the image sensor.
/// </BLOCKQUOTE></PRE>
///
/// Element "Imaging" of type "http://www.onvif.org/ver10/schema":ImagingSettings.
    tt__ImagingSettings*                 Imaging                        0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":VideoSourceExtension.
    tt__VideoSourceExtension*            Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":AudioSource is a complexType with complexContent extension of type "http://www.onvif.org/ver10/schema":DeviceEntity.
///
/// <PRE><BLOCKQUOTE>
///   Representation of a physical audio input.
/// </BLOCKQUOTE></PRE>
///
class tt__AudioSource : public tt__DeviceEntity
{ public:
/*  INHERITED FROM tt__DeviceEntity:
/// <PRE><BLOCKQUOTE>
///   Unique identifier referencing the physical entity.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   token                          1;	///< Required attribute.
    END OF INHERITED FROM tt__DeviceEntity */
/// <PRE><BLOCKQUOTE>
///   number of available audio channels. (1: mono, 2: stereo)
/// </BLOCKQUOTE></PRE>
///
/// Element "Channels" of type xs:int.
    int                                  Channels                       1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":VideoSourceConfiguration is a complexType with complexContent extension of type "http://www.onvif.org/ver10/schema":ConfigurationEntity.
///
class tt__VideoSourceConfiguration : public tt__ConfigurationEntity
{ public:
/*  INHERITED FROM tt__ConfigurationEntity:
/// <PRE><BLOCKQUOTE>
///   User readable name. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
///
/// Element "Name" of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Number of internal references currently using this configuration. <p style='margin:0'>This informational parameter is read-only. Deprecated for Media2 Service.</p>
/// </BLOCKQUOTE></PRE>
///
/// Element "UseCount" of type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token that uniquely references this configuration. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   token                          1;	///< Required attribute.
    END OF INHERITED FROM tt__ConfigurationEntity */
/// <PRE><BLOCKQUOTE>
///   Reference to the physical input.
/// </BLOCKQUOTE></PRE>
///
/// Element "SourceToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   SourceToken                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Rectangle specifying the Video capturing area. The capturing area shall not be larger than the whole Video source area.
/// </BLOCKQUOTE></PRE>
///
/// Element "Bounds" of type "http://www.onvif.org/ver10/schema":IntRectangle.
    tt__IntRectangle*                    Bounds                         1;	///< Required element.
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":VideoSourceConfigurationExtension.
    tt__VideoSourceConfigurationExtension*  Extension                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Readonly parameter signalling Source configuration's view mode, for devices supporting different view modes as defined in tt:viewModes.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "ViewMode" of type xs:string.
  @ std::string*                         ViewMode                       0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":VideoEncoderConfiguration is a complexType with complexContent extension of type "http://www.onvif.org/ver10/schema":ConfigurationEntity.
///
class tt__VideoEncoderConfiguration : public tt__ConfigurationEntity
{ public:
/*  INHERITED FROM tt__ConfigurationEntity:
/// <PRE><BLOCKQUOTE>
///   User readable name. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
///
/// Element "Name" of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Number of internal references currently using this configuration. <p style='margin:0'>This informational parameter is read-only. Deprecated for Media2 Service.</p>
/// </BLOCKQUOTE></PRE>
///
/// Element "UseCount" of type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token that uniquely references this configuration. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   token                          1;	///< Required attribute.
    END OF INHERITED FROM tt__ConfigurationEntity */
/// <PRE><BLOCKQUOTE>
///   Used video codec, either Jpeg, H.264 or Mpeg4
/// </BLOCKQUOTE></PRE>
///
/// Element "Encoding" of type "http://www.onvif.org/ver10/schema":VideoEncoding.
    enum tt__VideoEncoding               Encoding                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Configured video resolution
/// </BLOCKQUOTE></PRE>
///
/// Element "Resolution" of type "http://www.onvif.org/ver10/schema":VideoResolution.
    tt__VideoResolution*                 Resolution                     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Relative value for the video quantizers and the quality of the video. A high value within supported quality range means higher quality
/// </BLOCKQUOTE></PRE>
///
/// Element "Quality" of type xs:float.
    float                                Quality                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional element to configure rate control related parameters.
/// </BLOCKQUOTE></PRE>
///
/// Element "RateControl" of type "http://www.onvif.org/ver10/schema":VideoRateControl.
    tt__VideoRateControl*                RateControl                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional element to configure Mpeg4 related parameters.
/// </BLOCKQUOTE></PRE>
///
/// Element "MPEG4" of type "http://www.onvif.org/ver10/schema":Mpeg4Configuration.
    tt__Mpeg4Configuration*              MPEG4                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional element to configure H.264 related parameters.
/// </BLOCKQUOTE></PRE>
///
/// Element "H264" of type "http://www.onvif.org/ver10/schema":H264Configuration.
    tt__H264Configuration*               H264                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Defines the multicast settings that could be used for video streaming.
/// </BLOCKQUOTE></PRE>
///
/// Element "Multicast" of type "http://www.onvif.org/ver10/schema":MulticastConfiguration.
    tt__MulticastConfiguration*          Multicast                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The rtsp session timeout for the related video stream
/// </BLOCKQUOTE></PRE>
///
/// Element "SessionTimeout" of type xs:duration.
    xsd__duration                        SessionTimeout                 1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <PRE><BLOCKQUOTE>
///   A value of true indicates that frame rate is a fixed value rather than an upper limit,
///   and that the video encoder shall prioritize frame rate over all other adaptable
///   configuration values such as bitrate. Default is false.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "GuaranteedFrameRate" of type xs:boolean.
  @ bool*                                GuaranteedFrameRate            0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":JpegOptions2 is a complexType with complexContent extension of type "http://www.onvif.org/ver10/schema":JpegOptions.
///
class tt__JpegOptions2 : public tt__JpegOptions
{ public:
/*  INHERITED FROM tt__JpegOptions:
/// <PRE><BLOCKQUOTE>
///   List of supported image sizes.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__VideoResolution* of length 1..unbounded.
    std::vector<tt__VideoResolution*   > ResolutionsAvailable           1;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Supported frame rate in fps (frames per second).
/// </BLOCKQUOTE></PRE>
///
/// Element "FrameRateRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        FrameRateRange                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Supported encoding interval range. The encoding interval corresponds to the number of frames devided by the encoded frames. An encoding interval value of "1" means that all frames are encoded.
/// </BLOCKQUOTE></PRE>
///
/// Element "EncodingIntervalRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        EncodingIntervalRange          1;	///< Required element.
    END OF INHERITED FROM tt__JpegOptions */
/// <PRE><BLOCKQUOTE>
///   Supported range of encoded bitrate in kbps.
/// </BLOCKQUOTE></PRE>
///
/// Element "BitrateRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        BitrateRange                   1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":Mpeg4Options2 is a complexType with complexContent extension of type "http://www.onvif.org/ver10/schema":Mpeg4Options.
///
class tt__Mpeg4Options2 : public tt__Mpeg4Options
{ public:
/*  INHERITED FROM tt__Mpeg4Options:
/// <PRE><BLOCKQUOTE>
///   List of supported image sizes.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__VideoResolution* of length 1..unbounded.
    std::vector<tt__VideoResolution*   > ResolutionsAvailable           1;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Supported group of Video frames length. This value typically corresponds to the I-Frame distance.
/// </BLOCKQUOTE></PRE>
///
/// Element "GovLengthRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        GovLengthRange                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Supported frame rate in fps (frames per second).
/// </BLOCKQUOTE></PRE>
///
/// Element "FrameRateRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        FrameRateRange                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Supported encoding interval range. The encoding interval corresponds to the number of frames devided by the encoded frames. An encoding interval value of "1" means that all frames are encoded.
/// </BLOCKQUOTE></PRE>
///
/// Element "EncodingIntervalRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        EncodingIntervalRange          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of supported MPEG-4 profiles.
/// </BLOCKQUOTE></PRE>
///
/// Vector of enum tt__Mpeg4Profile of length 1..unbounded.
    std::vector<enum tt__Mpeg4Profile  > Mpeg4ProfilesSupported         1;	///< Multiple elements.
    END OF INHERITED FROM tt__Mpeg4Options */
/// <PRE><BLOCKQUOTE>
///   Supported range of encoded bitrate in kbps.
/// </BLOCKQUOTE></PRE>
///
/// Element "BitrateRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        BitrateRange                   1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":H264Options2 is a complexType with complexContent extension of type "http://www.onvif.org/ver10/schema":H264Options.
///
class tt__H264Options2 : public tt__H264Options
{ public:
/*  INHERITED FROM tt__H264Options:
/// <PRE><BLOCKQUOTE>
///   List of supported image sizes.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__VideoResolution* of length 1..unbounded.
    std::vector<tt__VideoResolution*   > ResolutionsAvailable           1;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Supported group of Video frames length. This value typically corresponds to the I-Frame distance.
/// </BLOCKQUOTE></PRE>
///
/// Element "GovLengthRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        GovLengthRange                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Supported frame rate in fps (frames per second).
/// </BLOCKQUOTE></PRE>
///
/// Element "FrameRateRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        FrameRateRange                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Supported encoding interval range. The encoding interval corresponds to the number of frames devided by the encoded frames. An encoding interval value of "1" means that all frames are encoded.
/// </BLOCKQUOTE></PRE>
///
/// Element "EncodingIntervalRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        EncodingIntervalRange          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of supported H.264 profiles.
/// </BLOCKQUOTE></PRE>
///
/// Vector of enum tt__H264Profile of length 1..unbounded.
    std::vector<enum tt__H264Profile   > H264ProfilesSupported          1;	///< Multiple elements.
    END OF INHERITED FROM tt__H264Options */
/// <PRE><BLOCKQUOTE>
///   Supported range of encoded bitrate in kbps.
/// </BLOCKQUOTE></PRE>
///
/// Element "BitrateRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        BitrateRange                   1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":VideoEncoder2Configuration is a complexType with complexContent extension of type "http://www.onvif.org/ver10/schema":ConfigurationEntity.
///
class tt__VideoEncoder2Configuration : public tt__ConfigurationEntity
{ public:
/*  INHERITED FROM tt__ConfigurationEntity:
/// <PRE><BLOCKQUOTE>
///   User readable name. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
///
/// Element "Name" of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Number of internal references currently using this configuration. <p style='margin:0'>This informational parameter is read-only. Deprecated for Media2 Service.</p>
/// </BLOCKQUOTE></PRE>
///
/// Element "UseCount" of type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token that uniquely references this configuration. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   token                          1;	///< Required attribute.
    END OF INHERITED FROM tt__ConfigurationEntity */
/// <PRE><BLOCKQUOTE>
///   Video Media Subtype for the video format. For definitions see tt:VideoEncodingMimeNames and <a href="https://www.iana.org/assignments/media-types/media-types.xhtml#video"> IANA Media Types</a>.
/// </BLOCKQUOTE></PRE>
///
/// Element "Encoding" of type xs:string.
    std::string                          Encoding                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Configured video resolution
/// </BLOCKQUOTE></PRE>
///
/// Element "Resolution" of type "http://www.onvif.org/ver10/schema":VideoResolution2.
    tt__VideoResolution2*                Resolution                     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional element to configure rate control related parameters.
/// </BLOCKQUOTE></PRE>
///
/// Element "RateControl" of type "http://www.onvif.org/ver10/schema":VideoRateControl2.
    tt__VideoRateControl2*               RateControl                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Defines the multicast settings that could be used for video streaming.
/// </BLOCKQUOTE></PRE>
///
/// Element "Multicast" of type "http://www.onvif.org/ver10/schema":MulticastConfiguration.
    tt__MulticastConfiguration*          Multicast                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Relative value for the video quantizers and the quality of the video. A high value within supported quality range means higher quality
/// </BLOCKQUOTE></PRE>
///
/// Element "Quality" of type xs:float.
    float                                Quality                        1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <PRE><BLOCKQUOTE>
///   Group of Video frames length. Determines typically the interval in which the I-Frames will be coded. An entry of 1 indicates I-Frames are continuously generated. An entry of 2 indicates that every 2nd image is an I-Frame, and 3 only every 3rd frame, etc. The frames in between are coded as P or B Frames.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "GovLength" of type xs:int.
  @ int*                                 GovLength                      0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   The encoder profile as defined in tt:VideoEncodingProfiles.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "Profile" of type xs:string.
  @ std::string*                         Profile                        0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   A value of true indicates that frame rate is a fixed value rather than an upper limit,
///   and that the video encoder shall prioritize frame rate over all other adaptable
///   configuration values such as bitrate. Default is false.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "GuaranteedFrameRate" of type xs:boolean.
  @ bool*                                GuaranteedFrameRate            0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":AudioSourceConfiguration is a complexType with complexContent extension of type "http://www.onvif.org/ver10/schema":ConfigurationEntity.
///
class tt__AudioSourceConfiguration : public tt__ConfigurationEntity
{ public:
/*  INHERITED FROM tt__ConfigurationEntity:
/// <PRE><BLOCKQUOTE>
///   User readable name. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
///
/// Element "Name" of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Number of internal references currently using this configuration. <p style='margin:0'>This informational parameter is read-only. Deprecated for Media2 Service.</p>
/// </BLOCKQUOTE></PRE>
///
/// Element "UseCount" of type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token that uniquely references this configuration. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   token                          1;	///< Required attribute.
    END OF INHERITED FROM tt__ConfigurationEntity */
/// <PRE><BLOCKQUOTE>
///   Token of the Audio Source the configuration applies to
/// </BLOCKQUOTE></PRE>
///
/// Element "SourceToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   SourceToken                    1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":AudioEncoderConfiguration is a complexType with complexContent extension of type "http://www.onvif.org/ver10/schema":ConfigurationEntity.
///
class tt__AudioEncoderConfiguration : public tt__ConfigurationEntity
{ public:
/*  INHERITED FROM tt__ConfigurationEntity:
/// <PRE><BLOCKQUOTE>
///   User readable name. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
///
/// Element "Name" of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Number of internal references currently using this configuration. <p style='margin:0'>This informational parameter is read-only. Deprecated for Media2 Service.</p>
/// </BLOCKQUOTE></PRE>
///
/// Element "UseCount" of type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token that uniquely references this configuration. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   token                          1;	///< Required attribute.
    END OF INHERITED FROM tt__ConfigurationEntity */
/// <PRE><BLOCKQUOTE>
///   Audio codec used for encoding the audio input (either G.711, G.726 or AAC)
/// </BLOCKQUOTE></PRE>
///
/// Element "Encoding" of type "http://www.onvif.org/ver10/schema":AudioEncoding.
    enum tt__AudioEncoding               Encoding                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The output bitrate in kbps.
/// </BLOCKQUOTE></PRE>
///
/// Element "Bitrate" of type xs:int.
    int                                  Bitrate                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The output sample rate in kHz.
/// </BLOCKQUOTE></PRE>
///
/// Element "SampleRate" of type xs:int.
    int                                  SampleRate                     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Defines the multicast settings that could be used for video streaming.
/// </BLOCKQUOTE></PRE>
///
/// Element "Multicast" of type "http://www.onvif.org/ver10/schema":MulticastConfiguration.
    tt__MulticastConfiguration*          Multicast                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The rtsp session timeout for the related audio stream
/// </BLOCKQUOTE></PRE>
///
/// Element "SessionTimeout" of type xs:duration.
    xsd__duration                        SessionTimeout                 1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":AudioEncoder2Configuration is a complexType with complexContent extension of type "http://www.onvif.org/ver10/schema":ConfigurationEntity.
///
class tt__AudioEncoder2Configuration : public tt__ConfigurationEntity
{ public:
/*  INHERITED FROM tt__ConfigurationEntity:
/// <PRE><BLOCKQUOTE>
///   User readable name. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
///
/// Element "Name" of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Number of internal references currently using this configuration. <p style='margin:0'>This informational parameter is read-only. Deprecated for Media2 Service.</p>
/// </BLOCKQUOTE></PRE>
///
/// Element "UseCount" of type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token that uniquely references this configuration. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   token                          1;	///< Required attribute.
    END OF INHERITED FROM tt__ConfigurationEntity */
/// <PRE><BLOCKQUOTE>
///   Audio Media Subtype for the audio format. For definitions see tt:AudioEncodingMimeNames and <a href="https://www.iana.org/assignments/media-types/media-types.xhtml#audio"> IANA Media Types</a>.
/// </BLOCKQUOTE></PRE>
///
/// Element "Encoding" of type xs:string.
    std::string                          Encoding                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional multicast configuration of the audio stream.
/// </BLOCKQUOTE></PRE>
///
/// Element "Multicast" of type "http://www.onvif.org/ver10/schema":MulticastConfiguration.
    tt__MulticastConfiguration*          Multicast                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The output bitrate in kbps.
/// </BLOCKQUOTE></PRE>
///
/// Element "Bitrate" of type xs:int.
    int                                  Bitrate                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The output sample rate in kHz.
/// </BLOCKQUOTE></PRE>
///
/// Element "SampleRate" of type xs:int.
    int                                  SampleRate                     1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":VideoAnalyticsConfiguration is a complexType with complexContent extension of type "http://www.onvif.org/ver10/schema":ConfigurationEntity.
///
class tt__VideoAnalyticsConfiguration : public tt__ConfigurationEntity
{ public:
/*  INHERITED FROM tt__ConfigurationEntity:
/// <PRE><BLOCKQUOTE>
///   User readable name. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
///
/// Element "Name" of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Number of internal references currently using this configuration. <p style='margin:0'>This informational parameter is read-only. Deprecated for Media2 Service.</p>
/// </BLOCKQUOTE></PRE>
///
/// Element "UseCount" of type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token that uniquely references this configuration. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   token                          1;	///< Required attribute.
    END OF INHERITED FROM tt__ConfigurationEntity */
/// Element "AnalyticsEngineConfiguration" of type "http://www.onvif.org/ver10/schema":AnalyticsEngineConfiguration.
    tt__AnalyticsEngineConfiguration*    AnalyticsEngineConfiguration   1;	///< Required element.
/// Element "RuleEngineConfiguration" of type "http://www.onvif.org/ver10/schema":RuleEngineConfiguration.
    tt__RuleEngineConfiguration*         RuleEngineConfiguration        1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":MetadataConfiguration is a complexType with complexContent extension of type "http://www.onvif.org/ver10/schema":ConfigurationEntity.
///
class tt__MetadataConfiguration : public tt__ConfigurationEntity
{ public:
/*  INHERITED FROM tt__ConfigurationEntity:
/// <PRE><BLOCKQUOTE>
///   User readable name. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
///
/// Element "Name" of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Number of internal references currently using this configuration. <p style='margin:0'>This informational parameter is read-only. Deprecated for Media2 Service.</p>
/// </BLOCKQUOTE></PRE>
///
/// Element "UseCount" of type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token that uniquely references this configuration. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   token                          1;	///< Required attribute.
    END OF INHERITED FROM tt__ConfigurationEntity */
/// <PRE><BLOCKQUOTE>
///   optional element to configure which PTZ related data is to include in the metadata stream
/// </BLOCKQUOTE></PRE>
///
/// Element "PTZStatus" of type "http://www.onvif.org/ver10/schema":PTZFilter.
    tt__PTZFilter*                       PTZStatus                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional element to configure the streaming of events. A client might be interested in receiving all, none or some of the events produced by the device:<ul>
///   <li>To get all events: Include the Events element but do not include a filter.</li>
///   <li>To get no events: Do not include the Events element.</li>
///   <li>To get only some events: Include the Events element and include a filter in the element.</li>
///   </ul>
/// </BLOCKQUOTE></PRE>
///
/// Element "Events" of type "http://www.onvif.org/ver10/schema":EventSubscription.
    tt__EventSubscription*               Events                         0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Defines whether the streamed metadata will include metadata from the analytics engines (video, cell motion, audio etc.)
/// </BLOCKQUOTE></PRE>
///
/// Element "Analytics" of type xs:boolean.
    bool*                                Analytics                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Defines the multicast settings that could be used for video streaming.
/// </BLOCKQUOTE></PRE>
///
/// Element "Multicast" of type "http://www.onvif.org/ver10/schema":MulticastConfiguration.
    tt__MulticastConfiguration*          Multicast                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The rtsp session timeout for the related audio stream (when using Media2 Service, this value is deprecated and ignored)
/// </BLOCKQUOTE></PRE>
///
/// Element "SessionTimeout" of type xs:duration.
    xsd__duration                        SessionTimeout                 1;	///< Required element.
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <PRE><BLOCKQUOTE>
///   Indication which AnalyticsModules shall output metadata.
///   Note that the streaming behavior is undefined if the list includes items that are not part of the associated AnalyticsConfiguration.
/// </BLOCKQUOTE></PRE>
///
/// Element "AnalyticsEngineConfiguration" of type "http://www.onvif.org/ver10/schema":AnalyticsEngineConfiguration.
    tt__AnalyticsEngineConfiguration*    AnalyticsEngineConfiguration   0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":MetadataConfigurationExtension.
    tt__MetadataConfigurationExtension*  Extension                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional parameter to configure compression type of Metadata payload. Use values from enumeration MetadataCompressionType.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "CompressionType" of type xs:string.
  @ std::string*                         CompressionType                0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Optional parameter to configure if the metadata stream shall contain the Geo Location coordinates of each target.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "GeoLocation" of type xs:boolean.
  @ bool*                                GeoLocation                    0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Optional parameter to configure if the generated metadata stream should contain shape information as polygon.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "ShapePolygon" of type xs:boolean.
  @ bool*                                ShapePolygon                   0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":VideoOutput is a complexType with complexContent extension of type "http://www.onvif.org/ver10/schema":DeviceEntity.
///
/// <PRE><BLOCKQUOTE>
///   Representation of a physical video outputs.
/// </BLOCKQUOTE></PRE>
///
class tt__VideoOutput : public tt__DeviceEntity
{ public:
/*  INHERITED FROM tt__DeviceEntity:
/// <PRE><BLOCKQUOTE>
///   Unique identifier referencing the physical entity.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   token                          1;	///< Required attribute.
    END OF INHERITED FROM tt__DeviceEntity */
/// Element "Layout" of type "http://www.onvif.org/ver10/schema":Layout.
    tt__Layout*                          Layout                         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Resolution of the display in Pixel.
/// </BLOCKQUOTE></PRE>
///
/// Element "Resolution" of type "http://www.onvif.org/ver10/schema":VideoResolution.
    tt__VideoResolution*                 Resolution                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Refresh rate of the display in Hertz.
/// </BLOCKQUOTE></PRE>
///
/// Element "RefreshRate" of type xs:float.
    float*                               RefreshRate                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Aspect ratio of the display as physical extent of width divided by height.
/// </BLOCKQUOTE></PRE>
///
/// Element "AspectRatio" of type xs:float.
    float*                               AspectRatio                    0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":VideoOutputExtension.
    tt__VideoOutputExtension*            Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":VideoOutputConfiguration is a complexType with complexContent extension of type "http://www.onvif.org/ver10/schema":ConfigurationEntity.
///
class tt__VideoOutputConfiguration : public tt__ConfigurationEntity
{ public:
/*  INHERITED FROM tt__ConfigurationEntity:
/// <PRE><BLOCKQUOTE>
///   User readable name. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
///
/// Element "Name" of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Number of internal references currently using this configuration. <p style='margin:0'>This informational parameter is read-only. Deprecated for Media2 Service.</p>
/// </BLOCKQUOTE></PRE>
///
/// Element "UseCount" of type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token that uniquely references this configuration. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   token                          1;	///< Required attribute.
    END OF INHERITED FROM tt__ConfigurationEntity */
/// <PRE><BLOCKQUOTE>
///   Token of the Video Output the configuration applies to
/// </BLOCKQUOTE></PRE>
///
/// Element "OutputToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   OutputToken                    1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":AudioOutput is a complexType with complexContent extension of type "http://www.onvif.org/ver10/schema":DeviceEntity.
///
/// <PRE><BLOCKQUOTE>
///   Representation of a physical audio outputs.
/// </BLOCKQUOTE></PRE>
///
class tt__AudioOutput : public tt__DeviceEntity
{ public:
/*  INHERITED FROM tt__DeviceEntity:
/// <PRE><BLOCKQUOTE>
///   Unique identifier referencing the physical entity.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   token                          1;	///< Required attribute.
    END OF INHERITED FROM tt__DeviceEntity */
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":AudioOutputConfiguration is a complexType with complexContent extension of type "http://www.onvif.org/ver10/schema":ConfigurationEntity.
///
class tt__AudioOutputConfiguration : public tt__ConfigurationEntity
{ public:
/*  INHERITED FROM tt__ConfigurationEntity:
/// <PRE><BLOCKQUOTE>
///   User readable name. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
///
/// Element "Name" of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Number of internal references currently using this configuration. <p style='margin:0'>This informational parameter is read-only. Deprecated for Media2 Service.</p>
/// </BLOCKQUOTE></PRE>
///
/// Element "UseCount" of type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token that uniquely references this configuration. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   token                          1;	///< Required attribute.
    END OF INHERITED FROM tt__ConfigurationEntity */
/// <PRE><BLOCKQUOTE>
///   Token of the phsycial Audio output.
/// </BLOCKQUOTE></PRE>
///
/// Element "OutputToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   OutputToken                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   An audio channel MAY support different types of audio transmission. While for full duplex
///   operation no special handling is required, in half duplex operation the transmission direction
///   needs to be switched.
///   The optional SendPrimacy parameter inside the AudioOutputConfiguration indicates which
///   direction is currently active. An NVC can switch between different modes by setting the
///   AudioOutputConfiguration.<br/>
///   The following modes for the Send-Primacy are defined:<ul>
///   <li>www.onvif.org/ver20/HalfDuplex/Server
///   The server is allowed to send audio data to the client. The client shall not send
///   audio data via the backchannel to the NVT in this mode.</li>
///   <li>www.onvif.org/ver20/HalfDuplex/Client
///   The client is allowed to send audio data via the backchannel to the server. The
///   NVT shall not send audio data to the client in this mode.</li>
///   <li>www.onvif.org/ver20/HalfDuplex/Auto
///   It is up to the device how to deal with sending and receiving audio data.</li>
///   </ul>
///   Acoustic echo cancellation is out of ONVIF scope.
/// </BLOCKQUOTE></PRE>
///
/// Element "SendPrimacy" of type xs:anyURI.
    xsd__anyURI*                         SendPrimacy                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Volume setting of the output. The applicable range is defined via the option AudioOutputOptions.OutputLevelRange.
/// </BLOCKQUOTE></PRE>
///
/// Element "OutputLevel" of type xs:int.
    int                                  OutputLevel                    1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":AudioDecoderConfiguration is a complexType with complexContent extension of type "http://www.onvif.org/ver10/schema":ConfigurationEntity.
///
/// <PRE><BLOCKQUOTE>
///   The Audio Decoder Configuration does not contain any that parameter to configure the
///   decoding .A decoder shall decode every data it receives (according to its capabilities).
/// </BLOCKQUOTE></PRE>
///
class tt__AudioDecoderConfiguration : public tt__ConfigurationEntity
{ public:
/*  INHERITED FROM tt__ConfigurationEntity:
/// <PRE><BLOCKQUOTE>
///   User readable name. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
///
/// Element "Name" of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Number of internal references currently using this configuration. <p style='margin:0'>This informational parameter is read-only. Deprecated for Media2 Service.</p>
/// </BLOCKQUOTE></PRE>
///
/// Element "UseCount" of type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token that uniquely references this configuration. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   token                          1;	///< Required attribute.
    END OF INHERITED FROM tt__ConfigurationEntity */
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkInterface is a complexType with complexContent extension of type "http://www.onvif.org/ver10/schema":DeviceEntity.
///
class tt__NetworkInterface : public tt__DeviceEntity
{ public:
/*  INHERITED FROM tt__DeviceEntity:
/// <PRE><BLOCKQUOTE>
///   Unique identifier referencing the physical entity.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   token                          1;	///< Required attribute.
    END OF INHERITED FROM tt__DeviceEntity */
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not an interface is enabled.
/// </BLOCKQUOTE></PRE>
///
/// Element "Enabled" of type xs:boolean.
    bool                                 Enabled                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Network interface information
/// </BLOCKQUOTE></PRE>
///
/// Element "Info" of type "http://www.onvif.org/ver10/schema":NetworkInterfaceInfo.
    tt__NetworkInterfaceInfo*            Info                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Link configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "Link" of type "http://www.onvif.org/ver10/schema":NetworkInterfaceLink.
    tt__NetworkInterfaceLink*            Link                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   IPv4 network interface configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "IPv4" of type "http://www.onvif.org/ver10/schema":IPv4NetworkInterface.
    tt__IPv4NetworkInterface*            IPv4                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   IPv6 network interface configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "IPv6" of type "http://www.onvif.org/ver10/schema":IPv6NetworkInterface.
    tt__IPv6NetworkInterface*            IPv6                           0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":NetworkInterfaceExtension.
    tt__NetworkInterfaceExtension*       Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":CertificateUsage is a complexType with simpleContent extension of type xs:string.
///
class tt__CertificateUsage : public xsd__anyType
{ public:
/// __item wraps simpleContent of type xs:string.
    std::string                          __item                        ;
/// Attribute "Critical" of type xs:boolean.
  @ bool                                 Critical                       1;	///< Required attribute.
};

/// @brief "http://www.onvif.org/ver10/schema":RelayOutput is a complexType with complexContent extension of type "http://www.onvif.org/ver10/schema":DeviceEntity.
///
class tt__RelayOutput : public tt__DeviceEntity
{ public:
/*  INHERITED FROM tt__DeviceEntity:
/// <PRE><BLOCKQUOTE>
///   Unique identifier referencing the physical entity.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   token                          1;	///< Required attribute.
    END OF INHERITED FROM tt__DeviceEntity */
/// Element "Properties" of type "http://www.onvif.org/ver10/schema":RelayOutputSettings.
    tt__RelayOutputSettings*             Properties                     1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":DigitalInput is a complexType with complexContent extension of type "http://www.onvif.org/ver10/schema":DeviceEntity.
///
class tt__DigitalInput : public tt__DeviceEntity
{ public:
/*  INHERITED FROM tt__DeviceEntity:
/// <PRE><BLOCKQUOTE>
///   Unique identifier referencing the physical entity.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   token                          1;	///< Required attribute.
    END OF INHERITED FROM tt__DeviceEntity */
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <PRE><BLOCKQUOTE>
///   Indicate the Digital IdleState status.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "IdleState" of type "http://www.onvif.org/ver10/schema":DigitalIdleState.
  @ enum tt__DigitalIdleState*           IdleState                      0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZNode is a complexType with complexContent extension of type "http://www.onvif.org/ver10/schema":DeviceEntity.
///
class tt__PTZNode : public tt__DeviceEntity
{ public:
/*  INHERITED FROM tt__DeviceEntity:
/// <PRE><BLOCKQUOTE>
///   Unique identifier referencing the physical entity.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   token                          1;	///< Required attribute.
    END OF INHERITED FROM tt__DeviceEntity */
/// <PRE><BLOCKQUOTE>
///   A unique identifier that is used to reference PTZ Nodes.
/// </BLOCKQUOTE></PRE>
///
/// Element "Name" of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name*                            Name                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   A list of Coordinate Systems available for the PTZ Node. For each Coordinate System, the PTZ Node MUST specify its allowed range.
/// </BLOCKQUOTE></PRE>
///
/// Element "SupportedPTZSpaces" of type "http://www.onvif.org/ver10/schema":PTZSpaces.
    tt__PTZSpaces*                       SupportedPTZSpaces             1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   All preset operations MUST be available for this PTZ Node if one preset is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "MaximumNumberOfPresets" of type xs:int.
    int                                  MaximumNumberOfPresets         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A boolean operator specifying the availability of a home position. If set to true, the Home Position Operations MUST be available for this PTZ Node.
/// </BLOCKQUOTE></PRE>
///
/// Element "HomeSupported" of type xs:boolean.
    bool                                 HomeSupported                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A list of supported Auxiliary commands. If the list is not empty, the Auxiliary Operations MUST be available for this PTZ Node.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__AuxiliaryData of length 0..unbounded.
    std::vector<tt__AuxiliaryData      > AuxiliaryCommands              0;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":PTZNodeExtension.
    tt__PTZNodeExtension*                Extension                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Indication whether the HomePosition of a Node is fixed or it can be changed via the SetHomePosition command.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "FixedHomePosition" of type xs:boolean.
  @ bool*                                FixedHomePosition              0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indication whether the Node supports the geo-referenced move command.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "GeoMove" of type xs:boolean.
  @ bool*                                GeoMove                        0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":PTZConfiguration is a complexType with complexContent extension of type "http://www.onvif.org/ver10/schema":ConfigurationEntity.
///
class tt__PTZConfiguration : public tt__ConfigurationEntity
{ public:
/*  INHERITED FROM tt__ConfigurationEntity:
/// <PRE><BLOCKQUOTE>
///   User readable name. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
///
/// Element "Name" of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Number of internal references currently using this configuration. <p style='margin:0'>This informational parameter is read-only. Deprecated for Media2 Service.</p>
/// </BLOCKQUOTE></PRE>
///
/// Element "UseCount" of type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token that uniquely references this configuration. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   token                          1;	///< Required attribute.
    END OF INHERITED FROM tt__ConfigurationEntity */
/// <PRE><BLOCKQUOTE>
///   A mandatory reference to the PTZ Node that the PTZ Configuration belongs to.
/// </BLOCKQUOTE></PRE>
///
/// Element "NodeToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   NodeToken                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   If the PTZ Node supports absolute Pan/Tilt movements, it shall specify one Absolute Pan/Tilt Position Space as default.
/// </BLOCKQUOTE></PRE>
///
/// Element "DefaultAbsolutePantTiltPositionSpace" of type xs:anyURI.
    xsd__anyURI*                         DefaultAbsolutePantTiltPositionSpace 0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If the PTZ Node supports absolute zoom movements, it shall specify one Absolute Zoom Position Space as default.
/// </BLOCKQUOTE></PRE>
///
/// Element "DefaultAbsoluteZoomPositionSpace" of type xs:anyURI.
    xsd__anyURI*                         DefaultAbsoluteZoomPositionSpace 0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If the PTZ Node supports relative Pan/Tilt movements, it shall specify one RelativePan/Tilt Translation Space as default.
/// </BLOCKQUOTE></PRE>
///
/// Element "DefaultRelativePanTiltTranslationSpace" of type xs:anyURI.
    xsd__anyURI*                         DefaultRelativePanTiltTranslationSpace 0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If the PTZ Node supports relative zoom movements, it shall specify one Relative Zoom Translation Space as default.
/// </BLOCKQUOTE></PRE>
///
/// Element "DefaultRelativeZoomTranslationSpace" of type xs:anyURI.
    xsd__anyURI*                         DefaultRelativeZoomTranslationSpace 0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If the PTZ Node supports continuous Pan/Tilt movements, it shall specify one Continuous Pan/Tilt Velocity Space as default.
/// </BLOCKQUOTE></PRE>
///
/// Element "DefaultContinuousPanTiltVelocitySpace" of type xs:anyURI.
    xsd__anyURI*                         DefaultContinuousPanTiltVelocitySpace 0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If the PTZ Node supports continuous zoom movements, it shall specify one Continuous Zoom Velocity Space as default.
/// </BLOCKQUOTE></PRE>
///
/// Element "DefaultContinuousZoomVelocitySpace" of type xs:anyURI.
    xsd__anyURI*                         DefaultContinuousZoomVelocitySpace 0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If the PTZ Node supports absolute or relative PTZ movements, it shall specify corresponding default Pan/Tilt and Zoom speeds.
/// </BLOCKQUOTE></PRE>
///
/// Element "DefaultPTZSpeed" of type "http://www.onvif.org/ver10/schema":PTZSpeed.
    tt__PTZSpeed*                        DefaultPTZSpeed                0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If the PTZ Node supports continuous movements, it shall specify a default timeout, after which the movement stops.
/// </BLOCKQUOTE></PRE>
///
/// Element "DefaultPTZTimeout" of type xs:duration.
    xsd__duration*                       DefaultPTZTimeout              0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The Pan/Tilt limits element should be present for a PTZ Node that supports an absolute Pan/Tilt. If the element is present it signals the support for configurable Pan/Tilt limits. If limits are enabled, the Pan/Tilt movements shall always stay within the specified range. The Pan/Tilt limits are disabled by setting the limits to INF or +INF.
/// </BLOCKQUOTE></PRE>
///
/// Element "PanTiltLimits" of type "http://www.onvif.org/ver10/schema":PanTiltLimits.
    tt__PanTiltLimits*                   PanTiltLimits                  0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The Zoom limits element should be present for a PTZ Node that supports absolute zoom. If the element is present it signals the supports for configurable Zoom limits. If limits are enabled the zoom movements shall always stay within the specified range. The Zoom limits are disabled by settings the limits to -INF and +INF.
/// </BLOCKQUOTE></PRE>
///
/// Element "ZoomLimits" of type "http://www.onvif.org/ver10/schema":ZoomLimits.
    tt__ZoomLimits*                      ZoomLimits                     0;	///< Optional element.

/// </BLOCKQUOTE></PRE>
///
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":PTZConfigurationExtension.
    tt__PTZConfigurationExtension*       Extension                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The optional acceleration ramp used by the device when moving.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "MoveRamp" of type xs:int.
  @ int*                                 MoveRamp                       0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   The optional acceleration ramp used by the device when recalling presets.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "PresetRamp" of type xs:int.
  @ int*                                 PresetRamp                     0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   The optional acceleration ramp used by the device when executing PresetTours.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "PresetTourRamp" of type xs:int.
  @ int*                                 PresetTourRamp                 0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":EventFilter is a complexType with complexContent extension of type "http://docs.oasis-open.org/wsn/b-2":FilterType.
///
class tt__EventFilter : public wsnt__FilterType
{ public:
/*  INHERITED FROM wsnt__FilterType:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
    END OF INHERITED FROM wsnt__FilterType */
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":AnalyticsEngine is a complexType with complexContent extension of type "http://www.onvif.org/ver10/schema":ConfigurationEntity.
///
class tt__AnalyticsEngine : public tt__ConfigurationEntity
{ public:
/*  INHERITED FROM tt__ConfigurationEntity:
/// <PRE><BLOCKQUOTE>
///   User readable name. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
///
/// Element "Name" of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Number of internal references currently using this configuration. <p style='margin:0'>This informational parameter is read-only. Deprecated for Media2 Service.</p>
/// </BLOCKQUOTE></PRE>
///
/// Element "UseCount" of type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token that uniquely references this configuration. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   token                          1;	///< Required attribute.
    END OF INHERITED FROM tt__ConfigurationEntity */
/// Element "AnalyticsEngineConfiguration" of type "http://www.onvif.org/ver10/schema":AnalyticsDeviceEngineConfiguration.
    tt__AnalyticsDeviceEngineConfiguration*  AnalyticsEngineConfiguration   1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":AnalyticsEngineInput is a complexType with complexContent extension of type "http://www.onvif.org/ver10/schema":ConfigurationEntity.
///
class tt__AnalyticsEngineInput : public tt__ConfigurationEntity
{ public:
/*  INHERITED FROM tt__ConfigurationEntity:
/// <PRE><BLOCKQUOTE>
///   User readable name. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
///
/// Element "Name" of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Number of internal references currently using this configuration. <p style='margin:0'>This informational parameter is read-only. Deprecated for Media2 Service.</p>
/// </BLOCKQUOTE></PRE>
///
/// Element "UseCount" of type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token that uniquely references this configuration. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   token                          1;	///< Required attribute.
    END OF INHERITED FROM tt__ConfigurationEntity */
/// Element "SourceIdentification" of type "http://www.onvif.org/ver10/schema":SourceIdentification.
    tt__SourceIdentification*            SourceIdentification           1;	///< Required element.
/// Element "VideoInput" of type "http://www.onvif.org/ver10/schema":VideoEncoderConfiguration.
    tt__VideoEncoderConfiguration*       VideoInput                     1;	///< Required element.
/// Element "MetadataInput" of type "http://www.onvif.org/ver10/schema":MetadataInput.
    tt__MetadataInput*                   MetadataInput                  1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":AnalyticsEngineControl is a complexType with complexContent extension of type "http://www.onvif.org/ver10/schema":ConfigurationEntity.
///
class tt__AnalyticsEngineControl : public tt__ConfigurationEntity
{ public:
/*  INHERITED FROM tt__ConfigurationEntity:
/// <PRE><BLOCKQUOTE>
///   User readable name. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
///
/// Element "Name" of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Number of internal references currently using this configuration. <p style='margin:0'>This informational parameter is read-only. Deprecated for Media2 Service.</p>
/// </BLOCKQUOTE></PRE>
///
/// Element "UseCount" of type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token that uniquely references this configuration. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   token                          1;	///< Required attribute.
    END OF INHERITED FROM tt__ConfigurationEntity */
/// <PRE><BLOCKQUOTE>
///   Token of the analytics engine (AnalyticsEngine) being controlled.
/// </BLOCKQUOTE></PRE>
///
/// Element "EngineToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   EngineToken                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token of the analytics engine configuration (VideoAnalyticsConfiguration) in effect.
/// </BLOCKQUOTE></PRE>
///
/// Element "EngineConfigToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   EngineConfigToken              1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Tokens of the input (AnalyticsEngineInput) configuration applied.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__ReferenceToken of length 1..unbounded.
    std::vector<tt__ReferenceToken     > InputToken                     1;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Tokens of the receiver providing media input data. The order of ReceiverToken shall exactly match the order of InputToken.
/// </BLOCKQUOTE></PRE>
///
/// Vector of tt__ReferenceToken of length 1..unbounded.
    std::vector<tt__ReferenceToken     > ReceiverToken                  1;	///< Multiple elements.
/// Element "Multicast" of type "http://www.onvif.org/ver10/schema":MulticastConfiguration.
    tt__MulticastConfiguration*          Multicast                      0;	///< Optional element.
/// Element "Subscription" of type "http://www.onvif.org/ver10/schema":Config.
    tt__Config*                          Subscription                   1;	///< Required element.
/// Element "Mode" of type "http://www.onvif.org/ver10/schema":ModeOfOperation.
    enum tt__ModeOfOperation             Mode                           1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// Size of the array of XML or DOM nodes is 0..unbounded.
    std::vector<xsd__anyType           > __any                         0;	///< Store any element content in DOM soap_dom_element node.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":OSDConfiguration is a complexType with complexContent extension of type "http://www.onvif.org/ver10/schema":DeviceEntity.
///
class tt__OSDConfiguration : public tt__DeviceEntity
{ public:
/*  INHERITED FROM tt__DeviceEntity:
/// <PRE><BLOCKQUOTE>
///   Unique identifier referencing the physical entity.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   token                          1;	///< Required attribute.
    END OF INHERITED FROM tt__DeviceEntity */
/// <PRE><BLOCKQUOTE>
///   Reference to the video source configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "VideoSourceConfigurationToken" of type "http://www.onvif.org/ver10/schema":OSDReference.
    tt__OSDReference*                    VideoSourceConfigurationToken  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Type of OSD.
/// </BLOCKQUOTE></PRE>
///
/// Element "Type" of type "http://www.onvif.org/ver10/schema":OSDType.
    enum tt__OSDType                     Type                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Position configuration of OSD.
/// </BLOCKQUOTE></PRE>
///
/// Element "Position" of type "http://www.onvif.org/ver10/schema":OSDPosConfiguration.
    tt__OSDPosConfiguration*             Position                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Text configuration of OSD. It shall be present when the value of Type field is Text.
/// </BLOCKQUOTE></PRE>
///
/// Element "TextString" of type "http://www.onvif.org/ver10/schema":OSDTextConfiguration.
    tt__OSDTextConfiguration*            TextString                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Image configuration of OSD. It shall be present when the value of Type field is Image
/// </BLOCKQUOTE></PRE>
///
/// Element "Image" of type "http://www.onvif.org/ver10/schema":OSDImgConfiguration.
    tt__OSDImgConfiguration*             Image                          0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":OSDConfigurationExtension.
    tt__OSDConfigurationExtension*       Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};

/// @brief "http://www.onvif.org/ver10/schema":OSDReference is a complexType with simpleContent extension of type "http://www.onvif.org/ver10/schema":ReferenceToken.
///
class tt__OSDReference : public xsd__anyType
{ public:
/// __item wraps simpleContent of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   __item                        ;
/// <anyAttribute namespace="##any">.
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Store anyAttribute content in DOM soap_dom_attribute linked node structure.
};


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://docs.oasis-open.org/wsn/b-2                                       *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":TopicExpression of type "http://docs.oasis-open.org/wsn/b-2":TopicExpressionType.
/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":FixedTopicSet of type xs:boolean.
/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":TopicExpressionDialect of type xs:anyURI.
/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":ConsumerReference of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":Filter of type "http://docs.oasis-open.org/wsn/b-2":FilterType.
/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":SubscriptionPolicy of type "http://docs.oasis-open.org/wsn/b-2":SubscriptionPolicyType.
/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":CreationTime of type xs:dateTime.
/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":SubscriptionReference of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":Topic of type "http://docs.oasis-open.org/wsn/b-2":TopicExpressionType.
/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":ProducerReference of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":NotificationMessage of type "http://docs.oasis-open.org/wsn/b-2":NotificationMessageHolderType.
/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":CurrentTime of type xs:dateTime.
/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":TerminationTime of type xs:dateTime.
/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":ProducerProperties of type "http://docs.oasis-open.org/wsn/b-2":QueryExpressionType.
/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":MessageContent of type "http://docs.oasis-open.org/wsn/b-2":QueryExpressionType.
/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":SubscribeCreationFailedFault of type "http://docs.oasis-open.org/wsn/b-2":SubscribeCreationFailedFaultType.
/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":InvalidFilterFault of type "http://docs.oasis-open.org/wsn/b-2":InvalidFilterFaultType.
/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":TopicExpressionDialectUnknownFault of type "http://docs.oasis-open.org/wsn/b-2":TopicExpressionDialectUnknownFaultType.
/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":InvalidTopicExpressionFault of type "http://docs.oasis-open.org/wsn/b-2":InvalidTopicExpressionFaultType.
/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":TopicNotSupportedFault of type "http://docs.oasis-open.org/wsn/b-2":TopicNotSupportedFaultType.
/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":MultipleTopicsSpecifiedFault of type "http://docs.oasis-open.org/wsn/b-2":MultipleTopicsSpecifiedFaultType.
/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":InvalidProducerPropertiesExpressionFault of type "http://docs.oasis-open.org/wsn/b-2":InvalidProducerPropertiesExpressionFaultType.
/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":InvalidMessageContentExpressionFault of type "http://docs.oasis-open.org/wsn/b-2":InvalidMessageContentExpressionFaultType.
/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnrecognizedPolicyRequestFault of type "http://docs.oasis-open.org/wsn/b-2":UnrecognizedPolicyRequestFaultType.
/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnsupportedPolicyRequestFault of type "http://docs.oasis-open.org/wsn/b-2":UnsupportedPolicyRequestFaultType.
/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":NotifyMessageNotSupportedFault of type "http://docs.oasis-open.org/wsn/b-2":NotifyMessageNotSupportedFaultType.
/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnacceptableInitialTerminationTimeFault of type "http://docs.oasis-open.org/wsn/b-2":UnacceptableInitialTerminationTimeFaultType.
/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":NoCurrentMessageOnTopicFault of type "http://docs.oasis-open.org/wsn/b-2":NoCurrentMessageOnTopicFaultType.
/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnableToGetMessagesFault of type "http://docs.oasis-open.org/wsn/b-2":UnableToGetMessagesFaultType.
/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnableToDestroyPullPointFault of type "http://docs.oasis-open.org/wsn/b-2":UnableToDestroyPullPointFaultType.
/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnableToCreatePullPointFault of type "http://docs.oasis-open.org/wsn/b-2":UnableToCreatePullPointFaultType.
/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnacceptableTerminationTimeFault of type "http://docs.oasis-open.org/wsn/b-2":UnacceptableTerminationTimeFaultType.
/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnableToDestroySubscriptionFault of type "http://docs.oasis-open.org/wsn/b-2":UnableToDestroySubscriptionFaultType.
/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":PauseFailedFault of type "http://docs.oasis-open.org/wsn/b-2":PauseFailedFaultType.
/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":ResumeFailedFault of type "http://docs.oasis-open.org/wsn/b-2":ResumeFailedFaultType.

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://docs.oasis-open.org/wsn/b-2                                       *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://docs.oasis-open.org/wsrf/r-2                                      *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFault of type "http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFaultType.
/// @brief Top-level root element "http://docs.oasis-open.org/wsrf/r-2":ResourceUnavailableFault of type "http://docs.oasis-open.org/wsrf/r-2":ResourceUnavailableFaultType.

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://docs.oasis-open.org/wsrf/r-2                                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.onvif.org/ver10/display/wsdl                                  *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://www.onvif.org/ver10/display/wsdl":Capabilities of type "http://www.onvif.org/ver10/display/wsdl":Capabilities.

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.onvif.org/ver10/display/wsdl                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *                                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *                                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://docs.oasis-open.org/wsrf/rw-2                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://docs.oasis-open.org/wsrf/rw-2                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.onvif.org/ver20/ptz/wsdl                                      *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":Capabilities of type "http://www.onvif.org/ver20/ptz/wsdl":Capabilities.

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.onvif.org/ver20/ptz/wsdl                                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.onvif.org/ver10/replay/wsdl                                   *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://www.onvif.org/ver10/replay/wsdl":Capabilities of type "http://www.onvif.org/ver10/replay/wsdl":Capabilities.

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.onvif.org/ver10/replay/wsdl                                   *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.onvif.org/ver10/device/wsdl                                   *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":Capabilities of type "http://www.onvif.org/ver10/device/wsdl":DeviceServiceCapabilities.

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.onvif.org/ver10/device/wsdl                                   *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.onvif.org/ver10/deviceIO/wsdl                                 *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":Capabilities of type "http://www.onvif.org/ver10/deviceIO/wsdl":Capabilities.
/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetVideoSources of type "http://www.onvif.org/ver10/deviceIO/wsdl":Get.
/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetVideoSourcesResponse of type "http://www.onvif.org/ver10/deviceIO/wsdl":GetResponse.
/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetAudioSources of type "http://www.onvif.org/ver10/deviceIO/wsdl":Get.
/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetAudioSourcesResponse of type "http://www.onvif.org/ver10/deviceIO/wsdl":GetResponse.
/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetAudioOutputs of type "http://www.onvif.org/ver10/deviceIO/wsdl":Get.
/// @brief Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetAudioOutputsResponse of type "http://www.onvif.org/ver10/deviceIO/wsdl":GetResponse.

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.onvif.org/ver10/deviceIO/wsdl                                 *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.onvif.org/ver10/events/wsdl                                   *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://www.onvif.org/ver10/events/wsdl":Capabilities of type "http://www.onvif.org/ver10/events/wsdl":Capabilities.

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.onvif.org/ver10/events/wsdl                                   *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.onvif.org/ver10/receiver/wsdl                                 *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://www.onvif.org/ver10/receiver/wsdl":Capabilities of type "http://www.onvif.org/ver10/receiver/wsdl":Capabilities.

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.onvif.org/ver10/receiver/wsdl                                 *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://docs.oasis-open.org/wsn/t-1                                       *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/t-1":TopicNamespace of type "http://docs.oasis-open.org/wsn/t-1":TopicNamespaceType.
/// @brief Top-level root element "http://docs.oasis-open.org/wsn/t-1":TopicSet of type "http://docs.oasis-open.org/wsn/t-1":TopicSetType.

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://docs.oasis-open.org/wsn/t-1                                       *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level attribute "http://docs.oasis-open.org/wsn/t-1":topicNamespaceLocation of simpleType xs:anyURI.
/// @brief Top-level attribute "http://docs.oasis-open.org/wsn/t-1":topic of simpleType xs:boolean.

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.w3.org/2004/08/xop/include                                    *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://www.w3.org/2004/08/xop/include":Include of type "http://www.w3.org/2004/08/xop/include":Include.

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.w3.org/2004/08/xop/include                                    *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.onvif.org/ver10/recording/wsdl                                *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://www.onvif.org/ver10/recording/wsdl":Capabilities of type "http://www.onvif.org/ver10/recording/wsdl":Capabilities.

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.onvif.org/ver10/recording/wsdl                                *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.onvif.org/ver10/schema                                        *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":Polygon of type "http://www.onvif.org/ver10/schema":Polygon.
/// @brief Top-level root element "http://www.onvif.org/ver10/schema":StringList of type "http://www.onvif.org/ver10/schema":StringList.
/// @brief Top-level root element "http://www.onvif.org/ver10/schema":IntRange of type "http://www.onvif.org/ver10/schema":IntRange.
/// @brief Top-level root element "http://www.onvif.org/ver10/schema":IntList of type "http://www.onvif.org/ver10/schema":IntAttrList.
/// @brief Top-level root element "http://www.onvif.org/ver10/schema":FloatRange of type "http://www.onvif.org/ver10/schema":FloatRange.
/// @brief Top-level root element "http://www.onvif.org/ver10/schema":FloatList of type "http://www.onvif.org/ver10/schema":FloatAttrList.
/// @brief Top-level root element "http://www.onvif.org/ver10/schema":DurationRange of type "http://www.onvif.org/ver10/schema":DurationRange.
/// @brief Top-level root element "http://www.onvif.org/ver10/schema":IntRectangleRange of type "http://www.onvif.org/ver10/schema":IntRectangleRange.
/// @brief Top-level root element "http://www.onvif.org/ver10/schema":VideoSourceConfiguration of type "http://www.onvif.org/ver10/schema":VideoSourceConfiguration.
/// @brief Top-level root element "http://www.onvif.org/ver10/schema":AudioSourceConfiguration of type "http://www.onvif.org/ver10/schema":AudioSourceConfiguration.
/// @brief Top-level root element "http://www.onvif.org/ver10/schema":VideoEncoderConfiguration of type "http://www.onvif.org/ver10/schema":VideoEncoderConfiguration.
/// @brief Top-level root element "http://www.onvif.org/ver10/schema":AudioEncoderConfiguration of type "http://www.onvif.org/ver10/schema":AudioEncoderConfiguration.
/// @brief Top-level root element "http://www.onvif.org/ver10/schema":VideoAnalyticsConfiguration of type "http://www.onvif.org/ver10/schema":VideoAnalyticsConfiguration.
/// @brief Top-level root element "http://www.onvif.org/ver10/schema":PTZConfiguration of type "http://www.onvif.org/ver10/schema":PTZConfiguration.
/// @brief Top-level root element "http://www.onvif.org/ver10/schema":MetadataConfiguration of type "http://www.onvif.org/ver10/schema":MetadataConfiguration.
/// @brief Top-level root element "http://www.onvif.org/ver10/schema":AudioOutputConfiguration of type "http://www.onvif.org/ver10/schema":AudioOutputConfiguration.
/// @brief Top-level root element "http://www.onvif.org/ver10/schema":AudioDecoderConfiguration of type "http://www.onvif.org/ver10/schema":AudioDecoderConfiguration.
/// @brief Top-level root element "http://www.onvif.org/ver10/schema":Polyline of type "http://www.onvif.org/ver10/schema":Polyline.
/// @brief Top-level root element "http://www.onvif.org/ver10/schema":PolygonOptions of type "http://www.onvif.org/ver10/schema":PolygonOptions.

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.onvif.org/ver10/schema                                        *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.onvif.org/ver10/media/wsdl                                    *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":Capabilities of type "http://www.onvif.org/ver10/media/wsdl":Capabilities.

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.onvif.org/ver10/media/wsdl                                    *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.onvif.org/ver10/search/wsdl                                   *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://www.onvif.org/ver10/search/wsdl":Capabilities of type "http://www.onvif.org/ver10/search/wsdl":Capabilities.

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.onvif.org/ver10/search/wsdl                                   *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.onvif.org/ver20/imaging/wsdl                                  *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://www.onvif.org/ver20/imaging/wsdl":Capabilities of type "http://www.onvif.org/ver20/imaging/wsdl":Capabilities.

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.onvif.org/ver20/imaging/wsdl                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://docs.oasis-open.org/wsrf/bf-2                                     *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://docs.oasis-open.org/wsrf/bf-2":BaseFault of type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://docs.oasis-open.org/wsrf/bf-2                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Services                                                                   *
 *                                                                            *
\******************************************************************************/

// This service supports SOAP 1.2 namespaces:
#import "soap12.h"

//gsoap tds  service name:	DeviceBinding 
//gsoap tds  service type:	Device 
//gsoap tds  service namespace:	http://www.onvif.org/ver10/device/wsdl 
//gsoap tds  service transport:	http://schemas.xmlsoap.org/soap/http 

//gsoap tevcpp service name:	CreatePullPointBinding 
//gsoap tevcpp service type:	CreatePullPoint 
//gsoap tevcpp service namespace:	http://www.onvif.org/ver10/events/wsdl/CreatePullPointBinding 
//gsoap tevcpp service transport:	http://schemas.xmlsoap.org/soap/http 

//gsoap teve service name:	EventBinding 
//gsoap teve service type:	EventPortType 
//gsoap teve service namespace:	http://www.onvif.org/ver10/events/wsdl/EventBinding 
//gsoap teve service transport:	http://schemas.xmlsoap.org/soap/http 

//gsoap tevnc service name:	NotificationConsumerBinding 
//gsoap tevnc service type:	NotificationConsumer 
//gsoap tevnc service namespace:	http://www.onvif.org/ver10/events/wsdl/NotificationConsumerBinding 
//gsoap tevnc service transport:	http://schemas.xmlsoap.org/soap/http 

//gsoap tevnp service name:	NotificationProducerBinding 
//gsoap tevnp service type:	NotificationProducer 
//gsoap tevnp service namespace:	http://www.onvif.org/ver10/events/wsdl/NotificationProducerBinding 
//gsoap tevnp service transport:	http://schemas.xmlsoap.org/soap/http 

//gsoap tevpp service name:	PullPointBinding 
//gsoap tevpp service type:	PullPoint 
//gsoap tevpp service namespace:	http://www.onvif.org/ver10/events/wsdl/PullPointBinding 
//gsoap tevpp service transport:	http://schemas.xmlsoap.org/soap/http 

//gsoap tevpps service name:	PullPointSubscriptionBinding 
//gsoap tevpps service type:	PullPointSubscription 
//gsoap tevpps service namespace:	http://www.onvif.org/ver10/events/wsdl/PullPointSubscriptionBinding 
//gsoap tevpps service transport:	http://schemas.xmlsoap.org/soap/http 

//gsoap tevps service name:	PausableSubscriptionManagerBinding 
//gsoap tevps service type:	PausableSubscriptionManager 
//gsoap tevps service namespace:	http://www.onvif.org/ver10/events/wsdl/PausableSubscriptionManagerBinding 
//gsoap tevps service transport:	http://schemas.xmlsoap.org/soap/http 

//gsoap tevs service name:	SubscriptionManagerBinding 
//gsoap tevs service type:	SubscriptionManager 
//gsoap tevs service namespace:	http://www.onvif.org/ver10/events/wsdl/SubscriptionManagerBinding 
//gsoap tevs service transport:	http://schemas.xmlsoap.org/soap/http 

//gsoap timg service name:	ImagingBinding 
//gsoap timg service type:	ImagingPort 
//gsoap timg service namespace:	http://www.onvif.org/ver20/imaging/wsdl 
//gsoap timg service transport:	http://schemas.xmlsoap.org/soap/http 

//gsoap tls  service name:	DisplayBinding 
//gsoap tls  service type:	DisplayPort 
//gsoap tls  service namespace:	http://www.onvif.org/ver10/display/wsdl 
//gsoap tls  service transport:	http://schemas.xmlsoap.org/soap/http 

//gsoap tmd  service name:	DeviceIOBinding 
//gsoap tmd  service type:	DeviceIOPort 
//gsoap tmd  service namespace:	http://www.onvif.org/ver10/deviceIO/wsdl 
//gsoap tmd  service transport:	http://schemas.xmlsoap.org/soap/http 

//gsoap tptz service name:	PTZBinding 
//gsoap tptz service type:	PTZ 
//gsoap tptz service namespace:	http://www.onvif.org/ver20/ptz/wsdl 
//gsoap tptz service transport:	http://schemas.xmlsoap.org/soap/http 

//gsoap trc  service name:	RecordingBinding 
//gsoap trc  service type:	RecordingPort 
//gsoap trc  service namespace:	http://www.onvif.org/ver10/recording/wsdl 
//gsoap trc  service transport:	http://schemas.xmlsoap.org/soap/http 

//gsoap trp  service name:	ReplayBinding 
//gsoap trp  service type:	ReplayPort 
//gsoap trp  service namespace:	http://www.onvif.org/ver10/replay/wsdl 
//gsoap trp  service transport:	http://schemas.xmlsoap.org/soap/http 

//gsoap trt  service name:	MediaBinding 
//gsoap trt  service type:	Media 
//gsoap trt  service namespace:	http://www.onvif.org/ver10/media/wsdl 
//gsoap trt  service transport:	http://schemas.xmlsoap.org/soap/http 

//gsoap trv  service name:	ReceiverBinding 
//gsoap trv  service type:	ReceiverPort 
//gsoap trv  service namespace:	http://www.onvif.org/ver10/receiver/wsdl 
//gsoap trv  service transport:	http://schemas.xmlsoap.org/soap/http 

//gsoap tse  service name:	SearchBinding 
//gsoap tse  service type:	SearchPort 
//gsoap tse  service namespace:	http://www.onvif.org/ver10/search/wsdl 
//gsoap tse  service transport:	http://schemas.xmlsoap.org/soap/http 

/** @mainpage WSDL Definitions

@section WSDL_bindings Service Bindings

  - @ref DeviceBinding

  - @ref CreatePullPointBinding

  - @ref EventBinding

  - @ref NotificationConsumerBinding

  - @ref NotificationProducerBinding

  - @ref PullPointBinding

  - @ref PullPointSubscriptionBinding

  - @ref PausableSubscriptionManagerBinding

  - @ref SubscriptionManagerBinding

  - @ref ImagingBinding

  - @ref DisplayBinding

  - @ref DeviceIOBinding

  - @ref PTZBinding

  - @ref RecordingBinding

  - @ref ReplayBinding

  - @ref MediaBinding

  - @ref ReceiverBinding

  - @ref SearchBinding

@section WSDL_more More Information

  - @ref page_notes "Notes"

  - @ref page_XMLDataBinding "XML Data Binding"

  - @ref SOAP_ENV__Header "SOAP Header Content" (when applicable)

  - @ref SOAP_ENV__Detail "SOAP Fault Detail Content" (when applicable)


*/

/** @page DeviceBinding Binding "DeviceBinding"

@section DeviceBinding_operations Operations of Binding "DeviceBinding"

  - @ref __tds__GetServices

  - @ref __tds__GetServiceCapabilities

  - @ref __tds__GetDeviceInformation

  - @ref __tds__SetSystemDateAndTime

  - @ref __tds__GetSystemDateAndTime

  - @ref __tds__SetSystemFactoryDefault

  - @ref __tds__UpgradeSystemFirmware

  - @ref __tds__SystemReboot

  - @ref __tds__RestoreSystem

  - @ref __tds__GetSystemBackup

  - @ref __tds__GetSystemLog

  - @ref __tds__GetSystemSupportInformation

  - @ref __tds__GetScopes

  - @ref __tds__SetScopes

  - @ref __tds__AddScopes

  - @ref __tds__RemoveScopes

  - @ref __tds__GetDiscoveryMode

  - @ref __tds__SetDiscoveryMode

  - @ref __tds__GetRemoteDiscoveryMode

  - @ref __tds__SetRemoteDiscoveryMode

  - @ref __tds__GetDPAddresses

  - @ref __tds__GetEndpointReference

  - @ref __tds__GetRemoteUser

  - @ref __tds__SetRemoteUser

  - @ref __tds__GetUsers

  - @ref __tds__CreateUsers

  - @ref __tds__DeleteUsers

  - @ref __tds__SetUser

  - @ref __tds__GetWsdlUrl

  - @ref __tds__GetCapabilities

  - @ref __tds__SetDPAddresses

  - @ref __tds__GetHostname

  - @ref __tds__SetHostname

  - @ref __tds__SetHostnameFromDHCP

  - @ref __tds__GetDNS

  - @ref __tds__SetDNS

  - @ref __tds__GetNTP

  - @ref __tds__SetNTP

  - @ref __tds__GetDynamicDNS

  - @ref __tds__SetDynamicDNS

  - @ref __tds__GetNetworkInterfaces

  - @ref __tds__SetNetworkInterfaces

  - @ref __tds__GetNetworkProtocols

  - @ref __tds__SetNetworkProtocols

  - @ref __tds__GetNetworkDefaultGateway

  - @ref __tds__SetNetworkDefaultGateway

  - @ref __tds__GetZeroConfiguration

  - @ref __tds__SetZeroConfiguration

  - @ref __tds__GetIPAddressFilter

  - @ref __tds__SetIPAddressFilter

  - @ref __tds__AddIPAddressFilter

  - @ref __tds__RemoveIPAddressFilter

  - @ref __tds__GetAccessPolicy

  - @ref __tds__SetAccessPolicy

  - @ref __tds__CreateCertificate

  - @ref __tds__GetCertificates

  - @ref __tds__GetCertificatesStatus

  - @ref __tds__SetCertificatesStatus

  - @ref __tds__DeleteCertificates

  - @ref __tds__GetPkcs10Request

  - @ref __tds__LoadCertificates

  - @ref __tds__GetClientCertificateMode

  - @ref __tds__SetClientCertificateMode

  - @ref __tds__GetRelayOutputs

  - @ref __tds__SetRelayOutputSettings

  - @ref __tds__SetRelayOutputState

  - @ref __tds__SendAuxiliaryCommand

  - @ref __tds__GetCACertificates

  - @ref __tds__LoadCertificateWithPrivateKey

  - @ref __tds__GetCertificateInformation

  - @ref __tds__LoadCACertificates

  - @ref __tds__CreateDot1XConfiguration

  - @ref __tds__SetDot1XConfiguration

  - @ref __tds__GetDot1XConfiguration

  - @ref __tds__GetDot1XConfigurations

  - @ref __tds__DeleteDot1XConfiguration

  - @ref __tds__GetDot11Capabilities

  - @ref __tds__GetDot11Status

  - @ref __tds__ScanAvailableDot11Networks

  - @ref __tds__GetSystemUris

  - @ref __tds__StartFirmwareUpgrade

  - @ref __tds__StartSystemRestore

  - @ref __tds__GetStorageConfigurations

  - @ref __tds__CreateStorageConfiguration

  - @ref __tds__GetStorageConfiguration

  - @ref __tds__SetStorageConfiguration

  - @ref __tds__DeleteStorageConfiguration

  - @ref __tds__GetGeoLocation

  - @ref __tds__SetGeoLocation

  - @ref __tds__DeleteGeoLocation

@section DeviceBinding_ports Default endpoints of Binding "DeviceBinding"


*/

/** @page CreatePullPointBinding Binding "CreatePullPointBinding"

@section CreatePullPointBinding_operations Operations of Binding "CreatePullPointBinding"

  - @ref __tevcpp__CreatePullPoint

@section CreatePullPointBinding_ports Default endpoints of Binding "CreatePullPointBinding"


*/

/** @page EventBinding Binding "EventBinding"

@section EventBinding_operations Operations of Binding "EventBinding"

  - @ref __teve__GetServiceCapabilities

  - @ref __teve__CreatePullPointSubscription

  - @ref __teve__GetEventProperties

@section EventBinding_ports Default endpoints of Binding "EventBinding"


*/

/** @page NotificationConsumerBinding Binding "NotificationConsumerBinding"

@section NotificationConsumerBinding_operations Operations of Binding "NotificationConsumerBinding"

  - @ref __tevnc__Notify

@section NotificationConsumerBinding_ports Default endpoints of Binding "NotificationConsumerBinding"


*/

/** @page NotificationProducerBinding Binding "NotificationProducerBinding"

@section NotificationProducerBinding_operations Operations of Binding "NotificationProducerBinding"

  - @ref __tevnp__Subscribe

  - @ref __tevnp__GetCurrentMessage

@section NotificationProducerBinding_ports Default endpoints of Binding "NotificationProducerBinding"


*/

/** @page PullPointBinding Binding "PullPointBinding"

@section PullPointBinding_operations Operations of Binding "PullPointBinding"

  - @ref __tevpp__GetMessages

  - @ref __tevpp__DestroyPullPoint

  - @ref __tevpp__Notify

@section PullPointBinding_ports Default endpoints of Binding "PullPointBinding"


*/

/** @page PullPointSubscriptionBinding Binding "PullPointSubscriptionBinding"

@section PullPointSubscriptionBinding_operations Operations of Binding "PullPointSubscriptionBinding"

  - @ref __tevpps__PullMessages

  - @ref __tevpps__Seek

  - @ref __tevpps__SetSynchronizationPoint

@section PullPointSubscriptionBinding_ports Default endpoints of Binding "PullPointSubscriptionBinding"


*/

/** @page PausableSubscriptionManagerBinding Binding "PausableSubscriptionManagerBinding"

@section PausableSubscriptionManagerBinding_operations Operations of Binding "PausableSubscriptionManagerBinding"

  - @ref __tevps__Renew

  - @ref __tevps__Unsubscribe

  - @ref __tevps__PauseSubscription

  - @ref __tevps__ResumeSubscription

@section PausableSubscriptionManagerBinding_ports Default endpoints of Binding "PausableSubscriptionManagerBinding"


*/

/** @page SubscriptionManagerBinding Binding "SubscriptionManagerBinding"

@section SubscriptionManagerBinding_operations Operations of Binding "SubscriptionManagerBinding"

  - @ref __tevs__Renew

  - @ref __tevs__Unsubscribe

@section SubscriptionManagerBinding_ports Default endpoints of Binding "SubscriptionManagerBinding"


*/

/** @page ImagingBinding Binding "ImagingBinding"

@section ImagingBinding_operations Operations of Binding "ImagingBinding"

  - @ref __timg__GetServiceCapabilities

  - @ref __timg__GetImagingSettings

  - @ref __timg__SetImagingSettings

  - @ref __timg__GetOptions

  - @ref __timg__Move

  - @ref __timg__Stop

  - @ref __timg__GetStatus

  - @ref __timg__GetMoveOptions

  - @ref __timg__GetPresets

  - @ref __timg__GetCurrentPreset

  - @ref __timg__SetCurrentPreset

@section ImagingBinding_ports Default endpoints of Binding "ImagingBinding"


*/

/** @page DisplayBinding Binding "DisplayBinding"

@section DisplayBinding_operations Operations of Binding "DisplayBinding"

  - @ref __tls__GetServiceCapabilities

  - @ref __tls__GetLayout

  - @ref __tls__SetLayout

  - @ref __tls__GetDisplayOptions

  - @ref __tls__GetPaneConfigurations

  - @ref __tls__GetPaneConfiguration

  - @ref __tls__SetPaneConfigurations

  - @ref __tls__SetPaneConfiguration

  - @ref __tls__CreatePaneConfiguration

  - @ref __tls__DeletePaneConfiguration

@section DisplayBinding_ports Default endpoints of Binding "DisplayBinding"


*/

/** @page DeviceIOBinding Binding "DeviceIOBinding"

@section DeviceIOBinding_operations Operations of Binding "DeviceIOBinding"

  - @ref __tmd__GetServiceCapabilities

  - @ref __tmd__GetRelayOutputOptions

  - @ref __tmd__GetAudioSources

  - @ref __tmd__GetAudioOutputs

  - @ref __tmd__GetVideoSources

  - @ref __tmd__GetVideoOutputs

  - @ref __tmd__GetVideoSourceConfiguration

  - @ref __tmd__GetVideoOutputConfiguration

  - @ref __tmd__GetAudioSourceConfiguration

  - @ref __tmd__GetAudioOutputConfiguration

  - @ref __tmd__SetVideoSourceConfiguration

  - @ref __tmd__SetVideoOutputConfiguration

  - @ref __tmd__SetAudioSourceConfiguration

  - @ref __tmd__SetAudioOutputConfiguration

  - @ref __tmd__GetVideoSourceConfigurationOptions

  - @ref __tmd__GetVideoOutputConfigurationOptions

  - @ref __tmd__GetAudioSourceConfigurationOptions

  - @ref __tmd__GetAudioOutputConfigurationOptions

  - @ref __tmd__GetRelayOutputs

  - @ref __tmd__SetRelayOutputSettings

  - @ref __tmd__SetRelayOutputState

  - @ref __tmd__GetDigitalInputs

  - @ref __tmd__GetDigitalInputConfigurationOptions

  - @ref __tmd__SetDigitalInputConfigurations

  - @ref __tmd__GetSerialPorts

  - @ref __tmd__GetSerialPortConfiguration

  - @ref __tmd__SetSerialPortConfiguration

  - @ref __tmd__GetSerialPortConfigurationOptions

  - @ref __tmd__SendReceiveSerialCommand

@section DeviceIOBinding_ports Default endpoints of Binding "DeviceIOBinding"


*/

/** @page PTZBinding Binding "PTZBinding"

@section PTZBinding_operations Operations of Binding "PTZBinding"

  - @ref __tptz__GetServiceCapabilities

  - @ref __tptz__GetConfigurations

  - @ref __tptz__GetPresets

  - @ref __tptz__SetPreset

  - @ref __tptz__RemovePreset

  - @ref __tptz__GotoPreset

  - @ref __tptz__GetStatus

  - @ref __tptz__GetConfiguration

  - @ref __tptz__GetNodes

  - @ref __tptz__GetNode

  - @ref __tptz__SetConfiguration

  - @ref __tptz__GetConfigurationOptions

  - @ref __tptz__GotoHomePosition

  - @ref __tptz__SetHomePosition

  - @ref __tptz__ContinuousMove

  - @ref __tptz__RelativeMove

  - @ref __tptz__SendAuxiliaryCommand

  - @ref __tptz__AbsoluteMove

  - @ref __tptz__Stop

  - @ref __tptz__GetPresetTours

  - @ref __tptz__GetPresetTour

  - @ref __tptz__GetPresetTourOptions

  - @ref __tptz__CreatePresetTour

  - @ref __tptz__ModifyPresetTour

  - @ref __tptz__OperatePresetTour

  - @ref __tptz__RemovePresetTour

  - @ref __tptz__GetCompatibleConfigurations

@section PTZBinding_ports Default endpoints of Binding "PTZBinding"


*/

/** @page RecordingBinding Binding "RecordingBinding"

@section RecordingBinding_operations Operations of Binding "RecordingBinding"

  - @ref __trc__GetServiceCapabilities

  - @ref __trc__CreateRecording

  - @ref __trc__DeleteRecording

  - @ref __trc__GetRecordings

  - @ref __trc__SetRecordingConfiguration

  - @ref __trc__GetRecordingConfiguration

  - @ref __trc__GetRecordingOptions

  - @ref __trc__CreateTrack

  - @ref __trc__DeleteTrack

  - @ref __trc__GetTrackConfiguration

  - @ref __trc__SetTrackConfiguration

  - @ref __trc__CreateRecordingJob

  - @ref __trc__DeleteRecordingJob

  - @ref __trc__GetRecordingJobs

  - @ref __trc__SetRecordingJobConfiguration

  - @ref __trc__GetRecordingJobConfiguration

  - @ref __trc__SetRecordingJobMode

  - @ref __trc__GetRecordingJobState

  - @ref __trc__ExportRecordedData

  - @ref __trc__StopExportRecordedData

  - @ref __trc__GetExportRecordedDataState

@section RecordingBinding_ports Default endpoints of Binding "RecordingBinding"


*/

/** @page ReplayBinding Binding "ReplayBinding"

@section ReplayBinding_operations Operations of Binding "ReplayBinding"

  - @ref __trp__GetServiceCapabilities

  - @ref __trp__GetReplayUri

  - @ref __trp__GetReplayConfiguration

  - @ref __trp__SetReplayConfiguration

@section ReplayBinding_ports Default endpoints of Binding "ReplayBinding"


*/

/** @page MediaBinding Binding "MediaBinding"

@section MediaBinding_operations Operations of Binding "MediaBinding"

  - @ref __trt__GetServiceCapabilities

  - @ref __trt__GetVideoSources

  - @ref __trt__GetAudioSources

  - @ref __trt__GetAudioOutputs

  - @ref __trt__CreateProfile

  - @ref __trt__GetProfile

  - @ref __trt__GetProfiles

  - @ref __trt__AddVideoEncoderConfiguration

  - @ref __trt__AddVideoSourceConfiguration

  - @ref __trt__AddAudioEncoderConfiguration

  - @ref __trt__AddAudioSourceConfiguration

  - @ref __trt__AddPTZConfiguration

  - @ref __trt__AddVideoAnalyticsConfiguration

  - @ref __trt__AddMetadataConfiguration

  - @ref __trt__AddAudioOutputConfiguration

  - @ref __trt__AddAudioDecoderConfiguration

  - @ref __trt__RemoveVideoEncoderConfiguration

  - @ref __trt__RemoveVideoSourceConfiguration

  - @ref __trt__RemoveAudioEncoderConfiguration

  - @ref __trt__RemoveAudioSourceConfiguration

  - @ref __trt__RemovePTZConfiguration

  - @ref __trt__RemoveVideoAnalyticsConfiguration

  - @ref __trt__RemoveMetadataConfiguration

  - @ref __trt__RemoveAudioOutputConfiguration

  - @ref __trt__RemoveAudioDecoderConfiguration

  - @ref __trt__DeleteProfile

  - @ref __trt__GetVideoSourceConfigurations

  - @ref __trt__GetVideoEncoderConfigurations

  - @ref __trt__GetAudioSourceConfigurations

  - @ref __trt__GetAudioEncoderConfigurations

  - @ref __trt__GetVideoAnalyticsConfigurations

  - @ref __trt__GetMetadataConfigurations

  - @ref __trt__GetAudioOutputConfigurations

  - @ref __trt__GetAudioDecoderConfigurations

  - @ref __trt__GetVideoSourceConfiguration

  - @ref __trt__GetVideoEncoderConfiguration

  - @ref __trt__GetAudioSourceConfiguration

  - @ref __trt__GetAudioEncoderConfiguration

  - @ref __trt__GetVideoAnalyticsConfiguration

  - @ref __trt__GetMetadataConfiguration

  - @ref __trt__GetAudioOutputConfiguration

  - @ref __trt__GetAudioDecoderConfiguration

  - @ref __trt__GetCompatibleVideoEncoderConfigurations

  - @ref __trt__GetCompatibleVideoSourceConfigurations

  - @ref __trt__GetCompatibleAudioEncoderConfigurations

  - @ref __trt__GetCompatibleAudioSourceConfigurations

  - @ref __trt__GetCompatibleVideoAnalyticsConfigurations

  - @ref __trt__GetCompatibleMetadataConfigurations

  - @ref __trt__GetCompatibleAudioOutputConfigurations

  - @ref __trt__GetCompatibleAudioDecoderConfigurations

  - @ref __trt__SetVideoSourceConfiguration

  - @ref __trt__SetVideoEncoderConfiguration

  - @ref __trt__SetAudioSourceConfiguration

  - @ref __trt__SetAudioEncoderConfiguration

  - @ref __trt__SetVideoAnalyticsConfiguration

  - @ref __trt__SetMetadataConfiguration

  - @ref __trt__SetAudioOutputConfiguration

  - @ref __trt__SetAudioDecoderConfiguration

  - @ref __trt__GetVideoSourceConfigurationOptions

  - @ref __trt__GetVideoEncoderConfigurationOptions

  - @ref __trt__GetAudioSourceConfigurationOptions

  - @ref __trt__GetAudioEncoderConfigurationOptions

  - @ref __trt__GetMetadataConfigurationOptions

  - @ref __trt__GetAudioOutputConfigurationOptions

  - @ref __trt__GetAudioDecoderConfigurationOptions

  - @ref __trt__GetGuaranteedNumberOfVideoEncoderInstances

  - @ref __trt__GetStreamUri

  - @ref __trt__StartMulticastStreaming

  - @ref __trt__StopMulticastStreaming

  - @ref __trt__SetSynchronizationPoint

  - @ref __trt__GetSnapshotUri

  - @ref __trt__GetVideoSourceModes

  - @ref __trt__SetVideoSourceMode

  - @ref __trt__GetOSDs

  - @ref __trt__GetOSD

  - @ref __trt__GetOSDOptions

  - @ref __trt__SetOSD

  - @ref __trt__CreateOSD

  - @ref __trt__DeleteOSD

@section MediaBinding_ports Default endpoints of Binding "MediaBinding"


*/

/** @page ReceiverBinding Binding "ReceiverBinding"

@section ReceiverBinding_operations Operations of Binding "ReceiverBinding"

  - @ref __trv__GetServiceCapabilities

  - @ref __trv__GetReceivers

  - @ref __trv__GetReceiver

  - @ref __trv__CreateReceiver

  - @ref __trv__DeleteReceiver

  - @ref __trv__ConfigureReceiver

  - @ref __trv__SetReceiverMode

  - @ref __trv__GetReceiverState

@section ReceiverBinding_ports Default endpoints of Binding "ReceiverBinding"


*/

/** @page SearchBinding Binding "SearchBinding"

@section SearchBinding_operations Operations of Binding "SearchBinding"

  - @ref __tse__GetServiceCapabilities

  - @ref __tse__GetRecordingSummary

  - @ref __tse__GetRecordingInformation

  - @ref __tse__GetMediaAttributes

  - @ref __tse__FindRecordings

  - @ref __tse__GetRecordingSearchResults

  - @ref __tse__FindEvents

  - @ref __tse__GetEventSearchResults

  - @ref __tse__FindPTZPosition

  - @ref __tse__GetPTZPositionSearchResults

  - @ref __tse__GetSearchState

  - @ref __tse__EndSearch

  - @ref __tse__FindMetadata

  - @ref __tse__GetMetadataSearchResults

@section SearchBinding_ports Default endpoints of Binding "SearchBinding"


*/

/******************************************************************************\
 *                                                                            *
 * SOAP Fault Detail                                                          *
 *                                                                            *
\******************************************************************************/

/**

The SOAP Fault is part of the gSOAP context and its content is accessed
through the soap.fault->detail variable (SOAP 1.1) or the
soap.fault->SOAP_ENV__Detail variable (SOAP 1.2).
Use wsdl2h option -j to omit these declarations.

*/
mutable struct SOAP_ENV__Detail
{
  @ xsd__anyAttribute                    __anyAttribute                ;	///< Catch any attribute content in DOM.
/// SOAP Fault message "UnableToCreatePullPointFault" part "UnableToCreatePullPointFault" element ""http://docs.oasis-open.org/wsn/b-2":UnableToCreatePullPointFault".
    wsnt__UnableToCreatePullPointFaultType*  wsnt__UnableToCreatePullPointFault;
/// SOAP Fault message "InvalidFilterFault" part "InvalidFilterFault" element ""http://docs.oasis-open.org/wsn/b-2":InvalidFilterFault".
    wsnt__InvalidFilterFaultType*        wsnt__InvalidFilterFault      ;
/// SOAP Fault message "InvalidMessageContentExpressionFault" part "InvalidMessageContentExpressionFault" element ""http://docs.oasis-open.org/wsn/b-2":InvalidMessageContentExpressionFault".
    wsnt__InvalidMessageContentExpressionFaultType*  wsnt__InvalidMessageContentExpressionFault;
/// SOAP Fault message "InvalidProducerPropertiesExpressionFault" part "InvalidProducerPropertiesExpressionFault" element ""http://docs.oasis-open.org/wsn/b-2":InvalidProducerPropertiesExpressionFault".
    wsnt__InvalidProducerPropertiesExpressionFaultType*  wsnt__InvalidProducerPropertiesExpressionFault;
/// SOAP Fault message "InvalidTopicExpressionFault" part "InvalidTopicExpressionFault" element ""http://docs.oasis-open.org/wsn/b-2":InvalidTopicExpressionFault".
    wsnt__InvalidTopicExpressionFaultType*  wsnt__InvalidTopicExpressionFault;
/// SOAP Fault message "NotifyMessageNotSupportedFault" part "NotifyMessageNotSupportedFault" element ""http://docs.oasis-open.org/wsn/b-2":NotifyMessageNotSupportedFault".
    wsnt__NotifyMessageNotSupportedFaultType*  wsnt__NotifyMessageNotSupportedFault;
/// SOAP Fault message "ResourceUnknownFault" part "ResourceUnknownFault" element ""http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFault".
    wsrfr__ResourceUnknownFaultType*     wsrfr__ResourceUnknownFault   ;
/// SOAP Fault message "SubscribeCreationFailedFault" part "SubscribeCreationFailedFault" element ""http://docs.oasis-open.org/wsn/b-2":SubscribeCreationFailedFault".
    wsnt__SubscribeCreationFailedFaultType*  wsnt__SubscribeCreationFailedFault;
/// SOAP Fault message "TopicExpressionDialectUnknownFault" part "TopicExpressionDialectUnknownFault" element ""http://docs.oasis-open.org/wsn/b-2":TopicExpressionDialectUnknownFault".
    wsnt__TopicExpressionDialectUnknownFaultType*  wsnt__TopicExpressionDialectUnknownFault;
/// SOAP Fault message "TopicNotSupportedFault" part "TopicNotSupportedFault" element ""http://docs.oasis-open.org/wsn/b-2":TopicNotSupportedFault".
    wsnt__TopicNotSupportedFaultType*    wsnt__TopicNotSupportedFault  ;
/// SOAP Fault message "UnacceptableInitialTerminationTimeFault" part "UnacceptableInitialTerminationTimeFault" element ""http://docs.oasis-open.org/wsn/b-2":UnacceptableInitialTerminationTimeFault".
    wsnt__UnacceptableInitialTerminationTimeFaultType*  wsnt__UnacceptableInitialTerminationTimeFault;
/// SOAP Fault message "UnrecognizedPolicyRequestFault" part "UnrecognizedPolicyRequestFault" element ""http://docs.oasis-open.org/wsn/b-2":UnrecognizedPolicyRequestFault".
    wsnt__UnrecognizedPolicyRequestFaultType*  wsnt__UnrecognizedPolicyRequestFault;
/// SOAP Fault message "UnsupportedPolicyRequestFault" part "UnsupportedPolicyRequestFault" element ""http://docs.oasis-open.org/wsn/b-2":UnsupportedPolicyRequestFault".
    wsnt__UnsupportedPolicyRequestFaultType*  wsnt__UnsupportedPolicyRequestFault;
/// SOAP Fault message "MultipleTopicsSpecifiedFault" part "MultipleTopicsSpecifiedFault" element ""http://docs.oasis-open.org/wsn/b-2":MultipleTopicsSpecifiedFault".
    wsnt__MultipleTopicsSpecifiedFaultType*  wsnt__MultipleTopicsSpecifiedFault;
/// SOAP Fault message "NoCurrentMessageOnTopicFault" part "NoCurrentMessageOnTopicFault" element ""http://docs.oasis-open.org/wsn/b-2":NoCurrentMessageOnTopicFault".
    wsnt__NoCurrentMessageOnTopicFaultType*  wsnt__NoCurrentMessageOnTopicFault;
/// SOAP Fault message "UnableToDestroyPullPointFault" part "UnableToDestroyPullPointFault" element ""http://docs.oasis-open.org/wsn/b-2":UnableToDestroyPullPointFault".
    wsnt__UnableToDestroyPullPointFaultType*  wsnt__UnableToDestroyPullPointFault;
/// SOAP Fault message "UnableToGetMessagesFault" part "UnableToGetMessagesFault" element ""http://docs.oasis-open.org/wsn/b-2":UnableToGetMessagesFault".
    wsnt__UnableToGetMessagesFaultType*  wsnt__UnableToGetMessagesFault;
/// SOAP Fault message "PullMessagesFaultResponse" part "parameters" element ""http://www.onvif.org/ver10/events/wsdl":PullMessagesFaultResponse".
    _tev__PullMessagesFaultResponse*     tev__PullMessagesFaultResponse;
/// SOAP Fault message "PauseFailedFault" part "PauseFailedFault" element ""http://docs.oasis-open.org/wsn/b-2":PauseFailedFault".
    wsnt__PauseFailedFaultType*          wsnt__PauseFailedFault        ;
/// SOAP Fault message "ResumeFailedFault" part "ResumeFailedFault" element ""http://docs.oasis-open.org/wsn/b-2":ResumeFailedFault".
    wsnt__ResumeFailedFaultType*         wsnt__ResumeFailedFault       ;
/// SOAP Fault message "UnableToDestroySubscriptionFault" part "UnableToDestroySubscriptionFault" element ""http://docs.oasis-open.org/wsn/b-2":UnableToDestroySubscriptionFault".
    wsnt__UnableToDestroySubscriptionFaultType*  wsnt__UnableToDestroySubscriptionFault;
/// SOAP Fault message "UnacceptableTerminationTimeFault" part "UnacceptableTerminationTimeFault" element ""http://docs.oasis-open.org/wsn/b-2":UnacceptableTerminationTimeFault".
    wsnt__UnacceptableTerminationTimeFaultType*  wsnt__UnacceptableTerminationTimeFault;
    int                                  __type                        ;	///< set to SOAP_TYPE_T for a serializable type T
    void                                *fault                         ;	///< points to serializable value of type T or NULL
    _XML                                 __any                         ;	///< Catch any other content in XML string.
};


/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   DeviceBinding                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetServices                                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetServices" of service binding "DeviceBinding".
Returns information about services on the device.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetServices"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetServices"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetServicesResponse"
*/

//gsoap tds  service method-protocol:	GetServices SOAP
//gsoap tds  service method-style:	GetServices document
//gsoap tds  service method-encoding:	GetServices literal
//gsoap tds  service method-input-action:	GetServices http://www.onvif.org/ver10/device/wsdl/GetServices
//gsoap tds  service method-output-action:	GetServices http://www.onvif.org/ver10/device/wsdl/GetServicesResponse
int __tds__GetServices(
    _tds__GetServices*                  tds__GetServices,	///< Input parameter
    _tds__GetServicesResponse          &tds__GetServicesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetServiceCapabilities                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetServiceCapabilities" of service binding "DeviceBinding".
Returns the capabilities of the device service. The result is returned in a typed
answer.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetServiceCapabilities"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetServiceCapabilities"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetServiceCapabilitiesResponse"
*/

//gsoap tds  service method-protocol:	GetServiceCapabilities SOAP
//gsoap tds  service method-style:	GetServiceCapabilities document
//gsoap tds  service method-encoding:	GetServiceCapabilities literal
//gsoap tds  service method-input-action:	GetServiceCapabilities http://www.onvif.org/ver10/device/wsdl/GetServiceCapabilities
//gsoap tds  service method-output-action:	GetServiceCapabilities http://www.onvif.org/ver10/device/wsdl/GetServiceCapabilitiesResponse
int __tds__GetServiceCapabilities(
    _tds__GetServiceCapabilities*       tds__GetServiceCapabilities,	///< Input parameter
    _tds__GetServiceCapabilitiesResponse&tds__GetServiceCapabilitiesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetDeviceInformation                                              *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetDeviceInformation" of service binding "DeviceBinding".
This operation gets basic device information from the device.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetDeviceInformation"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetDeviceInformation"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetDeviceInformationResponse"
*/

//gsoap tds  service method-protocol:	GetDeviceInformation SOAP
//gsoap tds  service method-style:	GetDeviceInformation document
//gsoap tds  service method-encoding:	GetDeviceInformation literal
//gsoap tds  service method-input-action:	GetDeviceInformation http://www.onvif.org/ver10/device/wsdl/GetDeviceInformation
//gsoap tds  service method-output-action:	GetDeviceInformation http://www.onvif.org/ver10/device/wsdl/GetDeviceInformationResponse
int __tds__GetDeviceInformation(
    _tds__GetDeviceInformation*         tds__GetDeviceInformation,	///< Input parameter
    _tds__GetDeviceInformationResponse &tds__GetDeviceInformationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetSystemDateAndTime                                              *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetSystemDateAndTime" of service binding "DeviceBinding".
This operation sets the device system date and time. The device shall support the
				configuration of the daylight saving setting and
of the manual system date and time (if
				applicable) or indication of NTP time (if applicable)
through the SetSystemDateAndTime
				command. <br/>
				If system time and date are set manually, the client
shall include UTCDateTime in the request.<br/>
				A TimeZone token which is not formed according to
the rules of IEEE 1003.1 section 8.3 is considered as invalid timezone.<br/>
				The DayLightSavings flag should be set to true to
activate any DST settings of the TimeZone string. 
				Clear the DayLightSavings flag if the DST portion
of the TimeZone settings should be ignored.
			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetSystemDateAndTime"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetSystemDateAndTime"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetSystemDateAndTimeResponse"
*/

//gsoap tds  service method-protocol:	SetSystemDateAndTime SOAP
//gsoap tds  service method-style:	SetSystemDateAndTime document
//gsoap tds  service method-encoding:	SetSystemDateAndTime literal
//gsoap tds  service method-input-action:	SetSystemDateAndTime http://www.onvif.org/ver10/device/wsdl/SetSystemDateAndTime
//gsoap tds  service method-output-action:	SetSystemDateAndTime http://www.onvif.org/ver10/device/wsdl/SetSystemDateAndTimeResponse
int __tds__SetSystemDateAndTime(
    _tds__SetSystemDateAndTime*         tds__SetSystemDateAndTime,	///< Input parameter
    _tds__SetSystemDateAndTimeResponse &tds__SetSystemDateAndTimeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetSystemDateAndTime                                              *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetSystemDateAndTime" of service binding "DeviceBinding".
This operation gets the device system date and time. The device shall support the
return of
				the daylight saving setting and of the manual system
date and time (if applicable) or indication
				of NTP time (if applicable) through the GetSystemDateAndTime
command.<br/>
				A device shall provide the UTCDateTime information.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetSystemDateAndTime"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetSystemDateAndTime"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetSystemDateAndTimeResponse"
*/

//gsoap tds  service method-protocol:	GetSystemDateAndTime SOAP
//gsoap tds  service method-style:	GetSystemDateAndTime document
//gsoap tds  service method-encoding:	GetSystemDateAndTime literal
//gsoap tds  service method-input-action:	GetSystemDateAndTime http://www.onvif.org/ver10/device/wsdl/GetSystemDateAndTime
//gsoap tds  service method-output-action:	GetSystemDateAndTime http://www.onvif.org/ver10/device/wsdl/GetSystemDateAndTimeResponse
int __tds__GetSystemDateAndTime(
    _tds__GetSystemDateAndTime*         tds__GetSystemDateAndTime,	///< Input parameter
    _tds__GetSystemDateAndTimeResponse &tds__GetSystemDateAndTimeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetSystemFactoryDefault                                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetSystemFactoryDefault" of service binding "DeviceBinding".
This operation reloads the parameters on the device to their factory default values.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetSystemFactoryDefault"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetSystemFactoryDefault"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetSystemFactoryDefaultResponse"
*/

//gsoap tds  service method-protocol:	SetSystemFactoryDefault SOAP
//gsoap tds  service method-style:	SetSystemFactoryDefault document
//gsoap tds  service method-encoding:	SetSystemFactoryDefault literal
//gsoap tds  service method-input-action:	SetSystemFactoryDefault http://www.onvif.org/ver10/device/wsdl/SetSystemFactoryDefault
//gsoap tds  service method-output-action:	SetSystemFactoryDefault http://www.onvif.org/ver10/device/wsdl/SetSystemFactoryDefaultResponse
int __tds__SetSystemFactoryDefault(
    _tds__SetSystemFactoryDefault*      tds__SetSystemFactoryDefault,	///< Input parameter
    _tds__SetSystemFactoryDefaultResponse&tds__SetSystemFactoryDefaultResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__UpgradeSystemFirmware                                             *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__UpgradeSystemFirmware" of service binding "DeviceBinding".
This operation upgrades a device firmware version. After a successful upgrade the
response
				message is sent before the device reboots. The device
should support firmware upgrade
				through the UpgradeSystemFirmware command. The exact
format of the firmware data is
				outside the scope of this standard.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/UpgradeSystemFirmware"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/UpgradeSystemFirmware"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/UpgradeSystemFirmwareResponse"
*/

//gsoap tds  service method-protocol:	UpgradeSystemFirmware SOAP
//gsoap tds  service method-style:	UpgradeSystemFirmware document
//gsoap tds  service method-encoding:	UpgradeSystemFirmware literal
//gsoap tds  service method-input-action:	UpgradeSystemFirmware http://www.onvif.org/ver10/device/wsdl/UpgradeSystemFirmware
//gsoap tds  service method-output-action:	UpgradeSystemFirmware http://www.onvif.org/ver10/device/wsdl/UpgradeSystemFirmwareResponse
int __tds__UpgradeSystemFirmware(
    _tds__UpgradeSystemFirmware*        tds__UpgradeSystemFirmware,	///< Input parameter
    _tds__UpgradeSystemFirmwareResponse&tds__UpgradeSystemFirmwareResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SystemReboot                                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SystemReboot" of service binding "DeviceBinding".
This operation reboots the device.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SystemReboot"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SystemReboot"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SystemRebootResponse"
*/

//gsoap tds  service method-protocol:	SystemReboot SOAP
//gsoap tds  service method-style:	SystemReboot document
//gsoap tds  service method-encoding:	SystemReboot literal
//gsoap tds  service method-input-action:	SystemReboot http://www.onvif.org/ver10/device/wsdl/SystemReboot
//gsoap tds  service method-output-action:	SystemReboot http://www.onvif.org/ver10/device/wsdl/SystemRebootResponse
int __tds__SystemReboot(
    _tds__SystemReboot*                 tds__SystemReboot,	///< Input parameter
    _tds__SystemRebootResponse         &tds__SystemRebootResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__RestoreSystem                                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__RestoreSystem" of service binding "DeviceBinding".
This operation restores the system backup configuration files(s) previously retrieved
from a
				device. The device should support restore of backup
configuration file(s) through the
				RestoreSystem command. The exact format of the backup
configuration file(s) is outside the
				scope of this standard. If the command is supported,
it shall accept backup files returned by
				the GetSystemBackup command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/RestoreSystem"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/RestoreSystem"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/RestoreSystemResponse"
*/

//gsoap tds  service method-protocol:	RestoreSystem SOAP
//gsoap tds  service method-style:	RestoreSystem document
//gsoap tds  service method-encoding:	RestoreSystem literal
//gsoap tds  service method-input-action:	RestoreSystem http://www.onvif.org/ver10/device/wsdl/RestoreSystem
//gsoap tds  service method-output-action:	RestoreSystem http://www.onvif.org/ver10/device/wsdl/RestoreSystemResponse
int __tds__RestoreSystem(
    _tds__RestoreSystem*                tds__RestoreSystem,	///< Input parameter
    _tds__RestoreSystemResponse        &tds__RestoreSystemResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetSystemBackup                                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetSystemBackup" of service binding "DeviceBinding".
This operation is retrieves system backup configuration file(s) from a device. The
device
				should support return of back up configuration file(s)
through the GetSystemBackup command.
				The backup is returned with reference to a name
and mime-type together with binary data.
				The exact format of the backup configuration files
is outside the scope of this standard.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetSystemBackup"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetSystemBackup"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetSystemBackupResponse"
*/

//gsoap tds  service method-protocol:	GetSystemBackup SOAP
//gsoap tds  service method-style:	GetSystemBackup document
//gsoap tds  service method-encoding:	GetSystemBackup literal
//gsoap tds  service method-input-action:	GetSystemBackup http://www.onvif.org/ver10/device/wsdl/GetSystemBackup
//gsoap tds  service method-output-action:	GetSystemBackup http://www.onvif.org/ver10/device/wsdl/GetSystemBackupResponse
int __tds__GetSystemBackup(
    _tds__GetSystemBackup*              tds__GetSystemBackup,	///< Input parameter
    _tds__GetSystemBackupResponse      &tds__GetSystemBackupResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetSystemLog                                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetSystemLog" of service binding "DeviceBinding".
This operation gets a system log from the device. The exact format of the system
logs is outside the scope of this standard.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetSystemLog"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetSystemLog"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetSystemLogResponse"
*/

//gsoap tds  service method-protocol:	GetSystemLog SOAP
//gsoap tds  service method-style:	GetSystemLog document
//gsoap tds  service method-encoding:	GetSystemLog literal
//gsoap tds  service method-input-action:	GetSystemLog http://www.onvif.org/ver10/device/wsdl/GetSystemLog
//gsoap tds  service method-output-action:	GetSystemLog http://www.onvif.org/ver10/device/wsdl/GetSystemLogResponse
int __tds__GetSystemLog(
    _tds__GetSystemLog*                 tds__GetSystemLog,	///< Input parameter
    _tds__GetSystemLogResponse         &tds__GetSystemLogResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetSystemSupportInformation                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetSystemSupportInformation" of service binding "DeviceBinding".
This operation gets arbitary device diagnostics information from the device.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetSystemSupportInformation"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetSystemSupportInformation"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetSystemSupportInformationResponse"
*/

//gsoap tds  service method-protocol:	GetSystemSupportInformation SOAP
//gsoap tds  service method-style:	GetSystemSupportInformation document
//gsoap tds  service method-encoding:	GetSystemSupportInformation literal
//gsoap tds  service method-input-action:	GetSystemSupportInformation http://www.onvif.org/ver10/device/wsdl/GetSystemSupportInformation
//gsoap tds  service method-output-action:	GetSystemSupportInformation http://www.onvif.org/ver10/device/wsdl/GetSystemSupportInformationResponse
int __tds__GetSystemSupportInformation(
    _tds__GetSystemSupportInformation*  tds__GetSystemSupportInformation,	///< Input parameter
    _tds__GetSystemSupportInformationResponse&tds__GetSystemSupportInformationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetScopes                                                         *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetScopes" of service binding "DeviceBinding".
This operation requests the scope parameters of a device. The scope parameters are
used in
				the device discovery to match a probe message, see
Section 7. The Scope parameters are of
				two different types: <ul>
					<li>Fixed</li>
					<li>Configurable</li>
				</ul>
				Fixed scope parameters are permanent device characteristics
and cannot be removed through the device management interface. 
				The scope type is indicated in the scope list returned
in the get scope parameters response. A device shall support 
				retrieval of discovery scope parameters through
the GetScopes command. As some scope parameters are mandatory, 
				the device shall return a non-empty scope list in
the response.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetScopes"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetScopes"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetScopesResponse"
*/

//gsoap tds  service method-protocol:	GetScopes SOAP
//gsoap tds  service method-style:	GetScopes document
//gsoap tds  service method-encoding:	GetScopes literal
//gsoap tds  service method-input-action:	GetScopes http://www.onvif.org/ver10/device/wsdl/GetScopes
//gsoap tds  service method-output-action:	GetScopes http://www.onvif.org/ver10/device/wsdl/GetScopesResponse
int __tds__GetScopes(
    _tds__GetScopes*                    tds__GetScopes,	///< Input parameter
    _tds__GetScopesResponse            &tds__GetScopesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetScopes                                                         *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetScopes" of service binding "DeviceBinding".
This operation sets the scope parameters of a device. The scope parameters are used
in the
				device discovery to match a probe message.
				This operation replaces all existing configurable
scope parameters (not fixed parameters). If
				this shall be avoided, one should use the scope
add command instead. The device shall
				support configuration of discovery scope parameters
through the SetScopes command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetScopes"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetScopes"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetScopesResponse"
*/

//gsoap tds  service method-protocol:	SetScopes SOAP
//gsoap tds  service method-style:	SetScopes document
//gsoap tds  service method-encoding:	SetScopes literal
//gsoap tds  service method-input-action:	SetScopes http://www.onvif.org/ver10/device/wsdl/SetScopes
//gsoap tds  service method-output-action:	SetScopes http://www.onvif.org/ver10/device/wsdl/SetScopesResponse
int __tds__SetScopes(
    _tds__SetScopes*                    tds__SetScopes,	///< Input parameter
    _tds__SetScopesResponse            &tds__SetScopesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__AddScopes                                                         *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__AddScopes" of service binding "DeviceBinding".
This operation adds new configurable scope parameters to a device. The scope parameters
				are used in the device discovery to match a probe
message. The device shall
				support addition of discovery scope parameters through
the AddScopes command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/AddScopes"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/AddScopes"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/AddScopesResponse"
*/

//gsoap tds  service method-protocol:	AddScopes SOAP
//gsoap tds  service method-style:	AddScopes document
//gsoap tds  service method-encoding:	AddScopes literal
//gsoap tds  service method-input-action:	AddScopes http://www.onvif.org/ver10/device/wsdl/AddScopes
//gsoap tds  service method-output-action:	AddScopes http://www.onvif.org/ver10/device/wsdl/AddScopesResponse
int __tds__AddScopes(
    _tds__AddScopes*                    tds__AddScopes,	///< Input parameter
    _tds__AddScopesResponse            &tds__AddScopesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__RemoveScopes                                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__RemoveScopes" of service binding "DeviceBinding".
This operation deletes scope-configurable scope parameters from a device. The scope
				parameters are used in the device discovery to match
a probe message, see Section 7. The
				device shall support deletion of discovery scope
parameters through the RemoveScopes
				command.
				Table

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/RemoveScopes"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/RemoveScopes"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/RemoveScopesResponse"
*/

//gsoap tds  service method-protocol:	RemoveScopes SOAP
//gsoap tds  service method-style:	RemoveScopes document
//gsoap tds  service method-encoding:	RemoveScopes literal
//gsoap tds  service method-input-action:	RemoveScopes http://www.onvif.org/ver10/device/wsdl/RemoveScopes
//gsoap tds  service method-output-action:	RemoveScopes http://www.onvif.org/ver10/device/wsdl/RemoveScopesResponse
int __tds__RemoveScopes(
    _tds__RemoveScopes*                 tds__RemoveScopes,	///< Input parameter
    _tds__RemoveScopesResponse         &tds__RemoveScopesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetDiscoveryMode                                                  *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetDiscoveryMode" of service binding "DeviceBinding".
This operation gets the discovery mode of a device. See Section 7.2 for the definition
of the
				different device discovery modes. The device shall
support retrieval of the discovery mode
				setting through the GetDiscoveryMode command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetDiscoveryMode"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetDiscoveryMode"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetDiscoveryModeResponse"
*/

//gsoap tds  service method-protocol:	GetDiscoveryMode SOAP
//gsoap tds  service method-style:	GetDiscoveryMode document
//gsoap tds  service method-encoding:	GetDiscoveryMode literal
//gsoap tds  service method-input-action:	GetDiscoveryMode http://www.onvif.org/ver10/device/wsdl/GetDiscoveryMode
//gsoap tds  service method-output-action:	GetDiscoveryMode http://www.onvif.org/ver10/device/wsdl/GetDiscoveryModeResponse
int __tds__GetDiscoveryMode(
    _tds__GetDiscoveryMode*             tds__GetDiscoveryMode,	///< Input parameter
    _tds__GetDiscoveryModeResponse     &tds__GetDiscoveryModeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetDiscoveryMode                                                  *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetDiscoveryMode" of service binding "DeviceBinding".
This operation sets the discovery mode operation of a device. See Section 7.2 for
the
				definition of the different device discovery modes.
The device shall support configuration of
				the discovery mode setting through the SetDiscoveryMode
command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetDiscoveryMode"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetDiscoveryMode"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetDiscoveryModeResponse"
*/

//gsoap tds  service method-protocol:	SetDiscoveryMode SOAP
//gsoap tds  service method-style:	SetDiscoveryMode document
//gsoap tds  service method-encoding:	SetDiscoveryMode literal
//gsoap tds  service method-input-action:	SetDiscoveryMode http://www.onvif.org/ver10/device/wsdl/SetDiscoveryMode
//gsoap tds  service method-output-action:	SetDiscoveryMode http://www.onvif.org/ver10/device/wsdl/SetDiscoveryModeResponse
int __tds__SetDiscoveryMode(
    _tds__SetDiscoveryMode*             tds__SetDiscoveryMode,	///< Input parameter
    _tds__SetDiscoveryModeResponse     &tds__SetDiscoveryModeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetRemoteDiscoveryMode                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetRemoteDiscoveryMode" of service binding "DeviceBinding".
This operation gets the remote discovery mode of a device. See Section 7.4 for the
definition
				of remote discovery extensions. A device that supports
remote discovery shall support
				retrieval of the remote discovery mode setting through
the GetRemoteDiscoveryMode
				command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetRemoteDiscoveryMode"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetRemoteDiscoveryMode"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetRemoteDiscoveryModeResponse"
*/

//gsoap tds  service method-protocol:	GetRemoteDiscoveryMode SOAP
//gsoap tds  service method-style:	GetRemoteDiscoveryMode document
//gsoap tds  service method-encoding:	GetRemoteDiscoveryMode literal
//gsoap tds  service method-input-action:	GetRemoteDiscoveryMode http://www.onvif.org/ver10/device/wsdl/GetRemoteDiscoveryMode
//gsoap tds  service method-output-action:	GetRemoteDiscoveryMode http://www.onvif.org/ver10/device/wsdl/GetRemoteDiscoveryModeResponse
int __tds__GetRemoteDiscoveryMode(
    _tds__GetRemoteDiscoveryMode*       tds__GetRemoteDiscoveryMode,	///< Input parameter
    _tds__GetRemoteDiscoveryModeResponse&tds__GetRemoteDiscoveryModeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetRemoteDiscoveryMode                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetRemoteDiscoveryMode" of service binding "DeviceBinding".
This operation sets the remote discovery mode of operation of a device. See Section
7.4 for
				the definition of remote discovery remote extensions.
A device that supports remote discovery
				shall support configuration of the discovery mode
setting through the
				SetRemoteDiscoveryMode command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetRemoteDiscoveryMode"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetRemoteDiscoveryMode"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetRemoteDiscoveryModeResponse"
*/

//gsoap tds  service method-protocol:	SetRemoteDiscoveryMode SOAP
//gsoap tds  service method-style:	SetRemoteDiscoveryMode document
//gsoap tds  service method-encoding:	SetRemoteDiscoveryMode literal
//gsoap tds  service method-input-action:	SetRemoteDiscoveryMode http://www.onvif.org/ver10/device/wsdl/SetRemoteDiscoveryMode
//gsoap tds  service method-output-action:	SetRemoteDiscoveryMode http://www.onvif.org/ver10/device/wsdl/SetRemoteDiscoveryModeResponse
int __tds__SetRemoteDiscoveryMode(
    _tds__SetRemoteDiscoveryMode*       tds__SetRemoteDiscoveryMode,	///< Input parameter
    _tds__SetRemoteDiscoveryModeResponse&tds__SetRemoteDiscoveryModeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetDPAddresses                                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetDPAddresses" of service binding "DeviceBinding".
This operation gets the remote DP address or addresses from a device. If the device
supports
				remote discovery, as specified in Section 7.4, the
device shall support retrieval of the remote
				DP address(es) through the GetDPAddresses command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetDPAddresses"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetDPAddresses"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetDPAddressesResponse"
*/

//gsoap tds  service method-protocol:	GetDPAddresses SOAP
//gsoap tds  service method-style:	GetDPAddresses document
//gsoap tds  service method-encoding:	GetDPAddresses literal
//gsoap tds  service method-input-action:	GetDPAddresses http://www.onvif.org/ver10/device/wsdl/GetDPAddresses
//gsoap tds  service method-output-action:	GetDPAddresses http://www.onvif.org/ver10/device/wsdl/GetDPAddressesResponse
int __tds__GetDPAddresses(
    _tds__GetDPAddresses*               tds__GetDPAddresses,	///< Input parameter
    _tds__GetDPAddressesResponse       &tds__GetDPAddressesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetEndpointReference                                              *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetEndpointReference" of service binding "DeviceBinding".
A client can ask for the device service endpoint reference address property that
can be used
				to derive the password equivalent for remote user
operation. The device shall support the
				GetEndpointReference command returning the address
property of the device service
				endpoint reference.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetEndpointReference"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetEndpointReference"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetEndpointReferenceResponse"
*/

//gsoap tds  service method-protocol:	GetEndpointReference SOAP
//gsoap tds  service method-style:	GetEndpointReference document
//gsoap tds  service method-encoding:	GetEndpointReference literal
//gsoap tds  service method-input-action:	GetEndpointReference http://www.onvif.org/ver10/device/wsdl/GetEndpointReference
//gsoap tds  service method-output-action:	GetEndpointReference http://www.onvif.org/ver10/device/wsdl/GetEndpointReferenceResponse
int __tds__GetEndpointReference(
    _tds__GetEndpointReference*         tds__GetEndpointReference,	///< Input parameter
    _tds__GetEndpointReferenceResponse &tds__GetEndpointReferenceResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetRemoteUser                                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetRemoteUser" of service binding "DeviceBinding".
This operation returns the configured remote user (if any). A device supporting
remote user
				handling shall support this operation. The user
is only valid for the WS-UserToken profile or
				as a HTTP / RTSP user.<br/>
				The algorithm to use for deriving the password is
described in section 5.12.2.1 of the core specification.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetRemoteUser"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetRemoteUser"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetRemoteUserResponse"
*/

//gsoap tds  service method-protocol:	GetRemoteUser SOAP
//gsoap tds  service method-style:	GetRemoteUser document
//gsoap tds  service method-encoding:	GetRemoteUser literal
//gsoap tds  service method-input-action:	GetRemoteUser http://www.onvif.org/ver10/device/wsdl/GetRemoteUser
//gsoap tds  service method-output-action:	GetRemoteUser http://www.onvif.org/ver10/device/wsdl/GetRemoteUserResponse
int __tds__GetRemoteUser(
    _tds__GetRemoteUser*                tds__GetRemoteUser,	///< Input parameter
    _tds__GetRemoteUserResponse        &tds__GetRemoteUserResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetRemoteUser                                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetRemoteUser" of service binding "DeviceBinding".
This operation sets the remote user. A device supporting remote user handling shall
support this
				operation. The user is only valid for the WS-UserToken
profile or as a HTTP / RTSP user.<br/>
				The password that is set shall always be the original
(not derived) password.<br/>
				If UseDerivedPassword is set password derivation
shall be done by the device when connecting to a
				remote device.The algorithm to use for deriving
the password is described in section 5.12.2.1 of the core specification.<br/>
				To remove the remote user SetRemoteUser should be
called without the RemoteUser parameter.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetRemoteUser"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetRemoteUser"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetRemoteUserResponse"
*/

//gsoap tds  service method-protocol:	SetRemoteUser SOAP
//gsoap tds  service method-style:	SetRemoteUser document
//gsoap tds  service method-encoding:	SetRemoteUser literal
//gsoap tds  service method-input-action:	SetRemoteUser http://www.onvif.org/ver10/device/wsdl/SetRemoteUser
//gsoap tds  service method-output-action:	SetRemoteUser http://www.onvif.org/ver10/device/wsdl/SetRemoteUserResponse
int __tds__SetRemoteUser(
    _tds__SetRemoteUser*                tds__SetRemoteUser,	///< Input parameter
    _tds__SetRemoteUserResponse        &tds__SetRemoteUserResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetUsers                                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetUsers" of service binding "DeviceBinding".
This operation lists the registered users and corresponding credentials on a device.
The
				device shall support retrieval of registered device
users and their credentials for the user
				token through the GetUsers command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetUsers"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetUsers"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetUsersResponse"
*/

//gsoap tds  service method-protocol:	GetUsers SOAP
//gsoap tds  service method-style:	GetUsers document
//gsoap tds  service method-encoding:	GetUsers literal
//gsoap tds  service method-input-action:	GetUsers http://www.onvif.org/ver10/device/wsdl/GetUsers
//gsoap tds  service method-output-action:	GetUsers http://www.onvif.org/ver10/device/wsdl/GetUsersResponse
int __tds__GetUsers(
    _tds__GetUsers*                     tds__GetUsers,	///< Input parameter
    _tds__GetUsersResponse             &tds__GetUsersResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__CreateUsers                                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__CreateUsers" of service binding "DeviceBinding".
This operation creates new device users and corresponding credentials on a device
for authentication purposes. 
				The device shall support creation of device users
and their credentials through the CreateUsers
				command. Either all users are created successfully
or a fault message shall be returned
				without creating any user.<br/>
				ONVIF compliant devices are recommended to support
password length of at least 28 bytes,
				as clients may follow the password derivation mechanism
which results in 'password
				equivalent' of length 28 bytes, as described in
section 3.1.2 of the ONVIF security white paper.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/CreateUsers"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/CreateUsers"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/CreateUsersResponse"
*/

//gsoap tds  service method-protocol:	CreateUsers SOAP
//gsoap tds  service method-style:	CreateUsers document
//gsoap tds  service method-encoding:	CreateUsers literal
//gsoap tds  service method-input-action:	CreateUsers http://www.onvif.org/ver10/device/wsdl/CreateUsers
//gsoap tds  service method-output-action:	CreateUsers http://www.onvif.org/ver10/device/wsdl/CreateUsersResponse
int __tds__CreateUsers(
    _tds__CreateUsers*                  tds__CreateUsers,	///< Input parameter
    _tds__CreateUsersResponse          &tds__CreateUsersResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__DeleteUsers                                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__DeleteUsers" of service binding "DeviceBinding".
This operation deletes users on a device. The device shall support deletion of device
users and their credentials 
				through the DeleteUsers command. A device may have
one or more fixed users
				that cannot be deleted to ensure access to the unit.
Either all users are deleted successfully or a
				fault message shall be returned and no users be
deleted.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/DeleteUsers"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/DeleteUsers"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/DeleteUsersResponse"
*/

//gsoap tds  service method-protocol:	DeleteUsers SOAP
//gsoap tds  service method-style:	DeleteUsers document
//gsoap tds  service method-encoding:	DeleteUsers literal
//gsoap tds  service method-input-action:	DeleteUsers http://www.onvif.org/ver10/device/wsdl/DeleteUsers
//gsoap tds  service method-output-action:	DeleteUsers http://www.onvif.org/ver10/device/wsdl/DeleteUsersResponse
int __tds__DeleteUsers(
    _tds__DeleteUsers*                  tds__DeleteUsers,	///< Input parameter
    _tds__DeleteUsersResponse          &tds__DeleteUsersResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetUser                                                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetUser" of service binding "DeviceBinding".
This operation updates the settings for one or several users on a device for authentication
purposes.
				The device shall support update of device users
and their credentials through the SetUser command. 
				Either all change requests are processed successfully
or a fault message shall be returned and no change requests be processed.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetUser"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetUser"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetUserResponse"
*/

//gsoap tds  service method-protocol:	SetUser SOAP
//gsoap tds  service method-style:	SetUser document
//gsoap tds  service method-encoding:	SetUser literal
//gsoap tds  service method-input-action:	SetUser http://www.onvif.org/ver10/device/wsdl/SetUser
//gsoap tds  service method-output-action:	SetUser http://www.onvif.org/ver10/device/wsdl/SetUserResponse
int __tds__SetUser(
    _tds__SetUser*                      tds__SetUser,	///< Input parameter
    _tds__SetUserResponse              &tds__SetUserResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetWsdlUrl                                                        *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetWsdlUrl" of service binding "DeviceBinding".
It is possible for an endpoint to request a URL that can be used to retrieve the
complete
				schema and WSDL definitions of a device. The command
gives in return a URL entry point
				where all the necessary product specific WSDL and
schema definitions can be retrieved. The
				device shall provide a URL for WSDL and schema download
through the GetWsdlUrl command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetWsdlUrl"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetWsdlUrl"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetWsdlUrlResponse"
*/

//gsoap tds  service method-protocol:	GetWsdlUrl SOAP
//gsoap tds  service method-style:	GetWsdlUrl document
//gsoap tds  service method-encoding:	GetWsdlUrl literal
//gsoap tds  service method-input-action:	GetWsdlUrl http://www.onvif.org/ver10/device/wsdl/GetWsdlUrl
//gsoap tds  service method-output-action:	GetWsdlUrl http://www.onvif.org/ver10/device/wsdl/GetWsdlUrlResponse
int __tds__GetWsdlUrl(
    _tds__GetWsdlUrl*                   tds__GetWsdlUrl,	///< Input parameter
    _tds__GetWsdlUrlResponse           &tds__GetWsdlUrlResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetCapabilities                                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetCapabilities" of service binding "DeviceBinding".
This method has been replaced by the more generic GetServices method.
			 For capabilities of individual services refer to the GetServiceCapabilities
methods.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetCapabilities"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetCapabilities"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetCapabilitiesResponse"
*/

//gsoap tds  service method-protocol:	GetCapabilities SOAP
//gsoap tds  service method-style:	GetCapabilities document
//gsoap tds  service method-encoding:	GetCapabilities literal
//gsoap tds  service method-input-action:	GetCapabilities http://www.onvif.org/ver10/device/wsdl/GetCapabilities
//gsoap tds  service method-output-action:	GetCapabilities http://www.onvif.org/ver10/device/wsdl/GetCapabilitiesResponse
int __tds__GetCapabilities(
    _tds__GetCapabilities*              tds__GetCapabilities,	///< Input parameter
    _tds__GetCapabilitiesResponse      &tds__GetCapabilitiesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetDPAddresses                                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetDPAddresses" of service binding "DeviceBinding".
This operation sets the remote DP address or addresses on a device. If the device
supports
				remote discovery, as specified in Section 7.4, the
device shall support configuration of the
				remote DP address(es) through the SetDPAddresses
command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetDPAddresses"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetDPAddresses"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetDPAddressesResponse"
*/

//gsoap tds  service method-protocol:	SetDPAddresses SOAP
//gsoap tds  service method-style:	SetDPAddresses document
//gsoap tds  service method-encoding:	SetDPAddresses literal
//gsoap tds  service method-input-action:	SetDPAddresses http://www.onvif.org/ver10/device/wsdl/SetDPAddresses
//gsoap tds  service method-output-action:	SetDPAddresses http://www.onvif.org/ver10/device/wsdl/SetDPAddressesResponse
int __tds__SetDPAddresses(
    _tds__SetDPAddresses*               tds__SetDPAddresses,	///< Input parameter
    _tds__SetDPAddressesResponse       &tds__SetDPAddressesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetHostname                                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetHostname" of service binding "DeviceBinding".
This operation is used by an endpoint to get the hostname from a device. The device
shall
				return its hostname configurations through the GetHostname
command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetHostname"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetHostname"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetHostnameResponse"
*/

//gsoap tds  service method-protocol:	GetHostname SOAP
//gsoap tds  service method-style:	GetHostname document
//gsoap tds  service method-encoding:	GetHostname literal
//gsoap tds  service method-input-action:	GetHostname http://www.onvif.org/ver10/device/wsdl/GetHostname
//gsoap tds  service method-output-action:	GetHostname http://www.onvif.org/ver10/device/wsdl/GetHostnameResponse
int __tds__GetHostname(
    _tds__GetHostname*                  tds__GetHostname,	///< Input parameter
    _tds__GetHostnameResponse          &tds__GetHostnameResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetHostname                                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetHostname" of service binding "DeviceBinding".
This operation sets the hostname on a device. It shall be possible to set the device
hostname
				configurations through the SetHostname command.<br/>
				A device shall accept string formated according
to RFC 1123 section 2.1 or alternatively to RFC 952, 
				other string shall be considered as invalid strings.

			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetHostname"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetHostname"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetHostnameResponse"
*/

//gsoap tds  service method-protocol:	SetHostname SOAP
//gsoap tds  service method-style:	SetHostname document
//gsoap tds  service method-encoding:	SetHostname literal
//gsoap tds  service method-input-action:	SetHostname http://www.onvif.org/ver10/device/wsdl/SetHostname
//gsoap tds  service method-output-action:	SetHostname http://www.onvif.org/ver10/device/wsdl/SetHostnameResponse
int __tds__SetHostname(
    _tds__SetHostname*                  tds__SetHostname,	///< Input parameter
    _tds__SetHostnameResponse          &tds__SetHostnameResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetHostnameFromDHCP                                               *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetHostnameFromDHCP" of service binding "DeviceBinding".
This operation controls whether the hostname is set manually or retrieved via DHCP.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetHostnameFromDHCP"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetHostnameFromDHCP"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetHostnameFromDHCPResponse"
*/

//gsoap tds  service method-protocol:	SetHostnameFromDHCP SOAP
//gsoap tds  service method-style:	SetHostnameFromDHCP document
//gsoap tds  service method-encoding:	SetHostnameFromDHCP literal
//gsoap tds  service method-input-action:	SetHostnameFromDHCP http://www.onvif.org/ver10/device/wsdl/SetHostnameFromDHCP
//gsoap tds  service method-output-action:	SetHostnameFromDHCP http://www.onvif.org/ver10/device/wsdl/SetHostnameFromDHCPResponse
int __tds__SetHostnameFromDHCP(
    _tds__SetHostnameFromDHCP*          tds__SetHostnameFromDHCP,	///< Input parameter
    _tds__SetHostnameFromDHCPResponse  &tds__SetHostnameFromDHCPResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetDNS                                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetDNS" of service binding "DeviceBinding".
This operation gets the DNS settings from a device. The device shall return its
DNS
				configurations through the GetDNS command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetDNS"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetDNS"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetDNSResponse"
*/

//gsoap tds  service method-protocol:	GetDNS SOAP
//gsoap tds  service method-style:	GetDNS document
//gsoap tds  service method-encoding:	GetDNS literal
//gsoap tds  service method-input-action:	GetDNS http://www.onvif.org/ver10/device/wsdl/GetDNS
//gsoap tds  service method-output-action:	GetDNS http://www.onvif.org/ver10/device/wsdl/GetDNSResponse
int __tds__GetDNS(
    _tds__GetDNS*                       tds__GetDNS,	///< Input parameter
    _tds__GetDNSResponse               &tds__GetDNSResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetDNS                                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetDNS" of service binding "DeviceBinding".
This operation sets the DNS settings on a device. It shall be possible to set the
device DNS
				configurations through the SetDNS command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetDNS"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetDNS"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetDNSResponse"
*/

//gsoap tds  service method-protocol:	SetDNS SOAP
//gsoap tds  service method-style:	SetDNS document
//gsoap tds  service method-encoding:	SetDNS literal
//gsoap tds  service method-input-action:	SetDNS http://www.onvif.org/ver10/device/wsdl/SetDNS
//gsoap tds  service method-output-action:	SetDNS http://www.onvif.org/ver10/device/wsdl/SetDNSResponse
int __tds__SetDNS(
    _tds__SetDNS*                       tds__SetDNS,	///< Input parameter
    _tds__SetDNSResponse               &tds__SetDNSResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetNTP                                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetNTP" of service binding "DeviceBinding".
This operation gets the NTP settings from a device. If the device supports NTP,
it shall be
				possible to get the NTP server settings through
the GetNTP command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetNTP"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetNTP"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetNTPResponse"
*/

//gsoap tds  service method-protocol:	GetNTP SOAP
//gsoap tds  service method-style:	GetNTP document
//gsoap tds  service method-encoding:	GetNTP literal
//gsoap tds  service method-input-action:	GetNTP http://www.onvif.org/ver10/device/wsdl/GetNTP
//gsoap tds  service method-output-action:	GetNTP http://www.onvif.org/ver10/device/wsdl/GetNTPResponse
int __tds__GetNTP(
    _tds__GetNTP*                       tds__GetNTP,	///< Input parameter
    _tds__GetNTPResponse               &tds__GetNTPResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetNTP                                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetNTP" of service binding "DeviceBinding".
This operation sets the NTP settings on a device. If the device supports NTP, it
shall be
				possible to set the NTP server settings through
the SetNTP command.<br/>
				A device shall accept string formated according
to RFC 1123 section 2.1 or alternatively to RFC 952, 
				other string shall be considered as invalid strings.
<br/>
				Changes to the NTP server list will not affect the
clock mode DateTimeType. Use SetSystemDateAndTime to activate NTP operation.
			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetNTP"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetNTP"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetNTPResponse"
*/

//gsoap tds  service method-protocol:	SetNTP SOAP
//gsoap tds  service method-style:	SetNTP document
//gsoap tds  service method-encoding:	SetNTP literal
//gsoap tds  service method-input-action:	SetNTP http://www.onvif.org/ver10/device/wsdl/SetNTP
//gsoap tds  service method-output-action:	SetNTP http://www.onvif.org/ver10/device/wsdl/SetNTPResponse
int __tds__SetNTP(
    _tds__SetNTP*                       tds__SetNTP,	///< Input parameter
    _tds__SetNTPResponse               &tds__SetNTPResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetDynamicDNS                                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetDynamicDNS" of service binding "DeviceBinding".
This operation gets the dynamic DNS settings from a device. If the device supports
dynamic
				DNS as specified in [RFC 2136] and [RFC 4702], it
shall be possible to get the type, name
				and TTL through the GetDynamicDNS command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetDynamicDNS"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetDynamicDNS"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetDynamicDNSResponse"
*/

//gsoap tds  service method-protocol:	GetDynamicDNS SOAP
//gsoap tds  service method-style:	GetDynamicDNS document
//gsoap tds  service method-encoding:	GetDynamicDNS literal
//gsoap tds  service method-input-action:	GetDynamicDNS http://www.onvif.org/ver10/device/wsdl/GetDynamicDNS
//gsoap tds  service method-output-action:	GetDynamicDNS http://www.onvif.org/ver10/device/wsdl/GetDynamicDNSResponse
int __tds__GetDynamicDNS(
    _tds__GetDynamicDNS*                tds__GetDynamicDNS,	///< Input parameter
    _tds__GetDynamicDNSResponse        &tds__GetDynamicDNSResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetDynamicDNS                                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetDynamicDNS" of service binding "DeviceBinding".
This operation sets the dynamic DNS settings on a device. If the device supports
dynamic
				DNS as specified in [RFC 2136] and [RFC 4702], it
shall be possible to set the type, name
				and TTL through the SetDynamicDNS command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetDynamicDNS"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetDynamicDNS"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetDynamicDNSResponse"
*/

//gsoap tds  service method-protocol:	SetDynamicDNS SOAP
//gsoap tds  service method-style:	SetDynamicDNS document
//gsoap tds  service method-encoding:	SetDynamicDNS literal
//gsoap tds  service method-input-action:	SetDynamicDNS http://www.onvif.org/ver10/device/wsdl/SetDynamicDNS
//gsoap tds  service method-output-action:	SetDynamicDNS http://www.onvif.org/ver10/device/wsdl/SetDynamicDNSResponse
int __tds__SetDynamicDNS(
    _tds__SetDynamicDNS*                tds__SetDynamicDNS,	///< Input parameter
    _tds__SetDynamicDNSResponse        &tds__SetDynamicDNSResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetNetworkInterfaces                                              *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetNetworkInterfaces" of service binding "DeviceBinding".
This operation gets the network interface configuration from a device. The device
shall
				support return of network interface configuration
settings as defined by the NetworkInterface
				type through the GetNetworkInterfaces command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetNetworkInterfaces"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetNetworkInterfaces"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetNetworkInterfacesResponse"
*/

//gsoap tds  service method-protocol:	GetNetworkInterfaces SOAP
//gsoap tds  service method-style:	GetNetworkInterfaces document
//gsoap tds  service method-encoding:	GetNetworkInterfaces literal
//gsoap tds  service method-input-action:	GetNetworkInterfaces http://www.onvif.org/ver10/device/wsdl/GetNetworkInterfaces
//gsoap tds  service method-output-action:	GetNetworkInterfaces http://www.onvif.org/ver10/device/wsdl/GetNetworkInterfacesResponse
int __tds__GetNetworkInterfaces(
    _tds__GetNetworkInterfaces*         tds__GetNetworkInterfaces,	///< Input parameter
    _tds__GetNetworkInterfacesResponse &tds__GetNetworkInterfacesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetNetworkInterfaces                                              *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetNetworkInterfaces" of service binding "DeviceBinding".
This operation sets the network interface configuration on a device. The device
shall support
				network configuration of supported network interfaces
through the SetNetworkInterfaces
				command.<br/>
				For interoperability with a client unaware of the
IEEE 802.11 extension a device shall retain
				its IEEE 802.11 configuration if the IEEE 802.11
configuration element isnt present in the
				request.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetNetworkInterfaces"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetNetworkInterfaces"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetNetworkInterfacesResponse"
*/

//gsoap tds  service method-protocol:	SetNetworkInterfaces SOAP
//gsoap tds  service method-style:	SetNetworkInterfaces document
//gsoap tds  service method-encoding:	SetNetworkInterfaces literal
//gsoap tds  service method-input-action:	SetNetworkInterfaces http://www.onvif.org/ver10/device/wsdl/SetNetworkInterfaces
//gsoap tds  service method-output-action:	SetNetworkInterfaces http://www.onvif.org/ver10/device/wsdl/SetNetworkInterfacesResponse
int __tds__SetNetworkInterfaces(
    _tds__SetNetworkInterfaces*         tds__SetNetworkInterfaces,	///< Input parameter
    _tds__SetNetworkInterfacesResponse &tds__SetNetworkInterfacesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetNetworkProtocols                                               *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetNetworkProtocols" of service binding "DeviceBinding".
This operation gets defined network protocols from a device. The device shall support
the
				GetNetworkProtocols command returning configured
network protocols.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetNetworkProtocols"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetNetworkProtocols"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetNetworkProtocolsResponse"
*/

//gsoap tds  service method-protocol:	GetNetworkProtocols SOAP
//gsoap tds  service method-style:	GetNetworkProtocols document
//gsoap tds  service method-encoding:	GetNetworkProtocols literal
//gsoap tds  service method-input-action:	GetNetworkProtocols http://www.onvif.org/ver10/device/wsdl/GetNetworkProtocols
//gsoap tds  service method-output-action:	GetNetworkProtocols http://www.onvif.org/ver10/device/wsdl/GetNetworkProtocolsResponse
int __tds__GetNetworkProtocols(
    _tds__GetNetworkProtocols*          tds__GetNetworkProtocols,	///< Input parameter
    _tds__GetNetworkProtocolsResponse  &tds__GetNetworkProtocolsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetNetworkProtocols                                               *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetNetworkProtocols" of service binding "DeviceBinding".
This operation configures defined network protocols on a device. The device shall
support
				configuration of defined network protocols through
the SetNetworkProtocols command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetNetworkProtocols"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetNetworkProtocols"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetNetworkProtocolsResponse"
*/

//gsoap tds  service method-protocol:	SetNetworkProtocols SOAP
//gsoap tds  service method-style:	SetNetworkProtocols document
//gsoap tds  service method-encoding:	SetNetworkProtocols literal
//gsoap tds  service method-input-action:	SetNetworkProtocols http://www.onvif.org/ver10/device/wsdl/SetNetworkProtocols
//gsoap tds  service method-output-action:	SetNetworkProtocols http://www.onvif.org/ver10/device/wsdl/SetNetworkProtocolsResponse
int __tds__SetNetworkProtocols(
    _tds__SetNetworkProtocols*          tds__SetNetworkProtocols,	///< Input parameter
    _tds__SetNetworkProtocolsResponse  &tds__SetNetworkProtocolsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetNetworkDefaultGateway                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetNetworkDefaultGateway" of service binding "DeviceBinding".
This operation gets the default gateway settings from a device. The device shall
support the
				GetNetworkDefaultGateway command returning configured
default gateway address(es).

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetNetworkDefaultGateway"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetNetworkDefaultGateway"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetNetworkDefaultGatewayResponse"
*/

//gsoap tds  service method-protocol:	GetNetworkDefaultGateway SOAP
//gsoap tds  service method-style:	GetNetworkDefaultGateway document
//gsoap tds  service method-encoding:	GetNetworkDefaultGateway literal
//gsoap tds  service method-input-action:	GetNetworkDefaultGateway http://www.onvif.org/ver10/device/wsdl/GetNetworkDefaultGateway
//gsoap tds  service method-output-action:	GetNetworkDefaultGateway http://www.onvif.org/ver10/device/wsdl/GetNetworkDefaultGatewayResponse
int __tds__GetNetworkDefaultGateway(
    _tds__GetNetworkDefaultGateway*     tds__GetNetworkDefaultGateway,	///< Input parameter
    _tds__GetNetworkDefaultGatewayResponse&tds__GetNetworkDefaultGatewayResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetNetworkDefaultGateway                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetNetworkDefaultGateway" of service binding "DeviceBinding".
This operation sets the default gateway settings on a device. The device shall support
				configuration of default gateway through the SetNetworkDefaultGateway
command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetNetworkDefaultGateway"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetNetworkDefaultGateway"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetNetworkDefaultGatewayResponse"
*/

//gsoap tds  service method-protocol:	SetNetworkDefaultGateway SOAP
//gsoap tds  service method-style:	SetNetworkDefaultGateway document
//gsoap tds  service method-encoding:	SetNetworkDefaultGateway literal
//gsoap tds  service method-input-action:	SetNetworkDefaultGateway http://www.onvif.org/ver10/device/wsdl/SetNetworkDefaultGateway
//gsoap tds  service method-output-action:	SetNetworkDefaultGateway http://www.onvif.org/ver10/device/wsdl/SetNetworkDefaultGatewayResponse
int __tds__SetNetworkDefaultGateway(
    _tds__SetNetworkDefaultGateway*     tds__SetNetworkDefaultGateway,	///< Input parameter
    _tds__SetNetworkDefaultGatewayResponse&tds__SetNetworkDefaultGatewayResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetZeroConfiguration                                              *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetZeroConfiguration" of service binding "DeviceBinding".
This operation gets the zero-configuration from a device. If the device supports
dynamic IP
				configuration according to [RFC3927], it shall support
the return of IPv4 zero configuration
				address and status through the GetZeroConfiguration
command.<br/>
			Devices supporting zero configuration on more than one interface
shall use the extension to list the additional interface settings.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetZeroConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetZeroConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetZeroConfigurationResponse"
*/

//gsoap tds  service method-protocol:	GetZeroConfiguration SOAP
//gsoap tds  service method-style:	GetZeroConfiguration document
//gsoap tds  service method-encoding:	GetZeroConfiguration literal
//gsoap tds  service method-input-action:	GetZeroConfiguration http://www.onvif.org/ver10/device/wsdl/GetZeroConfiguration
//gsoap tds  service method-output-action:	GetZeroConfiguration http://www.onvif.org/ver10/device/wsdl/GetZeroConfigurationResponse
int __tds__GetZeroConfiguration(
    _tds__GetZeroConfiguration*         tds__GetZeroConfiguration,	///< Input parameter
    _tds__GetZeroConfigurationResponse &tds__GetZeroConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetZeroConfiguration                                              *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetZeroConfiguration" of service binding "DeviceBinding".
This operation sets the zero-configuration. Use GetCapalities to get if zero-zero-configuration
is supported or not.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetZeroConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetZeroConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetZeroConfigurationResponse"
*/

//gsoap tds  service method-protocol:	SetZeroConfiguration SOAP
//gsoap tds  service method-style:	SetZeroConfiguration document
//gsoap tds  service method-encoding:	SetZeroConfiguration literal
//gsoap tds  service method-input-action:	SetZeroConfiguration http://www.onvif.org/ver10/device/wsdl/SetZeroConfiguration
//gsoap tds  service method-output-action:	SetZeroConfiguration http://www.onvif.org/ver10/device/wsdl/SetZeroConfigurationResponse
int __tds__SetZeroConfiguration(
    _tds__SetZeroConfiguration*         tds__SetZeroConfiguration,	///< Input parameter
    _tds__SetZeroConfigurationResponse &tds__SetZeroConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetIPAddressFilter                                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetIPAddressFilter" of service binding "DeviceBinding".
This operation gets the IP address filter settings from a device. If the device
supports device
				access control based on IP filtering rules (denied
or accepted ranges of IP addresses), the
				device shall support the GetIPAddressFilter command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetIPAddressFilter"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetIPAddressFilter"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetIPAddressFilterResponse"
*/

//gsoap tds  service method-protocol:	GetIPAddressFilter SOAP
//gsoap tds  service method-style:	GetIPAddressFilter document
//gsoap tds  service method-encoding:	GetIPAddressFilter literal
//gsoap tds  service method-input-action:	GetIPAddressFilter http://www.onvif.org/ver10/device/wsdl/GetIPAddressFilter
//gsoap tds  service method-output-action:	GetIPAddressFilter http://www.onvif.org/ver10/device/wsdl/GetIPAddressFilterResponse
int __tds__GetIPAddressFilter(
    _tds__GetIPAddressFilter*           tds__GetIPAddressFilter,	///< Input parameter
    _tds__GetIPAddressFilterResponse   &tds__GetIPAddressFilterResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetIPAddressFilter                                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetIPAddressFilter" of service binding "DeviceBinding".
This operation sets the IP address filter settings on a device. If the device supports
device
				access control based on IP filtering rules (denied
or accepted ranges of IP addresses), the
				device shall support configuration of IP filtering
rules through the SetIPAddressFilter
				command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetIPAddressFilter"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetIPAddressFilter"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetIPAddressFilterResponse"
*/

//gsoap tds  service method-protocol:	SetIPAddressFilter SOAP
//gsoap tds  service method-style:	SetIPAddressFilter document
//gsoap tds  service method-encoding:	SetIPAddressFilter literal
//gsoap tds  service method-input-action:	SetIPAddressFilter http://www.onvif.org/ver10/device/wsdl/SetIPAddressFilter
//gsoap tds  service method-output-action:	SetIPAddressFilter http://www.onvif.org/ver10/device/wsdl/SetIPAddressFilterResponse
int __tds__SetIPAddressFilter(
    _tds__SetIPAddressFilter*           tds__SetIPAddressFilter,	///< Input parameter
    _tds__SetIPAddressFilterResponse   &tds__SetIPAddressFilterResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__AddIPAddressFilter                                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__AddIPAddressFilter" of service binding "DeviceBinding".
This operation adds an IP filter address to a device. If the device supports device
access
				control based on IP filtering rules (denied or accepted
ranges of IP addresses), the device
				shall support adding of IP filtering addresses through
the AddIPAddressFilter command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/AddIPAddressFilter"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/AddIPAddressFilter"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/AddIPAddressFilterResponse"
*/

//gsoap tds  service method-protocol:	AddIPAddressFilter SOAP
//gsoap tds  service method-style:	AddIPAddressFilter document
//gsoap tds  service method-encoding:	AddIPAddressFilter literal
//gsoap tds  service method-input-action:	AddIPAddressFilter http://www.onvif.org/ver10/device/wsdl/AddIPAddressFilter
//gsoap tds  service method-output-action:	AddIPAddressFilter http://www.onvif.org/ver10/device/wsdl/AddIPAddressFilterResponse
int __tds__AddIPAddressFilter(
    _tds__AddIPAddressFilter*           tds__AddIPAddressFilter,	///< Input parameter
    _tds__AddIPAddressFilterResponse   &tds__AddIPAddressFilterResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__RemoveIPAddressFilter                                             *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__RemoveIPAddressFilter" of service binding "DeviceBinding".
This operation deletes an IP filter address from a device. If the device supports
device access
				control based on IP filtering rules (denied or accepted
ranges of IP addresses), the device
				shall support deletion of IP filtering addresses
through the RemoveIPAddressFilter command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/RemoveIPAddressFilter"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/RemoveIPAddressFilter"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/RemoveIPAddressFilterResponse"
*/

//gsoap tds  service method-protocol:	RemoveIPAddressFilter SOAP
//gsoap tds  service method-style:	RemoveIPAddressFilter document
//gsoap tds  service method-encoding:	RemoveIPAddressFilter literal
//gsoap tds  service method-input-action:	RemoveIPAddressFilter http://www.onvif.org/ver10/device/wsdl/RemoveIPAddressFilter
//gsoap tds  service method-output-action:	RemoveIPAddressFilter http://www.onvif.org/ver10/device/wsdl/RemoveIPAddressFilterResponse
int __tds__RemoveIPAddressFilter(
    _tds__RemoveIPAddressFilter*        tds__RemoveIPAddressFilter,	///< Input parameter
    _tds__RemoveIPAddressFilterResponse&tds__RemoveIPAddressFilterResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetAccessPolicy                                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetAccessPolicy" of service binding "DeviceBinding".
Access to different services and sub-sets of services should be subject to access
control. The
				WS-Security framework gives the prerequisite for
end-point authentication. Authorization
				decisions can then be taken using an access security
policy. This standard does not mandate
				any particular policy description format or security
policy but this is up to the device
				manufacturer or system provider to choose policy
and policy description format of choice.
				However, an access policy (in arbitrary format)
can be requested using this command. If the
				device supports access policy settings based on
WS-Security authentication, then the device
				shall support this command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetAccessPolicy"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetAccessPolicy"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetAccessPolicyResponse"
*/

//gsoap tds  service method-protocol:	GetAccessPolicy SOAP
//gsoap tds  service method-style:	GetAccessPolicy document
//gsoap tds  service method-encoding:	GetAccessPolicy literal
//gsoap tds  service method-input-action:	GetAccessPolicy http://www.onvif.org/ver10/device/wsdl/GetAccessPolicy
//gsoap tds  service method-output-action:	GetAccessPolicy http://www.onvif.org/ver10/device/wsdl/GetAccessPolicyResponse
int __tds__GetAccessPolicy(
    _tds__GetAccessPolicy*              tds__GetAccessPolicy,	///< Input parameter
    _tds__GetAccessPolicyResponse      &tds__GetAccessPolicyResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetAccessPolicy                                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetAccessPolicy" of service binding "DeviceBinding".
This command sets the device access security policy (for more details on the access
security
				policy see the Get command). If the device supports
access policy settings
				based on WS-Security authentication, then the device
shall support this command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetAccessPolicy"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetAccessPolicy"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetAccessPolicyResponse"
*/

//gsoap tds  service method-protocol:	SetAccessPolicy SOAP
//gsoap tds  service method-style:	SetAccessPolicy document
//gsoap tds  service method-encoding:	SetAccessPolicy literal
//gsoap tds  service method-input-action:	SetAccessPolicy http://www.onvif.org/ver10/device/wsdl/SetAccessPolicy
//gsoap tds  service method-output-action:	SetAccessPolicy http://www.onvif.org/ver10/device/wsdl/SetAccessPolicyResponse
int __tds__SetAccessPolicy(
    _tds__SetAccessPolicy*              tds__SetAccessPolicy,	///< Input parameter
    _tds__SetAccessPolicyResponse      &tds__SetAccessPolicyResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__CreateCertificate                                                 *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__CreateCertificate" of service binding "DeviceBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/CreateCertificate"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/CreateCertificate"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/CreateCertificateResponse"
*/

//gsoap tds  service method-protocol:	CreateCertificate SOAP
//gsoap tds  service method-style:	CreateCertificate document
//gsoap tds  service method-encoding:	CreateCertificate literal
//gsoap tds  service method-input-action:	CreateCertificate http://www.onvif.org/ver10/device/wsdl/CreateCertificate
//gsoap tds  service method-output-action:	CreateCertificate http://www.onvif.org/ver10/device/wsdl/CreateCertificateResponse
int __tds__CreateCertificate(
    _tds__CreateCertificate*            tds__CreateCertificate,	///< Input parameter
    _tds__CreateCertificateResponse    &tds__CreateCertificateResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetCertificates                                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetCertificates" of service binding "DeviceBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetCertificates"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetCertificates"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetCertificatesResponse"
*/

//gsoap tds  service method-protocol:	GetCertificates SOAP
//gsoap tds  service method-style:	GetCertificates document
//gsoap tds  service method-encoding:	GetCertificates literal
//gsoap tds  service method-input-action:	GetCertificates http://www.onvif.org/ver10/device/wsdl/GetCertificates
//gsoap tds  service method-output-action:	GetCertificates http://www.onvif.org/ver10/device/wsdl/GetCertificatesResponse
int __tds__GetCertificates(
    _tds__GetCertificates*              tds__GetCertificates,	///< Input parameter
    _tds__GetCertificatesResponse      &tds__GetCertificatesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetCertificatesStatus                                             *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetCertificatesStatus" of service binding "DeviceBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetCertificatesStatus"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetCertificatesStatus"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetCertificatesStatusResponse"
*/

//gsoap tds  service method-protocol:	GetCertificatesStatus SOAP
//gsoap tds  service method-style:	GetCertificatesStatus document
//gsoap tds  service method-encoding:	GetCertificatesStatus literal
//gsoap tds  service method-input-action:	GetCertificatesStatus http://www.onvif.org/ver10/device/wsdl/GetCertificatesStatus
//gsoap tds  service method-output-action:	GetCertificatesStatus http://www.onvif.org/ver10/device/wsdl/GetCertificatesStatusResponse
int __tds__GetCertificatesStatus(
    _tds__GetCertificatesStatus*        tds__GetCertificatesStatus,	///< Input parameter
    _tds__GetCertificatesStatusResponse&tds__GetCertificatesStatusResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetCertificatesStatus                                             *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetCertificatesStatus" of service binding "DeviceBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetCertificatesStatus"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetCertificatesStatus"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetCertificatesStatusResponse"
*/

//gsoap tds  service method-protocol:	SetCertificatesStatus SOAP
//gsoap tds  service method-style:	SetCertificatesStatus document
//gsoap tds  service method-encoding:	SetCertificatesStatus literal
//gsoap tds  service method-input-action:	SetCertificatesStatus http://www.onvif.org/ver10/device/wsdl/SetCertificatesStatus
//gsoap tds  service method-output-action:	SetCertificatesStatus http://www.onvif.org/ver10/device/wsdl/SetCertificatesStatusResponse
int __tds__SetCertificatesStatus(
    _tds__SetCertificatesStatus*        tds__SetCertificatesStatus,	///< Input parameter
    _tds__SetCertificatesStatusResponse&tds__SetCertificatesStatusResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__DeleteCertificates                                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__DeleteCertificates" of service binding "DeviceBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/DeleteCertificates"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/DeleteCertificates"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/DeleteCertificatesResponse"
*/

//gsoap tds  service method-protocol:	DeleteCertificates SOAP
//gsoap tds  service method-style:	DeleteCertificates document
//gsoap tds  service method-encoding:	DeleteCertificates literal
//gsoap tds  service method-input-action:	DeleteCertificates http://www.onvif.org/ver10/device/wsdl/DeleteCertificates
//gsoap tds  service method-output-action:	DeleteCertificates http://www.onvif.org/ver10/device/wsdl/DeleteCertificatesResponse
int __tds__DeleteCertificates(
    _tds__DeleteCertificates*           tds__DeleteCertificates,	///< Input parameter
    _tds__DeleteCertificatesResponse   &tds__DeleteCertificatesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetPkcs10Request                                                  *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetPkcs10Request" of service binding "DeviceBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetPkcs10Request"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetPkcs10Request"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetPkcs10RequestResponse"
*/

//gsoap tds  service method-protocol:	GetPkcs10Request SOAP
//gsoap tds  service method-style:	GetPkcs10Request document
//gsoap tds  service method-encoding:	GetPkcs10Request literal
//gsoap tds  service method-input-action:	GetPkcs10Request http://www.onvif.org/ver10/device/wsdl/GetPkcs10Request
//gsoap tds  service method-output-action:	GetPkcs10Request http://www.onvif.org/ver10/device/wsdl/GetPkcs10RequestResponse
int __tds__GetPkcs10Request(
    _tds__GetPkcs10Request*             tds__GetPkcs10Request,	///< Input parameter
    _tds__GetPkcs10RequestResponse     &tds__GetPkcs10RequestResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__LoadCertificates                                                  *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__LoadCertificates" of service binding "DeviceBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/LoadCertificates"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/LoadCertificates"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/LoadCertificatesResponse"
*/

//gsoap tds  service method-protocol:	LoadCertificates SOAP
//gsoap tds  service method-style:	LoadCertificates document
//gsoap tds  service method-encoding:	LoadCertificates literal
//gsoap tds  service method-input-action:	LoadCertificates http://www.onvif.org/ver10/device/wsdl/LoadCertificates
//gsoap tds  service method-output-action:	LoadCertificates http://www.onvif.org/ver10/device/wsdl/LoadCertificatesResponse
int __tds__LoadCertificates(
    _tds__LoadCertificates*             tds__LoadCertificates,	///< Input parameter
    _tds__LoadCertificatesResponse     &tds__LoadCertificatesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetClientCertificateMode                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetClientCertificateMode" of service binding "DeviceBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetClientCertificateMode"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetClientCertificateMode"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetClientCertificateModeResponse"
*/

//gsoap tds  service method-protocol:	GetClientCertificateMode SOAP
//gsoap tds  service method-style:	GetClientCertificateMode document
//gsoap tds  service method-encoding:	GetClientCertificateMode literal
//gsoap tds  service method-input-action:	GetClientCertificateMode http://www.onvif.org/ver10/device/wsdl/GetClientCertificateMode
//gsoap tds  service method-output-action:	GetClientCertificateMode http://www.onvif.org/ver10/device/wsdl/GetClientCertificateModeResponse
int __tds__GetClientCertificateMode(
    _tds__GetClientCertificateMode*     tds__GetClientCertificateMode,	///< Input parameter
    _tds__GetClientCertificateModeResponse&tds__GetClientCertificateModeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetClientCertificateMode                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetClientCertificateMode" of service binding "DeviceBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetClientCertificateMode"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetClientCertificateMode"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetClientCertificateModeResponse"
*/

//gsoap tds  service method-protocol:	SetClientCertificateMode SOAP
//gsoap tds  service method-style:	SetClientCertificateMode document
//gsoap tds  service method-encoding:	SetClientCertificateMode literal
//gsoap tds  service method-input-action:	SetClientCertificateMode http://www.onvif.org/ver10/device/wsdl/SetClientCertificateMode
//gsoap tds  service method-output-action:	SetClientCertificateMode http://www.onvif.org/ver10/device/wsdl/SetClientCertificateModeResponse
int __tds__SetClientCertificateMode(
    _tds__SetClientCertificateMode*     tds__SetClientCertificateMode,	///< Input parameter
    _tds__SetClientCertificateModeResponse&tds__SetClientCertificateModeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetRelayOutputs                                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetRelayOutputs" of service binding "DeviceBinding".
This operation gets a list of all available relay outputs and their settings.<br/>
				This method has been depricated with version 2.0.
Refer to the DeviceIO service.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetRelayOutputs"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetRelayOutputs"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetRelayOutputsResponse"
*/

//gsoap tds  service method-protocol:	GetRelayOutputs SOAP
//gsoap tds  service method-style:	GetRelayOutputs document
//gsoap tds  service method-encoding:	GetRelayOutputs literal
//gsoap tds  service method-input-action:	GetRelayOutputs http://www.onvif.org/ver10/device/wsdl/GetRelayOutputs
//gsoap tds  service method-output-action:	GetRelayOutputs http://www.onvif.org/ver10/device/wsdl/GetRelayOutputsResponse
int __tds__GetRelayOutputs(
    _tds__GetRelayOutputs*              tds__GetRelayOutputs,	///< Input parameter
    _tds__GetRelayOutputsResponse      &tds__GetRelayOutputsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetRelayOutputSettings                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetRelayOutputSettings" of service binding "DeviceBinding".
This operation sets the settings of a relay output.
				<br/>This method has been depricated with version
2.0. Refer to the DeviceIO service.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetRelayOutputSettings"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetRelayOutputSettings"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetRelayOutputSettingsResponse"
*/

//gsoap tds  service method-protocol:	SetRelayOutputSettings SOAP
//gsoap tds  service method-style:	SetRelayOutputSettings document
//gsoap tds  service method-encoding:	SetRelayOutputSettings literal
//gsoap tds  service method-input-action:	SetRelayOutputSettings http://www.onvif.org/ver10/device/wsdl/SetRelayOutputSettings
//gsoap tds  service method-output-action:	SetRelayOutputSettings http://www.onvif.org/ver10/device/wsdl/SetRelayOutputSettingsResponse
int __tds__SetRelayOutputSettings(
    _tds__SetRelayOutputSettings*       tds__SetRelayOutputSettings,	///< Input parameter
    _tds__SetRelayOutputSettingsResponse&tds__SetRelayOutputSettingsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetRelayOutputState                                               *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetRelayOutputState" of service binding "DeviceBinding".
This operation sets the state of a relay output.
				<br/>This method has been depricated with version
2.0. Refer to the DeviceIO service.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetRelayOutputState"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetRelayOutputState"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetRelayOutputStateResponse"
*/

//gsoap tds  service method-protocol:	SetRelayOutputState SOAP
//gsoap tds  service method-style:	SetRelayOutputState document
//gsoap tds  service method-encoding:	SetRelayOutputState literal
//gsoap tds  service method-input-action:	SetRelayOutputState http://www.onvif.org/ver10/device/wsdl/SetRelayOutputState
//gsoap tds  service method-output-action:	SetRelayOutputState http://www.onvif.org/ver10/device/wsdl/SetRelayOutputStateResponse
int __tds__SetRelayOutputState(
    _tds__SetRelayOutputState*          tds__SetRelayOutputState,	///< Input parameter
    _tds__SetRelayOutputStateResponse  &tds__SetRelayOutputStateResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SendAuxiliaryCommand                                              *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SendAuxiliaryCommand" of service binding "DeviceBinding".
Manage auxiliary commands supported by a device, such as controlling an Infrared
(IR) lamp, 
				a heater or a wiper or a thermometer that is connected
to the device.<br/>
				The supported commands can be retrieved via the
AuxiliaryCommands capability.<br/>
				Although the name of the auxiliary commands can
be freely defined, commands starting with the prefix tt: are 
				reserved to define frequently used commands and
these reserved commands shall all share the "tt:command|parameter" syntax.
				<ul>
					<li>tt:Wiper|On  Request to start the
wiper.</li>
					<li>tt:Wiper|Off  Request to stop the
wiper.</li>
					<li>tt:Washer|On  Request to start the
washer.</li>
					<li>tt:Washer|Off  Request to stop the
washer.</li>
					<li>tt:WashingProcedure|On  Request to
start the washing procedure.</li>
					<li>tt: WashingProcedure |Off  Request
to stop the washing procedure.</li>
					<li>tt:IRLamp|On  Request to turn ON
an IR illuminator attached to the unit.</li>
					<li>tt:IRLamp|Off  Request to turn OFF
an IR illuminator attached to the unit.</li>
					<li>tt:IRLamp|Auto  Request to configure
an IR illuminator attached to the unit so that it automatically turns ON and OFF.</li>
				</ul>
				A device that indicates auxiliary service capability
shall support this command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SendAuxiliaryCommand"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SendAuxiliaryCommand"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SendAuxiliaryCommandResponse"
*/

//gsoap tds  service method-protocol:	SendAuxiliaryCommand SOAP
//gsoap tds  service method-style:	SendAuxiliaryCommand document
//gsoap tds  service method-encoding:	SendAuxiliaryCommand literal
//gsoap tds  service method-input-action:	SendAuxiliaryCommand http://www.onvif.org/ver10/device/wsdl/SendAuxiliaryCommand
//gsoap tds  service method-output-action:	SendAuxiliaryCommand http://www.onvif.org/ver10/device/wsdl/SendAuxiliaryCommandResponse
int __tds__SendAuxiliaryCommand(
    _tds__SendAuxiliaryCommand*         tds__SendAuxiliaryCommand,	///< Input parameter
    _tds__SendAuxiliaryCommandResponse &tds__SendAuxiliaryCommandResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetCACertificates                                                 *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetCACertificates" of service binding "DeviceBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetCACertificates"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetCACertificates"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetCACertificatesResponse"
*/

//gsoap tds  service method-protocol:	GetCACertificates SOAP
//gsoap tds  service method-style:	GetCACertificates document
//gsoap tds  service method-encoding:	GetCACertificates literal
//gsoap tds  service method-input-action:	GetCACertificates http://www.onvif.org/ver10/device/wsdl/GetCACertificates
//gsoap tds  service method-output-action:	GetCACertificates http://www.onvif.org/ver10/device/wsdl/GetCACertificatesResponse
int __tds__GetCACertificates(
    _tds__GetCACertificates*            tds__GetCACertificates,	///< Input parameter
    _tds__GetCACertificatesResponse    &tds__GetCACertificatesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__LoadCertificateWithPrivateKey                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__LoadCertificateWithPrivateKey" of service binding "DeviceBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/LoadCertificateWithPrivateKey"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/LoadCertificateWithPrivateKey"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/LoadCertificateWithPrivateKeyResponse"
*/

//gsoap tds  service method-protocol:	LoadCertificateWithPrivateKey SOAP
//gsoap tds  service method-style:	LoadCertificateWithPrivateKey document
//gsoap tds  service method-encoding:	LoadCertificateWithPrivateKey literal
//gsoap tds  service method-input-action:	LoadCertificateWithPrivateKey http://www.onvif.org/ver10/device/wsdl/LoadCertificateWithPrivateKey
//gsoap tds  service method-output-action:	LoadCertificateWithPrivateKey http://www.onvif.org/ver10/device/wsdl/LoadCertificateWithPrivateKeyResponse
int __tds__LoadCertificateWithPrivateKey(
    _tds__LoadCertificateWithPrivateKey* tds__LoadCertificateWithPrivateKey,	///< Input parameter
    _tds__LoadCertificateWithPrivateKeyResponse&tds__LoadCertificateWithPrivateKeyResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetCertificateInformation                                         *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetCertificateInformation" of service binding "DeviceBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetCertificateInformation"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetCertificateInformation"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetCertificateInformationResponse"
*/

//gsoap tds  service method-protocol:	GetCertificateInformation SOAP
//gsoap tds  service method-style:	GetCertificateInformation document
//gsoap tds  service method-encoding:	GetCertificateInformation literal
//gsoap tds  service method-input-action:	GetCertificateInformation http://www.onvif.org/ver10/device/wsdl/GetCertificateInformation
//gsoap tds  service method-output-action:	GetCertificateInformation http://www.onvif.org/ver10/device/wsdl/GetCertificateInformationResponse
int __tds__GetCertificateInformation(
    _tds__GetCertificateInformation*    tds__GetCertificateInformation,	///< Input parameter
    _tds__GetCertificateInformationResponse&tds__GetCertificateInformationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__LoadCACertificates                                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__LoadCACertificates" of service binding "DeviceBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/LoadCACertificates"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/LoadCACertificates"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/LoadCACertificatesResponse"
*/

//gsoap tds  service method-protocol:	LoadCACertificates SOAP
//gsoap tds  service method-style:	LoadCACertificates document
//gsoap tds  service method-encoding:	LoadCACertificates literal
//gsoap tds  service method-input-action:	LoadCACertificates http://www.onvif.org/ver10/device/wsdl/LoadCACertificates
//gsoap tds  service method-output-action:	LoadCACertificates http://www.onvif.org/ver10/device/wsdl/LoadCACertificatesResponse
int __tds__LoadCACertificates(
    _tds__LoadCACertificates*           tds__LoadCACertificates,	///< Input parameter
    _tds__LoadCACertificatesResponse   &tds__LoadCACertificatesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__CreateDot1XConfiguration                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__CreateDot1XConfiguration" of service binding "DeviceBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/CreateDot1XConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/CreateDot1XConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/CreateDot1XConfigurationResponse"
*/

//gsoap tds  service method-protocol:	CreateDot1XConfiguration SOAP
//gsoap tds  service method-style:	CreateDot1XConfiguration document
//gsoap tds  service method-encoding:	CreateDot1XConfiguration literal
//gsoap tds  service method-input-action:	CreateDot1XConfiguration http://www.onvif.org/ver10/device/wsdl/CreateDot1XConfiguration
//gsoap tds  service method-output-action:	CreateDot1XConfiguration http://www.onvif.org/ver10/device/wsdl/CreateDot1XConfigurationResponse
int __tds__CreateDot1XConfiguration(
    _tds__CreateDot1XConfiguration*     tds__CreateDot1XConfiguration,	///< Input parameter
    _tds__CreateDot1XConfigurationResponse&tds__CreateDot1XConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetDot1XConfiguration                                             *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetDot1XConfiguration" of service binding "DeviceBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetDot1XConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetDot1XConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetDot1XConfigurationResponse"
*/

//gsoap tds  service method-protocol:	SetDot1XConfiguration SOAP
//gsoap tds  service method-style:	SetDot1XConfiguration document
//gsoap tds  service method-encoding:	SetDot1XConfiguration literal
//gsoap tds  service method-input-action:	SetDot1XConfiguration http://www.onvif.org/ver10/device/wsdl/SetDot1XConfiguration
//gsoap tds  service method-output-action:	SetDot1XConfiguration http://www.onvif.org/ver10/device/wsdl/SetDot1XConfigurationResponse
int __tds__SetDot1XConfiguration(
    _tds__SetDot1XConfiguration*        tds__SetDot1XConfiguration,	///< Input parameter
    _tds__SetDot1XConfigurationResponse&tds__SetDot1XConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetDot1XConfiguration                                             *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetDot1XConfiguration" of service binding "DeviceBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetDot1XConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetDot1XConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetDot1XConfigurationResponse"
*/

//gsoap tds  service method-protocol:	GetDot1XConfiguration SOAP
//gsoap tds  service method-style:	GetDot1XConfiguration document
//gsoap tds  service method-encoding:	GetDot1XConfiguration literal
//gsoap tds  service method-input-action:	GetDot1XConfiguration http://www.onvif.org/ver10/device/wsdl/GetDot1XConfiguration
//gsoap tds  service method-output-action:	GetDot1XConfiguration http://www.onvif.org/ver10/device/wsdl/GetDot1XConfigurationResponse
int __tds__GetDot1XConfiguration(
    _tds__GetDot1XConfiguration*        tds__GetDot1XConfiguration,	///< Input parameter
    _tds__GetDot1XConfigurationResponse&tds__GetDot1XConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetDot1XConfigurations                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetDot1XConfigurations" of service binding "DeviceBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetDot1XConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetDot1XConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetDot1XConfigurationsResponse"
*/

//gsoap tds  service method-protocol:	GetDot1XConfigurations SOAP
//gsoap tds  service method-style:	GetDot1XConfigurations document
//gsoap tds  service method-encoding:	GetDot1XConfigurations literal
//gsoap tds  service method-input-action:	GetDot1XConfigurations http://www.onvif.org/ver10/device/wsdl/GetDot1XConfigurations
//gsoap tds  service method-output-action:	GetDot1XConfigurations http://www.onvif.org/ver10/device/wsdl/GetDot1XConfigurationsResponse
int __tds__GetDot1XConfigurations(
    _tds__GetDot1XConfigurations*       tds__GetDot1XConfigurations,	///< Input parameter
    _tds__GetDot1XConfigurationsResponse&tds__GetDot1XConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__DeleteDot1XConfiguration                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__DeleteDot1XConfiguration" of service binding "DeviceBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/DeleteDot1XConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/DeleteDot1XConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/DeleteDot1XConfigurationResponse"
*/

//gsoap tds  service method-protocol:	DeleteDot1XConfiguration SOAP
//gsoap tds  service method-style:	DeleteDot1XConfiguration document
//gsoap tds  service method-encoding:	DeleteDot1XConfiguration literal
//gsoap tds  service method-input-action:	DeleteDot1XConfiguration http://www.onvif.org/ver10/device/wsdl/DeleteDot1XConfiguration
//gsoap tds  service method-output-action:	DeleteDot1XConfiguration http://www.onvif.org/ver10/device/wsdl/DeleteDot1XConfigurationResponse
int __tds__DeleteDot1XConfiguration(
    _tds__DeleteDot1XConfiguration*     tds__DeleteDot1XConfiguration,	///< Input parameter
    _tds__DeleteDot1XConfigurationResponse&tds__DeleteDot1XConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetDot11Capabilities                                              *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetDot11Capabilities" of service binding "DeviceBinding".
This operation returns the IEEE802.11 capabilities. The device shall support
				this operation.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetDot11Capabilities"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetDot11Capabilities"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetDot11CapabilitiesResponse"
*/

//gsoap tds  service method-protocol:	GetDot11Capabilities SOAP
//gsoap tds  service method-style:	GetDot11Capabilities document
//gsoap tds  service method-encoding:	GetDot11Capabilities literal
//gsoap tds  service method-input-action:	GetDot11Capabilities http://www.onvif.org/ver10/device/wsdl/GetDot11Capabilities
//gsoap tds  service method-output-action:	GetDot11Capabilities http://www.onvif.org/ver10/device/wsdl/GetDot11CapabilitiesResponse
int __tds__GetDot11Capabilities(
    _tds__GetDot11Capabilities*         tds__GetDot11Capabilities,	///< Input parameter
    _tds__GetDot11CapabilitiesResponse &tds__GetDot11CapabilitiesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetDot11Status                                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetDot11Status" of service binding "DeviceBinding".
This operation returns the status of a wireless network interface. The device shall
support this
				command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetDot11Status"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetDot11Status"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetDot11StatusResponse"
*/

//gsoap tds  service method-protocol:	GetDot11Status SOAP
//gsoap tds  service method-style:	GetDot11Status document
//gsoap tds  service method-encoding:	GetDot11Status literal
//gsoap tds  service method-input-action:	GetDot11Status http://www.onvif.org/ver10/device/wsdl/GetDot11Status
//gsoap tds  service method-output-action:	GetDot11Status http://www.onvif.org/ver10/device/wsdl/GetDot11StatusResponse
int __tds__GetDot11Status(
    _tds__GetDot11Status*               tds__GetDot11Status,	///< Input parameter
    _tds__GetDot11StatusResponse       &tds__GetDot11StatusResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__ScanAvailableDot11Networks                                        *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__ScanAvailableDot11Networks" of service binding "DeviceBinding".
This operation returns a lists of the wireless networks in range of the device.
A device should
				support this operation.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/ScanAvailableDot11Networks"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/ScanAvailableDot11Networks"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/ScanAvailableDot11NetworksResponse"
*/

//gsoap tds  service method-protocol:	ScanAvailableDot11Networks SOAP
//gsoap tds  service method-style:	ScanAvailableDot11Networks document
//gsoap tds  service method-encoding:	ScanAvailableDot11Networks literal
//gsoap tds  service method-input-action:	ScanAvailableDot11Networks http://www.onvif.org/ver10/device/wsdl/ScanAvailableDot11Networks
//gsoap tds  service method-output-action:	ScanAvailableDot11Networks http://www.onvif.org/ver10/device/wsdl/ScanAvailableDot11NetworksResponse
int __tds__ScanAvailableDot11Networks(
    _tds__ScanAvailableDot11Networks*   tds__ScanAvailableDot11Networks,	///< Input parameter
    _tds__ScanAvailableDot11NetworksResponse&tds__ScanAvailableDot11NetworksResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetSystemUris                                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetSystemUris" of service binding "DeviceBinding".
This operation is used to retrieve URIs from which system information may be downloaded
				using HTTP. URIs may be returned for the following
system information:<br/>
				System Logs. Multiple system logs may be returned,
of different types. The exact format of
				the system logs is outside the scope of this specification.<br/>
				Support Information. This consists of arbitrary
device diagnostics information from a device.
				The exact format of the diagnostic information is
outside the scope of this specification.<br/>
				System Backup. The received file is a backup file
that can be used to restore the current
				device configuration at a later date. The exact
format of the backup configuration file is
				outside the scope of this specification.<br/>
				If the device allows retrieval of system logs, support
information or system backup data, it
				should make them available via HTTP GET. If it does,
it shall support the GetSystemUris
				command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetSystemUris"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetSystemUris"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetSystemUrisResponse"
*/

//gsoap tds  service method-protocol:	GetSystemUris SOAP
//gsoap tds  service method-style:	GetSystemUris document
//gsoap tds  service method-encoding:	GetSystemUris literal
//gsoap tds  service method-input-action:	GetSystemUris http://www.onvif.org/ver10/device/wsdl/GetSystemUris
//gsoap tds  service method-output-action:	GetSystemUris http://www.onvif.org/ver10/device/wsdl/GetSystemUrisResponse
int __tds__GetSystemUris(
    _tds__GetSystemUris*                tds__GetSystemUris,	///< Input parameter
    _tds__GetSystemUrisResponse        &tds__GetSystemUrisResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__StartFirmwareUpgrade                                              *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__StartFirmwareUpgrade" of service binding "DeviceBinding".
This operation initiates a firmware upgrade using the HTTP POST mechanism. The response
				to the command includes an HTTP URL to which the
upgrade file may be uploaded. The
				actual upgrade takes place as soon as the HTTP POST
operation has completed. The device
				should support firmware upgrade through the StartFirmwareUpgrade
command. The exact
				format of the firmware data is outside the scope
of this specification.
				Firmware upgrade over HTTP may be achieved using
the following steps:<ol>
					<li>Client calls StartFirmwareUpgrade.</li>
					<li>Server responds with upload URI and
optional delay value.</li>
					<li>Client waits for delay duration if specified
by server.</li>
					<li>Client transmits the firmware image
to the upload URI using HTTP POST.</li>
					<li>Server reprograms itself using the uploaded
image, then reboots.</li>
				</ol>
				If the firmware upgrade fails because the upgrade
file was invalid, the HTTP POST response
				shall be 415 Unsupported Media Type. If the
firmware upgrade fails due to an error at the
				device, the HTTP POST response shall be 500 Internal
Server Error.<br/>
				The value of the Content-Type header in the HTTP
POST request shall be application/octetstream.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/StartFirmwareUpgrade"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/StartFirmwareUpgrade"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/StartFirmwareUpgradeResponse"
*/

//gsoap tds  service method-protocol:	StartFirmwareUpgrade SOAP
//gsoap tds  service method-style:	StartFirmwareUpgrade document
//gsoap tds  service method-encoding:	StartFirmwareUpgrade literal
//gsoap tds  service method-input-action:	StartFirmwareUpgrade http://www.onvif.org/ver10/device/wsdl/StartFirmwareUpgrade
//gsoap tds  service method-output-action:	StartFirmwareUpgrade http://www.onvif.org/ver10/device/wsdl/StartFirmwareUpgradeResponse
int __tds__StartFirmwareUpgrade(
    _tds__StartFirmwareUpgrade*         tds__StartFirmwareUpgrade,	///< Input parameter
    _tds__StartFirmwareUpgradeResponse &tds__StartFirmwareUpgradeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__StartSystemRestore                                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__StartSystemRestore" of service binding "DeviceBinding".
This operation initiates a system restore from backed up configuration data using
the HTTP
				POST mechanism. The response to the command includes
an HTTP URL to which the backup
				file may be uploaded. The actual restore takes place
as soon as the HTTP POST operation
				has completed. Devices should support system restore
through the StartSystemRestore
				command. The exact format of the backup configuration
data is outside the scope of this
				specification.<br/>
				System restore over HTTP may be achieved using the
following steps:<ol>
					<li>Client calls StartSystemRestore.</li>
					<li>Server responds with upload URI.</li>
					<li>Client transmits the configuration data
to the upload URI using HTTP POST.</li>
					<li>Server applies the uploaded configuration,
then reboots if necessary.</li>
				</ol>
				If the system restore fails because the uploaded
file was invalid, the HTTP POST response
				shall be 415 Unsupported Media Type. If the
system restore fails due to an error at the
				device, the HTTP POST response shall be 500 Internal
Server Error.<br/>
				The value of the Content-Type header in the HTTP
POST request shall be application/octetstream.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/StartSystemRestore"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/StartSystemRestore"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/StartSystemRestoreResponse"
*/

//gsoap tds  service method-protocol:	StartSystemRestore SOAP
//gsoap tds  service method-style:	StartSystemRestore document
//gsoap tds  service method-encoding:	StartSystemRestore literal
//gsoap tds  service method-input-action:	StartSystemRestore http://www.onvif.org/ver10/device/wsdl/StartSystemRestore
//gsoap tds  service method-output-action:	StartSystemRestore http://www.onvif.org/ver10/device/wsdl/StartSystemRestoreResponse
int __tds__StartSystemRestore(
    _tds__StartSystemRestore*           tds__StartSystemRestore,	///< Input parameter
    _tds__StartSystemRestoreResponse   &tds__StartSystemRestoreResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetStorageConfigurations                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetStorageConfigurations" of service binding "DeviceBinding".
			This operation lists all existing storage configurations
for the device. 
			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetStorageConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetStorageConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetStorageConfigurationsResponse"
*/

//gsoap tds  service method-protocol:	GetStorageConfigurations SOAP
//gsoap tds  service method-style:	GetStorageConfigurations document
//gsoap tds  service method-encoding:	GetStorageConfigurations literal
//gsoap tds  service method-input-action:	GetStorageConfigurations http://www.onvif.org/ver10/device/wsdl/GetStorageConfigurations
//gsoap tds  service method-output-action:	GetStorageConfigurations http://www.onvif.org/ver10/device/wsdl/GetStorageConfigurationsResponse
int __tds__GetStorageConfigurations(
    _tds__GetStorageConfigurations*     tds__GetStorageConfigurations,	///< Input parameter
    _tds__GetStorageConfigurationsResponse&tds__GetStorageConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__CreateStorageConfiguration                                        *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__CreateStorageConfiguration" of service binding "DeviceBinding".
			This operation creates a new storage configuration. 
			The configuration data shall be created in the device and
shall be persistent (remain after reboot).
			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/CreateStorageConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/CreateStorageConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/CreateStorageConfigurationResponse"
*/

//gsoap tds  service method-protocol:	CreateStorageConfiguration SOAP
//gsoap tds  service method-style:	CreateStorageConfiguration document
//gsoap tds  service method-encoding:	CreateStorageConfiguration literal
//gsoap tds  service method-input-action:	CreateStorageConfiguration http://www.onvif.org/ver10/device/wsdl/CreateStorageConfiguration
//gsoap tds  service method-output-action:	CreateStorageConfiguration http://www.onvif.org/ver10/device/wsdl/CreateStorageConfigurationResponse
int __tds__CreateStorageConfiguration(
    _tds__CreateStorageConfiguration*   tds__CreateStorageConfiguration,	///< Input parameter
    _tds__CreateStorageConfigurationResponse&tds__CreateStorageConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetStorageConfiguration                                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetStorageConfiguration" of service binding "DeviceBinding".
			This operation retrieves the Storage configuration associated
with the given storage configuration token.
			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetStorageConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetStorageConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetStorageConfigurationResponse"
*/

//gsoap tds  service method-protocol:	GetStorageConfiguration SOAP
//gsoap tds  service method-style:	GetStorageConfiguration document
//gsoap tds  service method-encoding:	GetStorageConfiguration literal
//gsoap tds  service method-input-action:	GetStorageConfiguration http://www.onvif.org/ver10/device/wsdl/GetStorageConfiguration
//gsoap tds  service method-output-action:	GetStorageConfiguration http://www.onvif.org/ver10/device/wsdl/GetStorageConfigurationResponse
int __tds__GetStorageConfiguration(
    _tds__GetStorageConfiguration*      tds__GetStorageConfiguration,	///< Input parameter
    _tds__GetStorageConfigurationResponse&tds__GetStorageConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetStorageConfiguration                                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetStorageConfiguration" of service binding "DeviceBinding".
			This operation modifies an existing Storage configuration.
			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetStorageConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetStorageConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetStorageConfigurationResponse"
*/

//gsoap tds  service method-protocol:	SetStorageConfiguration SOAP
//gsoap tds  service method-style:	SetStorageConfiguration document
//gsoap tds  service method-encoding:	SetStorageConfiguration literal
//gsoap tds  service method-input-action:	SetStorageConfiguration http://www.onvif.org/ver10/device/wsdl/SetStorageConfiguration
//gsoap tds  service method-output-action:	SetStorageConfiguration http://www.onvif.org/ver10/device/wsdl/SetStorageConfigurationResponse
int __tds__SetStorageConfiguration(
    _tds__SetStorageConfiguration*      tds__SetStorageConfiguration,	///< Input parameter
    _tds__SetStorageConfigurationResponse&tds__SetStorageConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__DeleteStorageConfiguration                                        *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__DeleteStorageConfiguration" of service binding "DeviceBinding".
			This operation deletes the given storage configuration and
configuration change shall always be persistent.
			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/DeleteStorageConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/DeleteStorageConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/DeleteStorageConfigurationResponse"
*/

//gsoap tds  service method-protocol:	DeleteStorageConfiguration SOAP
//gsoap tds  service method-style:	DeleteStorageConfiguration document
//gsoap tds  service method-encoding:	DeleteStorageConfiguration literal
//gsoap tds  service method-input-action:	DeleteStorageConfiguration http://www.onvif.org/ver10/device/wsdl/DeleteStorageConfiguration
//gsoap tds  service method-output-action:	DeleteStorageConfiguration http://www.onvif.org/ver10/device/wsdl/DeleteStorageConfigurationResponse
int __tds__DeleteStorageConfiguration(
    _tds__DeleteStorageConfiguration*   tds__DeleteStorageConfiguration,	///< Input parameter
    _tds__DeleteStorageConfigurationResponse&tds__DeleteStorageConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetGeoLocation                                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetGeoLocation" of service binding "DeviceBinding".
				This operation lists all existing geo location configurations
for the device. 
			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetGeoLocation"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetGeoLocation"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetGeoLocationResponse"
*/

//gsoap tds  service method-protocol:	GetGeoLocation SOAP
//gsoap tds  service method-style:	GetGeoLocation document
//gsoap tds  service method-encoding:	GetGeoLocation literal
//gsoap tds  service method-input-action:	GetGeoLocation http://www.onvif.org/ver10/device/wsdl/GetGeoLocation
//gsoap tds  service method-output-action:	GetGeoLocation http://www.onvif.org/ver10/device/wsdl/GetGeoLocationResponse
int __tds__GetGeoLocation(
    _tds__GetGeoLocation*               tds__GetGeoLocation,	///< Input parameter
    _tds__GetGeoLocationResponse       &tds__GetGeoLocationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetGeoLocation                                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetGeoLocation" of service binding "DeviceBinding".
				This operation allows to modify one or more geo
configuration entries.
			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetGeoLocation"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetGeoLocation"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetGeoLocationResponse"
*/

//gsoap tds  service method-protocol:	SetGeoLocation SOAP
//gsoap tds  service method-style:	SetGeoLocation document
//gsoap tds  service method-encoding:	SetGeoLocation literal
//gsoap tds  service method-input-action:	SetGeoLocation http://www.onvif.org/ver10/device/wsdl/SetGeoLocation
//gsoap tds  service method-output-action:	SetGeoLocation http://www.onvif.org/ver10/device/wsdl/SetGeoLocationResponse
int __tds__SetGeoLocation(
    _tds__SetGeoLocation*               tds__SetGeoLocation,	///< Input parameter
    _tds__SetGeoLocationResponse       &tds__SetGeoLocationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__DeleteGeoLocation                                                 *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__DeleteGeoLocation" of service binding "DeviceBinding".
				This operation deletes the given geo location entries.
			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/DeleteGeoLocation"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/DeleteGeoLocation"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/DeleteGeoLocationResponse"
*/

//gsoap tds  service method-protocol:	DeleteGeoLocation SOAP
//gsoap tds  service method-style:	DeleteGeoLocation document
//gsoap tds  service method-encoding:	DeleteGeoLocation literal
//gsoap tds  service method-input-action:	DeleteGeoLocation http://www.onvif.org/ver10/device/wsdl/DeleteGeoLocation
//gsoap tds  service method-output-action:	DeleteGeoLocation http://www.onvif.org/ver10/device/wsdl/DeleteGeoLocationResponse
int __tds__DeleteGeoLocation(
    _tds__DeleteGeoLocation*            tds__DeleteGeoLocation,	///< Input parameter
    _tds__DeleteGeoLocationResponse    &tds__DeleteGeoLocationResponse	///< Output parameter
);

/** @page DeviceBinding Binding "DeviceBinding"

@section DeviceBinding_policy_enablers Policy Enablers of Binding "DeviceBinding"

None specified.

*/

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   CreatePullPointBinding                                                   *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tevcpp__CreatePullPoint                                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__tevcpp__CreatePullPoint" of service binding "CreatePullPointBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://docs.oasis-open.org/wsn/bw-2/CreatePullPoint/CreatePullPointRequest"

  - Addressing input action: "http://docs.oasis-open.org/wsn/bw-2/CreatePullPoint/CreatePullPointRequest"

  - Addressing output action: "http://docs.oasis-open.org/wsn/bw-2/CreatePullPoint/CreatePullPointRequestResponse"

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":UnableToCreatePullPointFault (literal)
*/

//gsoap tevcpp service method-protocol:	CreatePullPoint SOAP
//gsoap tevcpp service method-style:	CreatePullPoint document
//gsoap tevcpp service method-encoding:	CreatePullPoint literal
//gsoap tevcpp service method-input-action:	CreatePullPoint http://docs.oasis-open.org/wsn/bw-2/CreatePullPoint/CreatePullPointRequest
//gsoap tevcpp service method-output-action:	CreatePullPoint http://docs.oasis-open.org/wsn/bw-2/CreatePullPoint/CreatePullPointRequestResponse
//gsoap tevcpp service method-fault:	CreatePullPoint wsnt__UnableToCreatePullPointFault
int __tevcpp__CreatePullPoint(
    _wsnt__CreatePullPoint*             wsnt__CreatePullPoint,	///< Input parameter
    _wsnt__CreatePullPointResponse     &wsnt__CreatePullPointResponse	///< Output parameter
);

/** @page CreatePullPointBinding Binding "CreatePullPointBinding"

@section CreatePullPointBinding_policy_enablers Policy Enablers of Binding "CreatePullPointBinding"

None specified.

*/

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   EventBinding                                                             *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __teve__GetServiceCapabilities                                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__teve__GetServiceCapabilities" of service binding "EventBinding".
Returns the capabilities of the event service. The result is returned in a typed
answer.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/events/wsdl/EventPortType/GetServiceCapabilitiesRequest"

  - Addressing input action: "http://www.onvif.org/ver10/events/wsdl/EventPortType/GetServiceCapabilitiesRequest"

  - Addressing output action: "http://www.onvif.org/ver10/events/wsdl/EventPortType/GetServiceCapabilitiesRequestResponse"
*/

//gsoap teve service method-protocol:	GetServiceCapabilities SOAP
//gsoap teve service method-style:	GetServiceCapabilities document
//gsoap teve service method-encoding:	GetServiceCapabilities literal
//gsoap teve service method-input-action:	GetServiceCapabilities http://www.onvif.org/ver10/events/wsdl/EventPortType/GetServiceCapabilitiesRequest
//gsoap teve service method-output-action:	GetServiceCapabilities http://www.onvif.org/ver10/events/wsdl/EventPortType/GetServiceCapabilitiesRequestResponse
int __teve__GetServiceCapabilities(
    _tev__GetServiceCapabilities*       tev__GetServiceCapabilities,	///< Input parameter
    _tev__GetServiceCapabilitiesResponse&tev__GetServiceCapabilitiesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __teve__CreatePullPointSubscription                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__teve__CreatePullPointSubscription" of service binding "EventBinding".
This method returns a PullPointSubscription that can be polled using PullMessages.

				This message contains the same elements as the SubscriptionRequest
of the WS-BaseNotification without the ConsumerReference.<br/>
				If no Filter is specified the pullpoint notifies
all occurring events to the client.<br/>
				This method is mandatory.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/events/wsdl/EventPortType/CreatePullPointSubscriptionRequest"

  - Addressing input action: "http://www.onvif.org/ver10/events/wsdl/EventPortType/CreatePullPointSubscriptionRequest"

  - Addressing output action: "http://www.onvif.org/ver10/events/wsdl/EventPortType/CreatePullPointSubscriptionRequestResponse"

  - Output Fault: "http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":InvalidFilterFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":TopicExpressionDialectUnknownFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":InvalidTopicExpressionFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":TopicNotSupportedFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":InvalidProducerPropertiesExpressionFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":InvalidMessageContentExpressionFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":UnacceptableInitialTerminationTimeFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":UnrecognizedPolicyRequestFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":UnsupportedPolicyRequestFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":NotifyMessageNotSupportedFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":SubscribeCreationFailedFault (literal)
*/

//gsoap teve service method-protocol:	CreatePullPointSubscription SOAP
//gsoap teve service method-style:	CreatePullPointSubscription document
//gsoap teve service method-encoding:	CreatePullPointSubscription literal
//gsoap teve service method-input-action:	CreatePullPointSubscription http://www.onvif.org/ver10/events/wsdl/EventPortType/CreatePullPointSubscriptionRequest
//gsoap teve service method-output-action:	CreatePullPointSubscription http://www.onvif.org/ver10/events/wsdl/EventPortType/CreatePullPointSubscriptionRequestResponse
//gsoap teve service method-fault:	CreatePullPointSubscription wsrfr__ResourceUnknownFault
//gsoap teve service method-fault:	CreatePullPointSubscription wsnt__InvalidFilterFault
//gsoap teve service method-fault:	CreatePullPointSubscription wsnt__TopicExpressionDialectUnknownFault
//gsoap teve service method-fault:	CreatePullPointSubscription wsnt__InvalidTopicExpressionFault
//gsoap teve service method-fault:	CreatePullPointSubscription wsnt__TopicNotSupportedFault
//gsoap teve service method-fault:	CreatePullPointSubscription wsnt__InvalidProducerPropertiesExpressionFault
//gsoap teve service method-fault:	CreatePullPointSubscription wsnt__InvalidMessageContentExpressionFault
//gsoap teve service method-fault:	CreatePullPointSubscription wsnt__UnacceptableInitialTerminationTimeFault
//gsoap teve service method-fault:	CreatePullPointSubscription wsnt__UnrecognizedPolicyRequestFault
//gsoap teve service method-fault:	CreatePullPointSubscription wsnt__UnsupportedPolicyRequestFault
//gsoap teve service method-fault:	CreatePullPointSubscription wsnt__NotifyMessageNotSupportedFault
//gsoap teve service method-fault:	CreatePullPointSubscription wsnt__SubscribeCreationFailedFault
int __teve__CreatePullPointSubscription(
    _tev__CreatePullPointSubscription*  tev__CreatePullPointSubscription,	///< Input parameter
    _tev__CreatePullPointSubscriptionResponse&tev__CreatePullPointSubscriptionResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __teve__GetEventProperties                                               *
 *                                                                            *
\******************************************************************************/


/** Operation "__teve__GetEventProperties" of service binding "EventBinding".
The WS-BaseNotification specification defines a set of OPTIONAL WS-ResouceProperties.
				This specification does not require the implementation
of the WS-ResourceProperty interface.
				Instead, the subsequent direct interface shall be
implemented by an ONVIF compliant device
				in order to provide information about the FilterDialects,
Schema files and topics supported by
				the device.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/events/wsdl/EventPortType/GetEventPropertiesRequest"

  - Addressing input action: "http://www.onvif.org/ver10/events/wsdl/EventPortType/GetEventPropertiesRequest"

  - Addressing output action: "http://www.onvif.org/ver10/events/wsdl/EventPortType/GetEventPropertiesRequestResponse"
*/

//gsoap teve service method-protocol:	GetEventProperties SOAP
//gsoap teve service method-style:	GetEventProperties document
//gsoap teve service method-encoding:	GetEventProperties literal
//gsoap teve service method-input-action:	GetEventProperties http://www.onvif.org/ver10/events/wsdl/EventPortType/GetEventPropertiesRequest
//gsoap teve service method-output-action:	GetEventProperties http://www.onvif.org/ver10/events/wsdl/EventPortType/GetEventPropertiesRequestResponse
int __teve__GetEventProperties(
    _tev__GetEventProperties*           tev__GetEventProperties,	///< Input parameter
    _tev__GetEventPropertiesResponse   &tev__GetEventPropertiesResponse	///< Output parameter
);

/** @page EventBinding Binding "EventBinding"

@section EventBinding_policy_enablers Policy Enablers of Binding "EventBinding"

None specified.

*/

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   NotificationConsumerBinding                                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tevnc__Notify                                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__tevnc__Notify" of service binding "NotificationConsumerBinding".

  - One-way service request message

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://docs.oasis-open.org/wsn/bw-2/NotificationConsumer/Notify"

  - Addressing input action: "http://docs.oasis-open.org/wsn/bw-2/NotificationConsumer/Notify"
*/

//gsoap tevnc service method-protocol:	Notify SOAP
//gsoap tevnc service method-style:	Notify document
//gsoap tevnc service method-encoding:	Notify literal
//gsoap tevnc service method-input-action:	Notify http://docs.oasis-open.org/wsn/bw-2/NotificationConsumer/Notify
int __tevnc__Notify(
    _wsnt__Notify*                      wsnt__Notify,	///< Input parameter
    void	///< One-way message: no output parameter
);

/** @page NotificationConsumerBinding Binding "NotificationConsumerBinding"

@section NotificationConsumerBinding_policy_enablers Policy Enablers of Binding "NotificationConsumerBinding"

None specified.

*/

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   NotificationProducerBinding                                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tevnp__Subscribe                                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__tevnp__Subscribe" of service binding "NotificationProducerBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://docs.oasis-open.org/wsn/bw-2/NotificationProducer/SubscribeRequest"

  - Addressing input action: "http://docs.oasis-open.org/wsn/bw-2/NotificationProducer/SubscribeRequest"

  - Addressing output action: "http://docs.oasis-open.org/wsn/bw-2/NotificationProducer/SubscribeRequestResponse"

  - Output Fault: "http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":InvalidFilterFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":TopicExpressionDialectUnknownFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":InvalidTopicExpressionFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":TopicNotSupportedFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":InvalidProducerPropertiesExpressionFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":InvalidMessageContentExpressionFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":UnacceptableInitialTerminationTimeFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":UnrecognizedPolicyRequestFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":UnsupportedPolicyRequestFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":NotifyMessageNotSupportedFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":SubscribeCreationFailedFault (literal)
*/

//gsoap tevnp service method-protocol:	Subscribe SOAP
//gsoap tevnp service method-style:	Subscribe document
//gsoap tevnp service method-encoding:	Subscribe literal
//gsoap tevnp service method-input-action:	Subscribe http://docs.oasis-open.org/wsn/bw-2/NotificationProducer/SubscribeRequest
//gsoap tevnp service method-output-action:	Subscribe http://docs.oasis-open.org/wsn/bw-2/NotificationProducer/SubscribeRequestResponse
//gsoap tevnp service method-fault:	Subscribe wsrfr__ResourceUnknownFault
//gsoap tevnp service method-fault:	Subscribe wsnt__InvalidFilterFault
//gsoap tevnp service method-fault:	Subscribe wsnt__TopicExpressionDialectUnknownFault
//gsoap tevnp service method-fault:	Subscribe wsnt__InvalidTopicExpressionFault
//gsoap tevnp service method-fault:	Subscribe wsnt__TopicNotSupportedFault
//gsoap tevnp service method-fault:	Subscribe wsnt__InvalidProducerPropertiesExpressionFault
//gsoap tevnp service method-fault:	Subscribe wsnt__InvalidMessageContentExpressionFault
//gsoap tevnp service method-fault:	Subscribe wsnt__UnacceptableInitialTerminationTimeFault
//gsoap tevnp service method-fault:	Subscribe wsnt__UnrecognizedPolicyRequestFault
//gsoap tevnp service method-fault:	Subscribe wsnt__UnsupportedPolicyRequestFault
//gsoap tevnp service method-fault:	Subscribe wsnt__NotifyMessageNotSupportedFault
//gsoap tevnp service method-fault:	Subscribe wsnt__SubscribeCreationFailedFault
int __tevnp__Subscribe(
    _wsnt__Subscribe*                   wsnt__Subscribe,	///< Input parameter
    _wsnt__SubscribeResponse           &wsnt__SubscribeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tevnp__GetCurrentMessage                                               *
 *                                                                            *
\******************************************************************************/


/** Operation "__tevnp__GetCurrentMessage" of service binding "NotificationProducerBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://docs.oasis-open.org/wsn/bw-2/NotificationProducer/GetCurrentMessageRequest"

  - Addressing input action: "http://docs.oasis-open.org/wsn/bw-2/NotificationProducer/GetCurrentMessageRequest"

  - Addressing output action: "http://docs.oasis-open.org/wsn/bw-2/NotificationProducer/GetCurrentMessageRequestResponse"

  - Output Fault: "http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":TopicExpressionDialectUnknownFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":InvalidTopicExpressionFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":TopicNotSupportedFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":NoCurrentMessageOnTopicFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":MultipleTopicsSpecifiedFault (literal)
*/

//gsoap tevnp service method-protocol:	GetCurrentMessage SOAP
//gsoap tevnp service method-style:	GetCurrentMessage document
//gsoap tevnp service method-encoding:	GetCurrentMessage literal
//gsoap tevnp service method-input-action:	GetCurrentMessage http://docs.oasis-open.org/wsn/bw-2/NotificationProducer/GetCurrentMessageRequest
//gsoap tevnp service method-output-action:	GetCurrentMessage http://docs.oasis-open.org/wsn/bw-2/NotificationProducer/GetCurrentMessageRequestResponse
//gsoap tevnp service method-fault:	GetCurrentMessage wsrfr__ResourceUnknownFault
//gsoap tevnp service method-fault:	GetCurrentMessage wsnt__TopicExpressionDialectUnknownFault
//gsoap tevnp service method-fault:	GetCurrentMessage wsnt__InvalidTopicExpressionFault
//gsoap tevnp service method-fault:	GetCurrentMessage wsnt__TopicNotSupportedFault
//gsoap tevnp service method-fault:	GetCurrentMessage wsnt__NoCurrentMessageOnTopicFault
//gsoap tevnp service method-fault:	GetCurrentMessage wsnt__MultipleTopicsSpecifiedFault
int __tevnp__GetCurrentMessage(
    _wsnt__GetCurrentMessage*           wsnt__GetCurrentMessage,	///< Input parameter
    _wsnt__GetCurrentMessageResponse   &wsnt__GetCurrentMessageResponse	///< Output parameter
);

/** @page NotificationProducerBinding Binding "NotificationProducerBinding"

@section NotificationProducerBinding_policy_enablers Policy Enablers of Binding "NotificationProducerBinding"

None specified.

*/

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   PullPointBinding                                                         *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tevpp__GetMessages                                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__tevpp__GetMessages" of service binding "PullPointBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://docs.oasis-open.org/wsn/bw-2/PullPoint/GetMessagesRequest"

  - Addressing input action: "http://docs.oasis-open.org/wsn/bw-2/PullPoint/GetMessagesRequest"

  - Addressing output action: "http://docs.oasis-open.org/wsn/bw-2/PullPoint/GetMessagesRequestResponse"

  - Output Fault: "http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":UnableToGetMessagesFault (literal)
*/

//gsoap tevpp service method-protocol:	GetMessages SOAP
//gsoap tevpp service method-style:	GetMessages document
//gsoap tevpp service method-encoding:	GetMessages literal
//gsoap tevpp service method-input-action:	GetMessages http://docs.oasis-open.org/wsn/bw-2/PullPoint/GetMessagesRequest
//gsoap tevpp service method-output-action:	GetMessages http://docs.oasis-open.org/wsn/bw-2/PullPoint/GetMessagesRequestResponse
//gsoap tevpp service method-fault:	GetMessages wsrfr__ResourceUnknownFault
//gsoap tevpp service method-fault:	GetMessages wsnt__UnableToGetMessagesFault
int __tevpp__GetMessages(
    _wsnt__GetMessages*                 wsnt__GetMessages,	///< Input parameter
    _wsnt__GetMessagesResponse         &wsnt__GetMessagesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tevpp__DestroyPullPoint                                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__tevpp__DestroyPullPoint" of service binding "PullPointBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://docs.oasis-open.org/wsn/bw-2/PullPoint/DestroyPullPointRequest"

  - Addressing input action: "http://docs.oasis-open.org/wsn/bw-2/PullPoint/DestroyPullPointRequest"

  - Addressing output action: "http://docs.oasis-open.org/wsn/bw-2/PullPoint/DestroyPullPointRequestResponse"

  - Output Fault: "http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":UnableToDestroyPullPointFault (literal)
*/

//gsoap tevpp service method-protocol:	DestroyPullPoint SOAP
//gsoap tevpp service method-style:	DestroyPullPoint document
//gsoap tevpp service method-encoding:	DestroyPullPoint literal
//gsoap tevpp service method-input-action:	DestroyPullPoint http://docs.oasis-open.org/wsn/bw-2/PullPoint/DestroyPullPointRequest
//gsoap tevpp service method-output-action:	DestroyPullPoint http://docs.oasis-open.org/wsn/bw-2/PullPoint/DestroyPullPointRequestResponse
//gsoap tevpp service method-fault:	DestroyPullPoint wsrfr__ResourceUnknownFault
//gsoap tevpp service method-fault:	DestroyPullPoint wsnt__UnableToDestroyPullPointFault
int __tevpp__DestroyPullPoint(
    _wsnt__DestroyPullPoint*            wsnt__DestroyPullPoint,	///< Input parameter
    _wsnt__DestroyPullPointResponse    &wsnt__DestroyPullPointResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tevpp__Notify                                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__tevpp__Notify" of service binding "PullPointBinding".

  - One-way service request message

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://docs.oasis-open.org/wsn/bw-2/PullPoint/Notify"

  - Addressing input action: "http://docs.oasis-open.org/wsn/bw-2/PullPoint/Notify"
*/

//gsoap tevpp service method-protocol:	Notify SOAP
//gsoap tevpp service method-style:	Notify document
//gsoap tevpp service method-encoding:	Notify literal
//gsoap tevpp service method-input-action:	Notify http://docs.oasis-open.org/wsn/bw-2/PullPoint/Notify
int __tevpp__Notify(
    _wsnt__Notify*                      wsnt__Notify,	///< Input parameter
    void	///< One-way message: no output parameter
);

/** @page PullPointBinding Binding "PullPointBinding"

@section PullPointBinding_policy_enablers Policy Enablers of Binding "PullPointBinding"

None specified.

*/

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   PullPointSubscriptionBinding                                             *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tevpps__PullMessages                                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__tevpps__PullMessages" of service binding "PullPointSubscriptionBinding".
				This method pulls one or more messages from a PullPoint.
				The device shall provide the following PullMessages
command for all SubscriptionManager
				endpoints returned by the CreatePullPointSubscription
command. This method shall not wait until
				the requested number of messages is available but
return as soon as at least one message is available.<br/>
				The command shall at least support a Timeout of
one minute. In case a device supports retrieval of less messages 
				than requested it shall return these without generating
a fault.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/PullMessagesRequest"

  - Addressing input action: "http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/PullMessagesRequest"

  - Addressing output action: "http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/PullMessagesRequestResponse"

  - Output Fault: "http://www.onvif.org/ver10/events/wsdl":PullMessagesFaultResponse (literal)
*/

//gsoap tevpps service method-protocol:	PullMessages SOAP
//gsoap tevpps service method-style:	PullMessages document
//gsoap tevpps service method-encoding:	PullMessages literal
//gsoap tevpps service method-input-action:	PullMessages http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/PullMessagesRequest
//gsoap tevpps service method-output-action:	PullMessages http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/PullMessagesRequestResponse
//gsoap tevpps service method-fault:	PullMessages tev__PullMessagesFaultResponse
int __tevpps__PullMessages(
    _tev__PullMessages*                 tev__PullMessages,	///< Input parameter
    _tev__PullMessagesResponse         &tev__PullMessagesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tevpps__Seek                                                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__tevpps__Seek" of service binding "PullPointSubscriptionBinding".
				This method readjusts the pull pointer into the
past.
				A device supporting persistent notification storage
shall provide the
				following Seek command for all SubscriptionManager
endpoints returned by
				the CreatePullPointSubscription command. The optional
Reverse argument can
				be used to reverse the pull direction of the PullMessages
command.<br/>
				The UtcTime argument will be matched against the
UtcTime attribute on a
				NotificationMessage.
			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/SeekRequest"

  - Addressing input action: "http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/SeekRequest"

  - Addressing output action: "http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/SeekRequestResponse"
*/

//gsoap tevpps service method-protocol:	Seek SOAP
//gsoap tevpps service method-style:	Seek document
//gsoap tevpps service method-encoding:	Seek literal
//gsoap tevpps service method-input-action:	Seek http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/SeekRequest
//gsoap tevpps service method-output-action:	Seek http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/SeekRequestResponse
int __tevpps__Seek(
    _tev__Seek*                         tev__Seek,	///< Input parameter
    _tev__SeekResponse                 &tev__SeekResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tevpps__SetSynchronizationPoint                                        *
 *                                                                            *
\******************************************************************************/


/** Operation "__tevpps__SetSynchronizationPoint" of service binding "PullPointSubscriptionBinding".
Properties inform a client about property creation, changes and
				deletion in a uniform way. When a client wants to
synchronize its properties with the
				properties of the device, it can request a synchronization
point which repeats the current
				status of all properties to which a client has subscribed.
The PropertyOperation of all
				produced notifications is set to Initialized.
The Synchronization Point is
				requested directly from the SubscriptionManager
which was returned in either the
				SubscriptionResponse or in the CreatePullPointSubscriptionResponse.
The property update is
				transmitted via the notification transportation
of the notification interface. This method is mandatory.
			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/SetSynchronizationPointRequest"

  - Addressing input action: "http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/SetSynchronizationPointRequest"

  - Addressing output action: "http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/SetSynchronizationPointRequestResponse"
*/

//gsoap tevpps service method-protocol:	SetSynchronizationPoint SOAP
//gsoap tevpps service method-style:	SetSynchronizationPoint document
//gsoap tevpps service method-encoding:	SetSynchronizationPoint literal
//gsoap tevpps service method-input-action:	SetSynchronizationPoint http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/SetSynchronizationPointRequest
//gsoap tevpps service method-output-action:	SetSynchronizationPoint http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/SetSynchronizationPointRequestResponse
int __tevpps__SetSynchronizationPoint(
    _tev__SetSynchronizationPoint*      tev__SetSynchronizationPoint,	///< Input parameter
    _tev__SetSynchronizationPointResponse&tev__SetSynchronizationPointResponse	///< Output parameter
);

/** @page PullPointSubscriptionBinding Binding "PullPointSubscriptionBinding"

@section PullPointSubscriptionBinding_policy_enablers Policy Enablers of Binding "PullPointSubscriptionBinding"

None specified.

*/

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   PausableSubscriptionManagerBinding                                       *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tevps__Renew                                                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__tevps__Renew" of service binding "PausableSubscriptionManagerBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/RenewRequest"

  - Addressing input action: "http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/RenewRequest"

  - Addressing output action: "http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/RenewRequestResponse"

  - Output Fault: "http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":UnacceptableTerminationTimeFault (literal)
*/

//gsoap tevps service method-protocol:	Renew SOAP
//gsoap tevps service method-style:	Renew document
//gsoap tevps service method-encoding:	Renew literal
//gsoap tevps service method-input-action:	Renew http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/RenewRequest
//gsoap tevps service method-output-action:	Renew http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/RenewRequestResponse
//gsoap tevps service method-fault:	Renew wsrfr__ResourceUnknownFault
//gsoap tevps service method-fault:	Renew wsnt__UnacceptableTerminationTimeFault
int __tevps__Renew(
    _wsnt__Renew*                       wsnt__Renew,	///< Input parameter
    _wsnt__RenewResponse               &wsnt__RenewResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tevps__Unsubscribe                                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__tevps__Unsubscribe" of service binding "PausableSubscriptionManagerBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/UnsubscribeRequest"

  - Addressing input action: "http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/UnsubscribeRequest"

  - Addressing output action: "http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/UnsubscribeRequestResponse"

  - Output Fault: "http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":UnableToDestroySubscriptionFault (literal)
*/

//gsoap tevps service method-protocol:	Unsubscribe SOAP
//gsoap tevps service method-style:	Unsubscribe document
//gsoap tevps service method-encoding:	Unsubscribe literal
//gsoap tevps service method-input-action:	Unsubscribe http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/UnsubscribeRequest
//gsoap tevps service method-output-action:	Unsubscribe http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/UnsubscribeRequestResponse
//gsoap tevps service method-fault:	Unsubscribe wsrfr__ResourceUnknownFault
//gsoap tevps service method-fault:	Unsubscribe wsnt__UnableToDestroySubscriptionFault
int __tevps__Unsubscribe(
    _wsnt__Unsubscribe*                 wsnt__Unsubscribe,	///< Input parameter
    _wsnt__UnsubscribeResponse         &wsnt__UnsubscribeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tevps__PauseSubscription                                               *
 *                                                                            *
\******************************************************************************/


/** Operation "__tevps__PauseSubscription" of service binding "PausableSubscriptionManagerBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/PauseSubscriptionRequest"

  - Addressing input action: "http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/PauseSubscriptionRequest"

  - Addressing output action: "http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/PauseSubscriptionRequestResponse"

  - Output Fault: "http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":PauseFailedFault (literal)
*/

//gsoap tevps service method-protocol:	PauseSubscription SOAP
//gsoap tevps service method-style:	PauseSubscription document
//gsoap tevps service method-encoding:	PauseSubscription literal
//gsoap tevps service method-input-action:	PauseSubscription http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/PauseSubscriptionRequest
//gsoap tevps service method-output-action:	PauseSubscription http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/PauseSubscriptionRequestResponse
//gsoap tevps service method-fault:	PauseSubscription wsrfr__ResourceUnknownFault
//gsoap tevps service method-fault:	PauseSubscription wsnt__PauseFailedFault
int __tevps__PauseSubscription(
    _wsnt__PauseSubscription*           wsnt__PauseSubscription,	///< Input parameter
    _wsnt__PauseSubscriptionResponse   &wsnt__PauseSubscriptionResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tevps__ResumeSubscription                                              *
 *                                                                            *
\******************************************************************************/


/** Operation "__tevps__ResumeSubscription" of service binding "PausableSubscriptionManagerBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/ResumeSubscriptionRequest"

  - Addressing input action: "http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/ResumeSubscriptionRequest"

  - Addressing output action: "http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/ResumeSubscriptionRequestResponse"

  - Output Fault: "http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":ResumeFailedFault (literal)
*/

//gsoap tevps service method-protocol:	ResumeSubscription SOAP
//gsoap tevps service method-style:	ResumeSubscription document
//gsoap tevps service method-encoding:	ResumeSubscription literal
//gsoap tevps service method-input-action:	ResumeSubscription http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/ResumeSubscriptionRequest
//gsoap tevps service method-output-action:	ResumeSubscription http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/ResumeSubscriptionRequestResponse
//gsoap tevps service method-fault:	ResumeSubscription wsrfr__ResourceUnknownFault
//gsoap tevps service method-fault:	ResumeSubscription wsnt__ResumeFailedFault
int __tevps__ResumeSubscription(
    _wsnt__ResumeSubscription*          wsnt__ResumeSubscription,	///< Input parameter
    _wsnt__ResumeSubscriptionResponse  &wsnt__ResumeSubscriptionResponse	///< Output parameter
);

/** @page PausableSubscriptionManagerBinding Binding "PausableSubscriptionManagerBinding"

@section PausableSubscriptionManagerBinding_policy_enablers Policy Enablers of Binding "PausableSubscriptionManagerBinding"

None specified.

*/

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   SubscriptionManagerBinding                                               *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tevs__Renew                                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__tevs__Renew" of service binding "SubscriptionManagerBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://docs.oasis-open.org/wsn/bw-2/SubscriptionManager/RenewRequest"

  - Addressing input action: "http://docs.oasis-open.org/wsn/bw-2/SubscriptionManager/RenewRequest"

  - Addressing output action: "http://docs.oasis-open.org/wsn/bw-2/SubscriptionManager/RenewRequestResponse"

  - Output Fault: "http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":UnacceptableTerminationTimeFault (literal)
*/

//gsoap tevs service method-protocol:	Renew SOAP
//gsoap tevs service method-style:	Renew document
//gsoap tevs service method-encoding:	Renew literal
//gsoap tevs service method-input-action:	Renew http://docs.oasis-open.org/wsn/bw-2/SubscriptionManager/RenewRequest
//gsoap tevs service method-output-action:	Renew http://docs.oasis-open.org/wsn/bw-2/SubscriptionManager/RenewRequestResponse
//gsoap tevs service method-fault:	Renew wsrfr__ResourceUnknownFault
//gsoap tevs service method-fault:	Renew wsnt__UnacceptableTerminationTimeFault
int __tevs__Renew(
    _wsnt__Renew*                       wsnt__Renew,	///< Input parameter
    _wsnt__RenewResponse               &wsnt__RenewResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tevs__Unsubscribe                                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__tevs__Unsubscribe" of service binding "SubscriptionManagerBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://docs.oasis-open.org/wsn/bw-2/SubscriptionManager/UnsubscribeRequest"

  - Addressing input action: "http://docs.oasis-open.org/wsn/bw-2/SubscriptionManager/UnsubscribeRequest"

  - Addressing output action: "http://docs.oasis-open.org/wsn/bw-2/SubscriptionManager/UnsubscribeRequestResponse"

  - Output Fault: "http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFault (literal)

  - Output Fault: "http://docs.oasis-open.org/wsn/b-2":UnableToDestroySubscriptionFault (literal)
*/

//gsoap tevs service method-protocol:	Unsubscribe SOAP
//gsoap tevs service method-style:	Unsubscribe document
//gsoap tevs service method-encoding:	Unsubscribe literal
//gsoap tevs service method-input-action:	Unsubscribe http://docs.oasis-open.org/wsn/bw-2/SubscriptionManager/UnsubscribeRequest
//gsoap tevs service method-output-action:	Unsubscribe http://docs.oasis-open.org/wsn/bw-2/SubscriptionManager/UnsubscribeRequestResponse
//gsoap tevs service method-fault:	Unsubscribe wsrfr__ResourceUnknownFault
//gsoap tevs service method-fault:	Unsubscribe wsnt__UnableToDestroySubscriptionFault
int __tevs__Unsubscribe(
    _wsnt__Unsubscribe*                 wsnt__Unsubscribe,	///< Input parameter
    _wsnt__UnsubscribeResponse         &wsnt__UnsubscribeResponse	///< Output parameter
);

/** @page SubscriptionManagerBinding Binding "SubscriptionManagerBinding"

@section SubscriptionManagerBinding_policy_enablers Policy Enablers of Binding "SubscriptionManagerBinding"

None specified.

*/

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   ImagingBinding                                                           *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __timg__GetServiceCapabilities                                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__timg__GetServiceCapabilities" of service binding "ImagingBinding".
Returns the capabilities of the imaging service. The result is returned in a typed
answer.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/imaging/wsdl/GetServiceCapabilities"

  - Addressing input action: "http://www.onvif.org/ver20/imaging/wsdl/GetServiceCapabilities"

  - Addressing output action: "http://www.onvif.org/ver20/imaging/wsdl/GetServiceCapabilitiesResponse"
*/

//gsoap timg service method-protocol:	GetServiceCapabilities SOAP
//gsoap timg service method-style:	GetServiceCapabilities document
//gsoap timg service method-encoding:	GetServiceCapabilities literal
//gsoap timg service method-input-action:	GetServiceCapabilities http://www.onvif.org/ver20/imaging/wsdl/GetServiceCapabilities
//gsoap timg service method-output-action:	GetServiceCapabilities http://www.onvif.org/ver20/imaging/wsdl/GetServiceCapabilitiesResponse
int __timg__GetServiceCapabilities(
    _timg__GetServiceCapabilities*      timg__GetServiceCapabilities,	///< Input parameter
    _timg__GetServiceCapabilitiesResponse&timg__GetServiceCapabilitiesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __timg__GetImagingSettings                                               *
 *                                                                            *
\******************************************************************************/


/** Operation "__timg__GetImagingSettings" of service binding "ImagingBinding".
Get the ImagingConfiguration for the requested VideoSource.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/imaging/wsdl/GetImagingSettings"

  - Addressing input action: "http://www.onvif.org/ver20/imaging/wsdl/GetImagingSettings"

  - Addressing output action: "http://www.onvif.org/ver20/imaging/wsdl/GetImagingSettingsResponse"
*/

//gsoap timg service method-protocol:	GetImagingSettings SOAP
//gsoap timg service method-style:	GetImagingSettings document
//gsoap timg service method-encoding:	GetImagingSettings literal
//gsoap timg service method-input-action:	GetImagingSettings http://www.onvif.org/ver20/imaging/wsdl/GetImagingSettings
//gsoap timg service method-output-action:	GetImagingSettings http://www.onvif.org/ver20/imaging/wsdl/GetImagingSettingsResponse
int __timg__GetImagingSettings(
    _timg__GetImagingSettings*          timg__GetImagingSettings,	///< Input parameter
    _timg__GetImagingSettingsResponse  &timg__GetImagingSettingsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __timg__SetImagingSettings                                               *
 *                                                                            *
\******************************************************************************/


/** Operation "__timg__SetImagingSettings" of service binding "ImagingBinding".
Set the ImagingConfiguration for the requested VideoSource.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/imaging/wsdl/SetImagingSettings"

  - Addressing input action: "http://www.onvif.org/ver20/imaging/wsdl/SetImagingSettings"

  - Addressing output action: "http://www.onvif.org/ver20/imaging/wsdl/SetImagingSettingsResponse"
*/

//gsoap timg service method-protocol:	SetImagingSettings SOAP
//gsoap timg service method-style:	SetImagingSettings document
//gsoap timg service method-encoding:	SetImagingSettings literal
//gsoap timg service method-input-action:	SetImagingSettings http://www.onvif.org/ver20/imaging/wsdl/SetImagingSettings
//gsoap timg service method-output-action:	SetImagingSettings http://www.onvif.org/ver20/imaging/wsdl/SetImagingSettingsResponse
int __timg__SetImagingSettings(
    _timg__SetImagingSettings*          timg__SetImagingSettings,	///< Input parameter
    _timg__SetImagingSettingsResponse  &timg__SetImagingSettingsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __timg__GetOptions                                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__timg__GetOptions" of service binding "ImagingBinding".
This operation gets the valid ranges for the imaging parameters that have device
specific ranges. 
			This command is mandatory for all device implementing the
imaging service. The command returns all supported parameters and their ranges

			such that these can be applied to the SetImagingSettings
command.<br/>
			For read-only parameters which cannot be modified via the
SetImagingSettings command only a single option or identical Min and Max values

			is provided.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/imaging/wsdl/GetOptions"

  - Addressing input action: "http://www.onvif.org/ver20/imaging/wsdl/GetOptions"

  - Addressing output action: "http://www.onvif.org/ver20/imaging/wsdl/GetOptionsResponse"
*/

//gsoap timg service method-protocol:	GetOptions SOAP
//gsoap timg service method-style:	GetOptions document
//gsoap timg service method-encoding:	GetOptions literal
//gsoap timg service method-input-action:	GetOptions http://www.onvif.org/ver20/imaging/wsdl/GetOptions
//gsoap timg service method-output-action:	GetOptions http://www.onvif.org/ver20/imaging/wsdl/GetOptionsResponse
int __timg__GetOptions(
    _timg__GetOptions*                  timg__GetOptions,	///< Input parameter
    _timg__GetOptionsResponse          &timg__GetOptionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __timg__Move                                                             *
 *                                                                            *
\******************************************************************************/


/** Operation "__timg__Move" of service binding "ImagingBinding".
The Move command moves the focus lens in an absolute, a relative or in a continuous
manner from its current position. 
			The speed argument is optional for absolute and relative
control, but required for continuous. If no speed argument is used, the default
speed is used. 
			Focus adjustments through this operation will turn off the
autofocus. A device with support for remote focus control should support absolute,

			relative or continuous control through the Move operation.
The supported MoveOpions are signalled via the GetMoveOptions command.
			At least one focus control capability is required for this
operation to be functional. <br/>
			The move operation contains the following commands:<br/>
				<b>Absolute</b>  Requires position parameter
and optionally takes a speed argument. A unitless type is used by default for focus
positioning and speed. Optionally, if supported, the position may be requested
in m-1 units. <br/>
				<b>Relative</b>  Requires distance parameter
and optionally takes a speed argument. Negative distance means negative direction.

			<b>Continuous</b>  Requires a speed argument. Negative
speed argument means negative direction.
			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/imaging/wsdl/Move"

  - Addressing input action: "http://www.onvif.org/ver20/imaging/wsdl/Move"

  - Addressing output action: "http://www.onvif.org/ver20/imaging/wsdl/MoveResponse"
*/

//gsoap timg service method-protocol:	Move SOAP
//gsoap timg service method-style:	Move document
//gsoap timg service method-encoding:	Move literal
//gsoap timg service method-input-action:	Move http://www.onvif.org/ver20/imaging/wsdl/Move
//gsoap timg service method-output-action:	Move http://www.onvif.org/ver20/imaging/wsdl/MoveResponse
int __timg__Move(
    _timg__Move*                        timg__Move,	///< Input parameter
    _timg__MoveResponse                &timg__MoveResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __timg__Stop                                                             *
 *                                                                            *
\******************************************************************************/


/** Operation "__timg__Stop" of service binding "ImagingBinding".
The Stop command stops all ongoing focus movements of the lense. A device with support
for remote focus control as signalled via 
			the GetMoveOptions supports this command. <br/>The operation
will not affect ongoing autofocus operation.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/imaging/wsdl/FocusStop"

  - Addressing input action: "http://www.onvif.org/ver20/imaging/wsdl/FocusStop"

  - Addressing output action: "http://www.onvif.org/ver20/imaging/wsdl/FocusStopResponse"
*/

//gsoap timg service method-protocol:	Stop SOAP
//gsoap timg service method-style:	Stop document
//gsoap timg service method-encoding:	Stop literal
//gsoap timg service method-input-action:	Stop http://www.onvif.org/ver20/imaging/wsdl/FocusStop
//gsoap timg service method-output-action:	Stop http://www.onvif.org/ver20/imaging/wsdl/FocusStopResponse
int __timg__Stop(
    _timg__Stop*                        timg__Stop,	///< Input parameter
    _timg__StopResponse                &timg__StopResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __timg__GetStatus                                                        *
 *                                                                            *
\******************************************************************************/


/** Operation "__timg__GetStatus" of service binding "ImagingBinding".
Via this command the current status of the Move operation can be requested. Supported
for this command is available if the support for the Move operation is signalled
via GetMoveOptions.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/imaging/wsdl/GetStatus"

  - Addressing input action: "http://www.onvif.org/ver20/imaging/wsdl/GetStatus"

  - Addressing output action: "http://www.onvif.org/ver20/imaging/wsdl/GetStatusResponse"
*/

//gsoap timg service method-protocol:	GetStatus SOAP
//gsoap timg service method-style:	GetStatus document
//gsoap timg service method-encoding:	GetStatus literal
//gsoap timg service method-input-action:	GetStatus http://www.onvif.org/ver20/imaging/wsdl/GetStatus
//gsoap timg service method-output-action:	GetStatus http://www.onvif.org/ver20/imaging/wsdl/GetStatusResponse
int __timg__GetStatus(
    _timg__GetStatus*                   timg__GetStatus,	///< Input parameter
    _timg__GetStatusResponse           &timg__GetStatusResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __timg__GetMoveOptions                                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__timg__GetMoveOptions" of service binding "ImagingBinding".
Imaging move operation options supported for the Video source.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/imaging/wsdl/GetMoveOptions"

  - Addressing input action: "http://www.onvif.org/ver20/imaging/wsdl/GetMoveOptions"

  - Addressing output action: "http://www.onvif.org/ver20/imaging/wsdl/GetMoveOptionsResponse"
*/

//gsoap timg service method-protocol:	GetMoveOptions SOAP
//gsoap timg service method-style:	GetMoveOptions document
//gsoap timg service method-encoding:	GetMoveOptions literal
//gsoap timg service method-input-action:	GetMoveOptions http://www.onvif.org/ver20/imaging/wsdl/GetMoveOptions
//gsoap timg service method-output-action:	GetMoveOptions http://www.onvif.org/ver20/imaging/wsdl/GetMoveOptionsResponse
int __timg__GetMoveOptions(
    _timg__GetMoveOptions*              timg__GetMoveOptions,	///< Input parameter
    _timg__GetMoveOptionsResponse      &timg__GetMoveOptionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __timg__GetPresets                                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__timg__GetPresets" of service binding "ImagingBinding".
Via this command the list of available Imaging Presets can be requested.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/imaging/wsdl/GetPresets"

  - Addressing input action: "http://www.onvif.org/ver20/imaging/wsdl/GetPresets"

  - Addressing output action: "http://www.onvif.org/ver20/imaging/wsdl/GetPresetsResponse"
*/

//gsoap timg service method-protocol:	GetPresets SOAP
//gsoap timg service method-style:	GetPresets document
//gsoap timg service method-encoding:	GetPresets literal
//gsoap timg service method-input-action:	GetPresets http://www.onvif.org/ver20/imaging/wsdl/GetPresets
//gsoap timg service method-output-action:	GetPresets http://www.onvif.org/ver20/imaging/wsdl/GetPresetsResponse
int __timg__GetPresets(
    _timg__GetPresets*                  timg__GetPresets,	///< Input parameter
    _timg__GetPresetsResponse          &timg__GetPresetsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __timg__GetCurrentPreset                                                 *
 *                                                                            *
\******************************************************************************/


/** Operation "__timg__GetCurrentPreset" of service binding "ImagingBinding".
Via this command the last Imaging Preset applied can be requested. 
			If the camera configuration does not match any of the existing
Imaging Presets, the output of GetCurrentPreset shall be Empty.
			GetCurrentPreset shall return 0 if Imaging Presets are not
supported by the Video Source.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/imaging/wsdl/GetCurrentPreset"

  - Addressing input action: "http://www.onvif.org/ver20/imaging/wsdl/GetCurrentPreset"

  - Addressing output action: "http://www.onvif.org/ver20/imaging/wsdl/GetCurrentPresetResponse"
*/

//gsoap timg service method-protocol:	GetCurrentPreset SOAP
//gsoap timg service method-style:	GetCurrentPreset document
//gsoap timg service method-encoding:	GetCurrentPreset literal
//gsoap timg service method-input-action:	GetCurrentPreset http://www.onvif.org/ver20/imaging/wsdl/GetCurrentPreset
//gsoap timg service method-output-action:	GetCurrentPreset http://www.onvif.org/ver20/imaging/wsdl/GetCurrentPresetResponse
int __timg__GetCurrentPreset(
    _timg__GetCurrentPreset*            timg__GetCurrentPreset,	///< Input parameter
    _timg__GetCurrentPresetResponse    &timg__GetCurrentPresetResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __timg__SetCurrentPreset                                                 *
 *                                                                            *
\******************************************************************************/


/** Operation "__timg__SetCurrentPreset" of service binding "ImagingBinding".
The SetCurrentPreset command shall request a given Imaging Preset to be applied
to the specified Video Source.
			SetCurrentPreset shall only be available for Video Sources
with Imaging Presets Capability. 
			Imaging Presets are defined by the Manufacturer, and offered
as a tool to simplify Imaging Settings adjustments for specific scene content.
			When the new Imaging Preset is applied by SetCurrentPreset,
the Device shall adjust the Video Source settings to match those defined by the
specified Imaging Preset.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/imaging/wsdl/SetCurrentPreset"

  - Addressing input action: "http://www.onvif.org/ver20/imaging/wsdl/SetCurrentPreset"

  - Addressing output action: "http://www.onvif.org/ver20/imaging/wsdl/SetCurrentPresetResponse"
*/

//gsoap timg service method-protocol:	SetCurrentPreset SOAP
//gsoap timg service method-style:	SetCurrentPreset document
//gsoap timg service method-encoding:	SetCurrentPreset literal
//gsoap timg service method-input-action:	SetCurrentPreset http://www.onvif.org/ver20/imaging/wsdl/SetCurrentPreset
//gsoap timg service method-output-action:	SetCurrentPreset http://www.onvif.org/ver20/imaging/wsdl/SetCurrentPresetResponse
int __timg__SetCurrentPreset(
    _timg__SetCurrentPreset*            timg__SetCurrentPreset,	///< Input parameter
    _timg__SetCurrentPresetResponse    &timg__SetCurrentPresetResponse	///< Output parameter
);

/** @page ImagingBinding Binding "ImagingBinding"

@section ImagingBinding_policy_enablers Policy Enablers of Binding "ImagingBinding"

None specified.

*/

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   DisplayBinding                                                           *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tls__GetServiceCapabilities                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__tls__GetServiceCapabilities" of service binding "DisplayBinding".
Returns the capabilities of the display service. The result is returned in a typed
answer.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/display/wsdl/GetServiceCapabilities"

  - Addressing input action: "http://www.onvif.org/ver10/display/wsdl/GetServiceCapabilities"

  - Addressing output action: "http://www.onvif.org/ver10/display/wsdl/GetServiceCapabilitiesResponse"
*/

//gsoap tls  service method-protocol:	GetServiceCapabilities SOAP
//gsoap tls  service method-style:	GetServiceCapabilities document
//gsoap tls  service method-encoding:	GetServiceCapabilities literal
//gsoap tls  service method-input-action:	GetServiceCapabilities http://www.onvif.org/ver10/display/wsdl/GetServiceCapabilities
//gsoap tls  service method-output-action:	GetServiceCapabilities http://www.onvif.org/ver10/display/wsdl/GetServiceCapabilitiesResponse
int __tls__GetServiceCapabilities(
    _tls__GetServiceCapabilities*       tls__GetServiceCapabilities,	///< Input parameter
    _tls__GetServiceCapabilitiesResponse&tls__GetServiceCapabilitiesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tls__GetLayout                                                         *
 *                                                                            *
\******************************************************************************/


/** Operation "__tls__GetLayout" of service binding "DisplayBinding".
Return the current layout of a video output. The Layout assigns a pane configuration
to a certain area of the display. The layout settings
directly affect a specific video output. The layout consists of a list of PaneConfigurations
and
their associated display areas.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/display/wsdl/GetLayout"

  - Addressing input action: "http://www.onvif.org/ver10/display/wsdl/GetLayout"

  - Addressing output action: "http://www.onvif.org/ver10/display/wsdl/GetLayoutResponse"
*/

//gsoap tls  service method-protocol:	GetLayout SOAP
//gsoap tls  service method-style:	GetLayout document
//gsoap tls  service method-encoding:	GetLayout literal
//gsoap tls  service method-input-action:	GetLayout http://www.onvif.org/ver10/display/wsdl/GetLayout
//gsoap tls  service method-output-action:	GetLayout http://www.onvif.org/ver10/display/wsdl/GetLayoutResponse
int __tls__GetLayout(
    _tls__GetLayout*                    tls__GetLayout,	///< Input parameter
    _tls__GetLayoutResponse            &tls__GetLayoutResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tls__SetLayout                                                         *
 *                                                                            *
\******************************************************************************/


/** Operation "__tls__SetLayout" of service binding "DisplayBinding".
Change the layout of a display (e.g. change from
single view to split screen view).The Layout assigns a pane configuration to a
certain area of the display. The layout settings
directly affect a specific video output. The layout consists of a list of PaneConfigurations
and
their associated display areas.<br/>
A device implementation shall be tolerant against rounding errors when matching
a layout against its fixed set of layouts by accepting differences of at least
one percent.


  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/display/wsdl/SetLayout"

  - Addressing input action: "http://www.onvif.org/ver10/display/wsdl/SetLayout"

  - Addressing output action: "http://www.onvif.org/ver10/display/wsdl/SetLayoutResponse"
*/

//gsoap tls  service method-protocol:	SetLayout SOAP
//gsoap tls  service method-style:	SetLayout document
//gsoap tls  service method-encoding:	SetLayout literal
//gsoap tls  service method-input-action:	SetLayout http://www.onvif.org/ver10/display/wsdl/SetLayout
//gsoap tls  service method-output-action:	SetLayout http://www.onvif.org/ver10/display/wsdl/SetLayoutResponse
int __tls__SetLayout(
    _tls__SetLayout*                    tls__SetLayout,	///< Input parameter
    _tls__SetLayoutResponse            &tls__SetLayoutResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tls__GetDisplayOptions                                                 *
 *                                                                            *
\******************************************************************************/


/** Operation "__tls__GetDisplayOptions" of service binding "DisplayBinding".
The Display Options contain the supported layouts (LayoutOptions) and the decoding
and
encoding capabilities (CodingCapabilities) of the device. The GetDisplayOptions
command
returns both, Layout and Coding Capabilities, of a VideoOutput.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/display/wsdl/GetDisplayOptions"

  - Addressing input action: "http://www.onvif.org/ver10/display/wsdl/GetDisplayOptions"

  - Addressing output action: "http://www.onvif.org/ver10/display/wsdl/GetDisplayOptionsResponse"
*/

//gsoap tls  service method-protocol:	GetDisplayOptions SOAP
//gsoap tls  service method-style:	GetDisplayOptions document
//gsoap tls  service method-encoding:	GetDisplayOptions literal
//gsoap tls  service method-input-action:	GetDisplayOptions http://www.onvif.org/ver10/display/wsdl/GetDisplayOptions
//gsoap tls  service method-output-action:	GetDisplayOptions http://www.onvif.org/ver10/display/wsdl/GetDisplayOptionsResponse
int __tls__GetDisplayOptions(
    _tls__GetDisplayOptions*            tls__GetDisplayOptions,	///< Input parameter
    _tls__GetDisplayOptionsResponse    &tls__GetDisplayOptionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tls__GetPaneConfigurations                                             *
 *                                                                            *
\******************************************************************************/


/** Operation "__tls__GetPaneConfigurations" of service binding "DisplayBinding".
List all currently defined panes of a device for a specified video output
(regardless if this pane is visible at a moment). A Pane is a display area on the
monitor that is attached to a video output. A pane has a
PaneConfiguration that describes which entities are associated with the pane. A
client has to configure the pane according to the connection to be established
by setting the
AudioOutput and/or AudioSourceToken. If a Token is not set, the corresponding session
will
not be established.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/display/wsdl/GetPaneConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/display/wsdl/GetPaneConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/display/wsdl/GetPaneConfigurationsResponse"
*/

//gsoap tls  service method-protocol:	GetPaneConfigurations SOAP
//gsoap tls  service method-style:	GetPaneConfigurations document
//gsoap tls  service method-encoding:	GetPaneConfigurations literal
//gsoap tls  service method-input-action:	GetPaneConfigurations http://www.onvif.org/ver10/display/wsdl/GetPaneConfigurations
//gsoap tls  service method-output-action:	GetPaneConfigurations http://www.onvif.org/ver10/display/wsdl/GetPaneConfigurationsResponse
int __tls__GetPaneConfigurations(
    _tls__GetPaneConfigurations*        tls__GetPaneConfigurations,	///< Input parameter
    _tls__GetPaneConfigurationsResponse&tls__GetPaneConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tls__GetPaneConfiguration                                              *
 *                                                                            *
\******************************************************************************/


/** Operation "__tls__GetPaneConfiguration" of service binding "DisplayBinding".
Retrieve the pane configuration for a pane token.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/display/wsdl/GetPaneConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/display/wsdl/GetPaneConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/display/wsdl/GetPaneConfigurationResponse"
*/

//gsoap tls  service method-protocol:	GetPaneConfiguration SOAP
//gsoap tls  service method-style:	GetPaneConfiguration document
//gsoap tls  service method-encoding:	GetPaneConfiguration literal
//gsoap tls  service method-input-action:	GetPaneConfiguration http://www.onvif.org/ver10/display/wsdl/GetPaneConfiguration
//gsoap tls  service method-output-action:	GetPaneConfiguration http://www.onvif.org/ver10/display/wsdl/GetPaneConfigurationResponse
int __tls__GetPaneConfiguration(
    _tls__GetPaneConfiguration*         tls__GetPaneConfiguration,	///< Input parameter
    _tls__GetPaneConfigurationResponse &tls__GetPaneConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tls__SetPaneConfigurations                                             *
 *                                                                            *
\******************************************************************************/


/** Operation "__tls__SetPaneConfigurations" of service binding "DisplayBinding".
Modify one or more configurations of the specified video output. 
			This method will only modify the provided configurations
and leave the others unchanged. 
			Use <a href="#op.DeletePaneConfiguration">DeletePaneConfiguration</a>
to remove pane configurations.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/display/wsdl/SetPaneConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/display/wsdl/SetPaneConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/display/wsdl/SetPaneConfigurationsResponse"
*/

//gsoap tls  service method-protocol:	SetPaneConfigurations SOAP
//gsoap tls  service method-style:	SetPaneConfigurations document
//gsoap tls  service method-encoding:	SetPaneConfigurations literal
//gsoap tls  service method-input-action:	SetPaneConfigurations http://www.onvif.org/ver10/display/wsdl/SetPaneConfigurations
//gsoap tls  service method-output-action:	SetPaneConfigurations http://www.onvif.org/ver10/display/wsdl/SetPaneConfigurationsResponse
int __tls__SetPaneConfigurations(
    _tls__SetPaneConfigurations*        tls__SetPaneConfigurations,	///< Input parameter
    _tls__SetPaneConfigurationsResponse&tls__SetPaneConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tls__SetPaneConfiguration                                              *
 *                                                                            *
\******************************************************************************/


/** Operation "__tls__SetPaneConfiguration" of service binding "DisplayBinding".
This command changes the configuration of the specified pane (tbd)

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/display/wsdl/SetPaneConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/display/wsdl/SetPaneConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/display/wsdl/SetPaneConfigurationResponse"
*/

//gsoap tls  service method-protocol:	SetPaneConfiguration SOAP
//gsoap tls  service method-style:	SetPaneConfiguration document
//gsoap tls  service method-encoding:	SetPaneConfiguration literal
//gsoap tls  service method-input-action:	SetPaneConfiguration http://www.onvif.org/ver10/display/wsdl/SetPaneConfiguration
//gsoap tls  service method-output-action:	SetPaneConfiguration http://www.onvif.org/ver10/display/wsdl/SetPaneConfigurationResponse
int __tls__SetPaneConfiguration(
    _tls__SetPaneConfiguration*         tls__SetPaneConfiguration,	///< Input parameter
    _tls__SetPaneConfigurationResponse &tls__SetPaneConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tls__CreatePaneConfiguration                                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__tls__CreatePaneConfiguration" of service binding "DisplayBinding".
Create a new pane configuration describing the streaming and coding settings for
a display area.<br/>
				This optional method is only supported by devices
that signal support of dynamic pane creation via their capabilities.<br/>
				The content of the Token field may be ignored by
the device.
			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/display/wsdl/CreatePaneConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/display/wsdl/CreatePaneConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/display/wsdl/CreatePaneConfigurationResponse"
*/

//gsoap tls  service method-protocol:	CreatePaneConfiguration SOAP
//gsoap tls  service method-style:	CreatePaneConfiguration document
//gsoap tls  service method-encoding:	CreatePaneConfiguration literal
//gsoap tls  service method-input-action:	CreatePaneConfiguration http://www.onvif.org/ver10/display/wsdl/CreatePaneConfiguration
//gsoap tls  service method-output-action:	CreatePaneConfiguration http://www.onvif.org/ver10/display/wsdl/CreatePaneConfigurationResponse
int __tls__CreatePaneConfiguration(
    _tls__CreatePaneConfiguration*      tls__CreatePaneConfiguration,	///< Input parameter
    _tls__CreatePaneConfigurationResponse&tls__CreatePaneConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tls__DeletePaneConfiguration                                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__tls__DeletePaneConfiguration" of service binding "DisplayBinding".
Delete a pane configuration. A service must respond with an error if the pane configuration
				is in use by the current layout.<br/>
				This optional method is only supported by devices
that signal support of dynamic pane creation via their capabilities. 
			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/display/wsdl/DeletePaneConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/display/wsdl/DeletePaneConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/display/wsdl/DeletePaneConfigurationResponse"
*/

//gsoap tls  service method-protocol:	DeletePaneConfiguration SOAP
//gsoap tls  service method-style:	DeletePaneConfiguration document
//gsoap tls  service method-encoding:	DeletePaneConfiguration literal
//gsoap tls  service method-input-action:	DeletePaneConfiguration http://www.onvif.org/ver10/display/wsdl/DeletePaneConfiguration
//gsoap tls  service method-output-action:	DeletePaneConfiguration http://www.onvif.org/ver10/display/wsdl/DeletePaneConfigurationResponse
int __tls__DeletePaneConfiguration(
    _tls__DeletePaneConfiguration*      tls__DeletePaneConfiguration,	///< Input parameter
    _tls__DeletePaneConfigurationResponse&tls__DeletePaneConfigurationResponse	///< Output parameter
);

/** @page DisplayBinding Binding "DisplayBinding"

@section DisplayBinding_policy_enablers Policy Enablers of Binding "DisplayBinding"

None specified.

*/

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   DeviceIOBinding                                                          *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tmd__GetServiceCapabilities                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__tmd__GetServiceCapabilities" of service binding "DeviceIOBinding".
Returns the capabilities of the device IO service. The result is returned in a typed
answer.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/deviceio/wsdl/GetServiceCapabilities"

  - Addressing input action: "http://www.onvif.org/ver10/deviceio/wsdl/GetServiceCapabilities"

  - Addressing output action: "http://www.onvif.org/ver10/deviceio/wsdl/GetServiceCapabilitiesResponse"
*/

//gsoap tmd  service method-protocol:	GetServiceCapabilities SOAP
//gsoap tmd  service method-style:	GetServiceCapabilities document
//gsoap tmd  service method-encoding:	GetServiceCapabilities literal
//gsoap tmd  service method-input-action:	GetServiceCapabilities http://www.onvif.org/ver10/deviceio/wsdl/GetServiceCapabilities
//gsoap tmd  service method-output-action:	GetServiceCapabilities http://www.onvif.org/ver10/deviceio/wsdl/GetServiceCapabilitiesResponse
int __tmd__GetServiceCapabilities(
    _tmd__GetServiceCapabilities*       tmd__GetServiceCapabilities,	///< Input parameter
    _tmd__GetServiceCapabilitiesResponse&tmd__GetServiceCapabilitiesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tmd__GetRelayOutputOptions                                             *
 *                                                                            *
\******************************************************************************/


/** Operation "__tmd__GetRelayOutputOptions" of service binding "DeviceIOBinding".
Request the available settings and ranges for one or all relay outputs. A device
that has one or more RelayOutputs should support this command.<br/>
				Two examples that illustrate usage:
				<ul>
					<li>
					1) Device supports range PT1S to PT120S:
					<pre>
<tmd:RelayOutputOptions token='44'>
  <tmd:Mode>Monostable</tmd:Mode>
  <tmd:DelayTimes>1 120</tmd:DelayTimes>
</tmd:RelayOutputOptions>
							</pre>
					</li>
					<li>
					2) Device supports values PT0.5S, PT1S,
PT2s and PT1M:
					<pre>
<tmd:RelayOutputOptions token='123'>
  <tmd:Mode>Monostable</tmd:Mode>
  <tmd:DelayTimes>0.5 1 2 60</tmd:DelayTimes>
  <tmd:Discrete>True</tmd:Discrete>
</tmd:RelayOutputOptions>
								</pre>
					</li>
				</ul>
			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/deviceio/wsdl/GetRelayOutputOptions"

  - Addressing input action: "http://www.onvif.org/ver10/deviceio/wsdl/GetRelayOutputOptions"

  - Addressing output action: "http://www.onvif.org/ver10/deviceio/wsdl/GetRelayOutputOptionsResponse"
*/

//gsoap tmd  service method-protocol:	GetRelayOutputOptions SOAP
//gsoap tmd  service method-style:	GetRelayOutputOptions document
//gsoap tmd  service method-encoding:	GetRelayOutputOptions literal
//gsoap tmd  service method-input-action:	GetRelayOutputOptions http://www.onvif.org/ver10/deviceio/wsdl/GetRelayOutputOptions
//gsoap tmd  service method-output-action:	GetRelayOutputOptions http://www.onvif.org/ver10/deviceio/wsdl/GetRelayOutputOptionsResponse
int __tmd__GetRelayOutputOptions(
    _tmd__GetRelayOutputOptions*        tmd__GetRelayOutputOptions,	///< Input parameter
    _tmd__GetRelayOutputOptionsResponse&tmd__GetRelayOutputOptionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tmd__GetAudioSources                                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__tmd__GetAudioSources" of service binding "DeviceIOBinding".
List all available audio sources for the device. The device that has one or more
audio sources shall support the listing of available audio inputs through the GetAudioSources
command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/deviceio/wsdl/GetAudioSources"

  - Addressing input action: "http://www.onvif.org/ver10/deviceio/wsdl/GetAudioSources"

  - Addressing output action: "http://www.onvif.org/ver10/deviceio/wsdl/GetAudioSourcesResponse"
*/

//gsoap tmd  service method-protocol:	GetAudioSources SOAP
//gsoap tmd  service method-style:	GetAudioSources document
//gsoap tmd  service method-encoding:	GetAudioSources literal
//gsoap tmd  service method-input-action:	GetAudioSources http://www.onvif.org/ver10/deviceio/wsdl/GetAudioSources
//gsoap tmd  service method-output-action:	GetAudioSources http://www.onvif.org/ver10/deviceio/wsdl/GetAudioSourcesResponse
int __tmd__GetAudioSources(
    tmd__Get*                           tmd__GetAudioSources,	///< Input parameter
    tmd__GetResponse                   &tmd__GetAudioSourcesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tmd__GetAudioOutputs                                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__tmd__GetAudioOutputs" of service binding "DeviceIOBinding".
List all available audio outputs of a device. A device that has one ore more physical
audio outputs shall support listing of available audio outputs through the GetAudioOutputs
command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/deviceio/wsdl/GetAudioOutputs"

  - Addressing input action: "http://www.onvif.org/ver10/deviceio/wsdl/GetAudioOutputs"

  - Addressing output action: "http://www.onvif.org/ver10/deviceio/wsdl/GetAudioOutputsResponse"
*/

//gsoap tmd  service method-protocol:	GetAudioOutputs SOAP
//gsoap tmd  service method-style:	GetAudioOutputs document
//gsoap tmd  service method-encoding:	GetAudioOutputs literal
//gsoap tmd  service method-input-action:	GetAudioOutputs http://www.onvif.org/ver10/deviceio/wsdl/GetAudioOutputs
//gsoap tmd  service method-output-action:	GetAudioOutputs http://www.onvif.org/ver10/deviceio/wsdl/GetAudioOutputsResponse
int __tmd__GetAudioOutputs(
    tmd__Get*                           tmd__GetAudioOutputs,	///< Input parameter
    tmd__GetResponse                   &tmd__GetAudioOutputsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tmd__GetVideoSources                                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__tmd__GetVideoSources" of service binding "DeviceIOBinding".
List all available video sources for the device. The device that has one or more
video inputs shall support the listing of available video sources through the GetVideoSources
command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/deviceio/wsdl/GetVideoSources"

  - Addressing input action: "http://www.onvif.org/ver10/deviceio/wsdl/GetVideoSources"

  - Addressing output action: "http://www.onvif.org/ver10/deviceio/wsdl/GetVideoSourcesResponse"
*/

//gsoap tmd  service method-protocol:	GetVideoSources SOAP
//gsoap tmd  service method-style:	GetVideoSources document
//gsoap tmd  service method-encoding:	GetVideoSources literal
//gsoap tmd  service method-input-action:	GetVideoSources http://www.onvif.org/ver10/deviceio/wsdl/GetVideoSources
//gsoap tmd  service method-output-action:	GetVideoSources http://www.onvif.org/ver10/deviceio/wsdl/GetVideoSourcesResponse
int __tmd__GetVideoSources(
    tmd__Get*                           tmd__GetVideoSources,	///< Input parameter
    tmd__GetResponse                   &tmd__GetVideoSourcesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tmd__GetVideoOutputs                                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__tmd__GetVideoOutputs" of service binding "DeviceIOBinding".
List all available video outputs of a device. A device that has one or more physical
video outputs shall support listing of available video outputs through the GetVideoOutputs
command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/deviceio/wsdl/GetVideoOutputs"

  - Addressing input action: "http://www.onvif.org/ver10/deviceio/wsdl/GetVideoOutputs"

  - Addressing output action: "http://www.onvif.org/ver10/deviceio/wsdl/GetVideoOutputsResponse"
*/

//gsoap tmd  service method-protocol:	GetVideoOutputs SOAP
//gsoap tmd  service method-style:	GetVideoOutputs document
//gsoap tmd  service method-encoding:	GetVideoOutputs literal
//gsoap tmd  service method-input-action:	GetVideoOutputs http://www.onvif.org/ver10/deviceio/wsdl/GetVideoOutputs
//gsoap tmd  service method-output-action:	GetVideoOutputs http://www.onvif.org/ver10/deviceio/wsdl/GetVideoOutputsResponse
int __tmd__GetVideoOutputs(
    _tmd__GetVideoOutputs*              tmd__GetVideoOutputs,	///< Input parameter
    _tmd__GetVideoOutputsResponse      &tmd__GetVideoOutputsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tmd__GetVideoSourceConfiguration                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__tmd__GetVideoSourceConfiguration" of service binding "DeviceIOBinding".
Get the video source configurations of a VideoSource. A device with one or more
video sources shall support the GetVideoSourceConfigurations command..

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/deviceio/wsdl/GetVideoSourceConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/deviceio/wsdl/GetVideoSourceConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/deviceio/wsdl/GetVideoSourceConfigurationResponse"
*/

//gsoap tmd  service method-protocol:	GetVideoSourceConfiguration SOAP
//gsoap tmd  service method-style:	GetVideoSourceConfiguration document
//gsoap tmd  service method-encoding:	GetVideoSourceConfiguration literal
//gsoap tmd  service method-input-action:	GetVideoSourceConfiguration http://www.onvif.org/ver10/deviceio/wsdl/GetVideoSourceConfiguration
//gsoap tmd  service method-output-action:	GetVideoSourceConfiguration http://www.onvif.org/ver10/deviceio/wsdl/GetVideoSourceConfigurationResponse
int __tmd__GetVideoSourceConfiguration(
    _tmd__GetVideoSourceConfiguration*  tmd__GetVideoSourceConfiguration,	///< Input parameter
    _tmd__GetVideoSourceConfigurationResponse&tmd__GetVideoSourceConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tmd__GetVideoOutputConfiguration                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__tmd__GetVideoOutputConfiguration" of service binding "DeviceIOBinding".
Get the configuration of a Video Output. A device that has one or more Video Outputs
shall support the retrieval of the VideoOutputConfiguration through this command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/deviceio/wsdl/GetVideoOutputConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/deviceio/wsdl/GetVideoOutputConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/deviceio/wsdl/GetVideoOutputConfigurationResponse"
*/

//gsoap tmd  service method-protocol:	GetVideoOutputConfiguration SOAP
//gsoap tmd  service method-style:	GetVideoOutputConfiguration document
//gsoap tmd  service method-encoding:	GetVideoOutputConfiguration literal
//gsoap tmd  service method-input-action:	GetVideoOutputConfiguration http://www.onvif.org/ver10/deviceio/wsdl/GetVideoOutputConfiguration
//gsoap tmd  service method-output-action:	GetVideoOutputConfiguration http://www.onvif.org/ver10/deviceio/wsdl/GetVideoOutputConfigurationResponse
int __tmd__GetVideoOutputConfiguration(
    _tmd__GetVideoOutputConfiguration*  tmd__GetVideoOutputConfiguration,	///< Input parameter
    _tmd__GetVideoOutputConfigurationResponse&tmd__GetVideoOutputConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tmd__GetAudioSourceConfiguration                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__tmd__GetAudioSourceConfiguration" of service binding "DeviceIOBinding".
List the configuration of an Audio Input. A device with one or more audio inputs
shall support the GetAudioSourceConfiguration command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/deviceio/wsdl/GetAudioSourceConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/deviceio/wsdl/GetAudioSourceConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/deviceio/wsdl/GetAudioSourceConfigurationResponse"
*/

//gsoap tmd  service method-protocol:	GetAudioSourceConfiguration SOAP
//gsoap tmd  service method-style:	GetAudioSourceConfiguration document
//gsoap tmd  service method-encoding:	GetAudioSourceConfiguration literal
//gsoap tmd  service method-input-action:	GetAudioSourceConfiguration http://www.onvif.org/ver10/deviceio/wsdl/GetAudioSourceConfiguration
//gsoap tmd  service method-output-action:	GetAudioSourceConfiguration http://www.onvif.org/ver10/deviceio/wsdl/GetAudioSourceConfigurationResponse
int __tmd__GetAudioSourceConfiguration(
    _tmd__GetAudioSourceConfiguration*  tmd__GetAudioSourceConfiguration,	///< Input parameter
    _tmd__GetAudioSourceConfigurationResponse&tmd__GetAudioSourceConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tmd__GetAudioOutputConfiguration                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__tmd__GetAudioOutputConfiguration" of service binding "DeviceIOBinding".
Request the current configuration of a physical Audio output. A device that has
one or more AudioOutputs shall support the retrieval of the AudioOutputConfiguration
through this command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/deviceio/wsdl/GetAudioOutputConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/deviceio/wsdl/GetAudioOutputConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/deviceio/wsdl/GetAudioOutputConfigurationResponse"
*/

//gsoap tmd  service method-protocol:	GetAudioOutputConfiguration SOAP
//gsoap tmd  service method-style:	GetAudioOutputConfiguration document
//gsoap tmd  service method-encoding:	GetAudioOutputConfiguration literal
//gsoap tmd  service method-input-action:	GetAudioOutputConfiguration http://www.onvif.org/ver10/deviceio/wsdl/GetAudioOutputConfiguration
//gsoap tmd  service method-output-action:	GetAudioOutputConfiguration http://www.onvif.org/ver10/deviceio/wsdl/GetAudioOutputConfigurationResponse
int __tmd__GetAudioOutputConfiguration(
    _tmd__GetAudioOutputConfiguration*  tmd__GetAudioOutputConfiguration,	///< Input parameter
    _tmd__GetAudioOutputConfigurationResponse&tmd__GetAudioOutputConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tmd__SetVideoSourceConfiguration                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__tmd__SetVideoSourceConfiguration" of service binding "DeviceIOBinding".
Modify a video input configuration. A device that has one or more video sources
shall support the setting of the VideoSourceConfiguration through this command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/deviceio/wsdl/SetVideoSourceConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/deviceio/wsdl/SetVideoSourceConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/deviceio/wsdl/SetVideoSourceConfigurationResponse"
*/

//gsoap tmd  service method-protocol:	SetVideoSourceConfiguration SOAP
//gsoap tmd  service method-style:	SetVideoSourceConfiguration document
//gsoap tmd  service method-encoding:	SetVideoSourceConfiguration literal
//gsoap tmd  service method-input-action:	SetVideoSourceConfiguration http://www.onvif.org/ver10/deviceio/wsdl/SetVideoSourceConfiguration
//gsoap tmd  service method-output-action:	SetVideoSourceConfiguration http://www.onvif.org/ver10/deviceio/wsdl/SetVideoSourceConfigurationResponse
int __tmd__SetVideoSourceConfiguration(
    _tmd__SetVideoSourceConfiguration*  tmd__SetVideoSourceConfiguration,	///< Input parameter
    _tmd__SetVideoSourceConfigurationResponse&tmd__SetVideoSourceConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tmd__SetVideoOutputConfiguration                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__tmd__SetVideoOutputConfiguration" of service binding "DeviceIOBinding".
Modify a video output configuration. A device that has one or more video outputs
shall support the setting of its video output configuration through this command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/deviceio/wsdl/SetVideoOutputConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/deviceio/wsdl/SetVideoOutputConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/deviceio/wsdl/SetVideoOutputConfigurationResponse"
*/

//gsoap tmd  service method-protocol:	SetVideoOutputConfiguration SOAP
//gsoap tmd  service method-style:	SetVideoOutputConfiguration document
//gsoap tmd  service method-encoding:	SetVideoOutputConfiguration literal
//gsoap tmd  service method-input-action:	SetVideoOutputConfiguration http://www.onvif.org/ver10/deviceio/wsdl/SetVideoOutputConfiguration
//gsoap tmd  service method-output-action:	SetVideoOutputConfiguration http://www.onvif.org/ver10/deviceio/wsdl/SetVideoOutputConfigurationResponse
int __tmd__SetVideoOutputConfiguration(
    _tmd__SetVideoOutputConfiguration*  tmd__SetVideoOutputConfiguration,	///< Input parameter
    _tmd__SetVideoOutputConfigurationResponse&tmd__SetVideoOutputConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tmd__SetAudioSourceConfiguration                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__tmd__SetAudioSourceConfiguration" of service binding "DeviceIOBinding".
Modify an audio source configuration. A device that has a one or more audio sources
shall support the setting of the AudioSourceConfiguration through this command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/deviceio/wsdl/SetAudioSourceConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/deviceio/wsdl/SetAudioSourceConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/deviceio/wsdl/SetAudioSourceConfigurationResponse"
*/

//gsoap tmd  service method-protocol:	SetAudioSourceConfiguration SOAP
//gsoap tmd  service method-style:	SetAudioSourceConfiguration document
//gsoap tmd  service method-encoding:	SetAudioSourceConfiguration literal
//gsoap tmd  service method-input-action:	SetAudioSourceConfiguration http://www.onvif.org/ver10/deviceio/wsdl/SetAudioSourceConfiguration
//gsoap tmd  service method-output-action:	SetAudioSourceConfiguration http://www.onvif.org/ver10/deviceio/wsdl/SetAudioSourceConfigurationResponse
int __tmd__SetAudioSourceConfiguration(
    _tmd__SetAudioSourceConfiguration*  tmd__SetAudioSourceConfiguration,	///< Input parameter
    _tmd__SetAudioSourceConfigurationResponse&tmd__SetAudioSourceConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tmd__SetAudioOutputConfiguration                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__tmd__SetAudioOutputConfiguration" of service binding "DeviceIOBinding".
Modify an audio output configuration. A device that has one ore more audio outputs
shall support the setting of the AudioOutputConfiguration through this command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/deviceio/wsdl/SetAudioOutputConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/deviceio/wsdl/SetAudioOutputConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/deviceio/wsdl/SetAudioOutputConfigurationResponse"
*/

//gsoap tmd  service method-protocol:	SetAudioOutputConfiguration SOAP
//gsoap tmd  service method-style:	SetAudioOutputConfiguration document
//gsoap tmd  service method-encoding:	SetAudioOutputConfiguration literal
//gsoap tmd  service method-input-action:	SetAudioOutputConfiguration http://www.onvif.org/ver10/deviceio/wsdl/SetAudioOutputConfiguration
//gsoap tmd  service method-output-action:	SetAudioOutputConfiguration http://www.onvif.org/ver10/deviceio/wsdl/SetAudioOutputConfigurationResponse
int __tmd__SetAudioOutputConfiguration(
    _tmd__SetAudioOutputConfiguration*  tmd__SetAudioOutputConfiguration,	///< Input parameter
    _tmd__SetAudioOutputConfigurationResponse&tmd__SetAudioOutputConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tmd__GetVideoSourceConfigurationOptions                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__tmd__GetVideoSourceConfigurationOptions" of service binding "DeviceIOBinding".
Request the VideoSourceConfigurationOptions of a VideoSource. A device with one
or more video sources shall support this command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/deviceio/wsdl/GetVideoSourceConfigurationOptions"

  - Addressing input action: "http://www.onvif.org/ver10/deviceio/wsdl/GetVideoSourceConfigurationOptions"

  - Addressing output action: "http://www.onvif.org/ver10/deviceio/wsdl/GetVideoSourceConfigurationOptionsResponse"
*/

//gsoap tmd  service method-protocol:	GetVideoSourceConfigurationOptions SOAP
//gsoap tmd  service method-style:	GetVideoSourceConfigurationOptions document
//gsoap tmd  service method-encoding:	GetVideoSourceConfigurationOptions literal
//gsoap tmd  service method-input-action:	GetVideoSourceConfigurationOptions http://www.onvif.org/ver10/deviceio/wsdl/GetVideoSourceConfigurationOptions
//gsoap tmd  service method-output-action:	GetVideoSourceConfigurationOptions http://www.onvif.org/ver10/deviceio/wsdl/GetVideoSourceConfigurationOptionsResponse
int __tmd__GetVideoSourceConfigurationOptions(
    _tmd__GetVideoSourceConfigurationOptions* tmd__GetVideoSourceConfigurationOptions,	///< Input parameter
    _tmd__GetVideoSourceConfigurationOptionsResponse&tmd__GetVideoSourceConfigurationOptionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tmd__GetVideoOutputConfigurationOptions                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__tmd__GetVideoOutputConfigurationOptions" of service binding "DeviceIOBinding".
Request the VideoOutputConfigurationOptions of a VideoOutput. A device that has
one or more video outputs shall support the retrieval of VideoOutputConfigurationOptions
through this command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/deviceio/wsdl/GetVideoOutputConfigurationOptions"

  - Addressing input action: "http://www.onvif.org/ver10/deviceio/wsdl/GetVideoOutputConfigurationOptions"

  - Addressing output action: "http://www.onvif.org/ver10/deviceio/wsdl/GetVideoOutputConfigurationOptionsResponse"
*/

//gsoap tmd  service method-protocol:	GetVideoOutputConfigurationOptions SOAP
//gsoap tmd  service method-style:	GetVideoOutputConfigurationOptions document
//gsoap tmd  service method-encoding:	GetVideoOutputConfigurationOptions literal
//gsoap tmd  service method-input-action:	GetVideoOutputConfigurationOptions http://www.onvif.org/ver10/deviceio/wsdl/GetVideoOutputConfigurationOptions
//gsoap tmd  service method-output-action:	GetVideoOutputConfigurationOptions http://www.onvif.org/ver10/deviceio/wsdl/GetVideoOutputConfigurationOptionsResponse
int __tmd__GetVideoOutputConfigurationOptions(
    _tmd__GetVideoOutputConfigurationOptions* tmd__GetVideoOutputConfigurationOptions,	///< Input parameter
    _tmd__GetVideoOutputConfigurationOptionsResponse&tmd__GetVideoOutputConfigurationOptionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tmd__GetAudioSourceConfigurationOptions                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__tmd__GetAudioSourceConfigurationOptions" of service binding "DeviceIOBinding".
Request the AudioSourceConfigurationOptions of an AudioSource. A device with one
ore more AudioSources shall support this command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/deviceio/wsdl/GetAudioSourceConfigurationOptions"

  - Addressing input action: "http://www.onvif.org/ver10/deviceio/wsdl/GetAudioSourceConfigurationOptions"

  - Addressing output action: "http://www.onvif.org/ver10/deviceio/wsdl/GetAudioSourceConfigurationOptionsResponse"
*/

//gsoap tmd  service method-protocol:	GetAudioSourceConfigurationOptions SOAP
//gsoap tmd  service method-style:	GetAudioSourceConfigurationOptions document
//gsoap tmd  service method-encoding:	GetAudioSourceConfigurationOptions literal
//gsoap tmd  service method-input-action:	GetAudioSourceConfigurationOptions http://www.onvif.org/ver10/deviceio/wsdl/GetAudioSourceConfigurationOptions
//gsoap tmd  service method-output-action:	GetAudioSourceConfigurationOptions http://www.onvif.org/ver10/deviceio/wsdl/GetAudioSourceConfigurationOptionsResponse
int __tmd__GetAudioSourceConfigurationOptions(
    _tmd__GetAudioSourceConfigurationOptions* tmd__GetAudioSourceConfigurationOptions,	///< Input parameter
    _tmd__GetAudioSourceConfigurationOptionsResponse&tmd__GetAudioSourceConfigurationOptionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tmd__GetAudioOutputConfigurationOptions                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__tmd__GetAudioOutputConfigurationOptions" of service binding "DeviceIOBinding".
Request the available settings and ranges for a physical Audio output. A device
that has one or more AudioOutputs shall support this command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/deviceio/wsdl/GetAudioOutputConfigurationOptions"

  - Addressing input action: "http://www.onvif.org/ver10/deviceio/wsdl/GetAudioOutputConfigurationOptions"

  - Addressing output action: "http://www.onvif.org/ver10/deviceio/wsdl/GetAudioOutputConfigurationOptionsResponse"
*/

//gsoap tmd  service method-protocol:	GetAudioOutputConfigurationOptions SOAP
//gsoap tmd  service method-style:	GetAudioOutputConfigurationOptions document
//gsoap tmd  service method-encoding:	GetAudioOutputConfigurationOptions literal
//gsoap tmd  service method-input-action:	GetAudioOutputConfigurationOptions http://www.onvif.org/ver10/deviceio/wsdl/GetAudioOutputConfigurationOptions
//gsoap tmd  service method-output-action:	GetAudioOutputConfigurationOptions http://www.onvif.org/ver10/deviceio/wsdl/GetAudioOutputConfigurationOptionsResponse
int __tmd__GetAudioOutputConfigurationOptions(
    _tmd__GetAudioOutputConfigurationOptions* tmd__GetAudioOutputConfigurationOptions,	///< Input parameter
    _tmd__GetAudioOutputConfigurationOptionsResponse&tmd__GetAudioOutputConfigurationOptionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tmd__GetRelayOutputs                                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__tmd__GetRelayOutputs" of service binding "DeviceIOBinding".
This operation gets a list of all available relay outputs and their settings.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/deviceio/wsdl/GetRelayOutputs"

  - Addressing input action: "http://www.onvif.org/ver10/deviceio/wsdl/GetRelayOutputs"

  - Addressing output action: "http://www.onvif.org/ver10/deviceio/wsdl/GetRelayOutputsResponse"
*/

//gsoap tmd  service method-protocol:	GetRelayOutputs SOAP
//gsoap tmd  service method-style:	GetRelayOutputs document
//gsoap tmd  service method-encoding:	GetRelayOutputs literal
//gsoap tmd  service method-input-action:	GetRelayOutputs http://www.onvif.org/ver10/deviceio/wsdl/GetRelayOutputs
//gsoap tmd  service method-output-action:	GetRelayOutputs http://www.onvif.org/ver10/deviceio/wsdl/GetRelayOutputsResponse
int __tmd__GetRelayOutputs(
    _tds__GetRelayOutputs*              tds__GetRelayOutputs,	///< Input parameter
    _tds__GetRelayOutputsResponse      &tds__GetRelayOutputsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tmd__SetRelayOutputSettings                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__tmd__SetRelayOutputSettings" of service binding "DeviceIOBinding".
This operation sets the settings of a relay output.
				The relay can work in two relay modes: <ul>
					<li>
				Bistable  After setting the state, the relay
remains in this state.</li>
					<li>
				Monostable  After setting the state, the relay
returns to its idle state after the
				specified time.</li>
				</ul>
				The physical idle state of a relay output can be
configured by setting the IdleState to open or
				closed (inversion of the relay behaviour).<br/>
				Idle State open means that the relay is open
when the relay state is set to inactive through
				the trigger command (see Section 8.5.3) and closed
when the state is set to active through
				the same command.<br/>
				Idle State closed means, that the relay is
closed when the relay state is set to inactive
				through the trigger command (see Section 8.5.3)
and open when the state is set to active
				through the same command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/deviceio/wsdl/SetRelayOutputSettings"

  - Addressing input action: "http://www.onvif.org/ver10/deviceio/wsdl/SetRelayOutputSettings"

  - Addressing output action: "http://www.onvif.org/ver10/deviceio/wsdl/SetRelayOutputSettingsResponse"
*/

//gsoap tmd  service method-protocol:	SetRelayOutputSettings SOAP
//gsoap tmd  service method-style:	SetRelayOutputSettings document
//gsoap tmd  service method-encoding:	SetRelayOutputSettings literal
//gsoap tmd  service method-input-action:	SetRelayOutputSettings http://www.onvif.org/ver10/deviceio/wsdl/SetRelayOutputSettings
//gsoap tmd  service method-output-action:	SetRelayOutputSettings http://www.onvif.org/ver10/deviceio/wsdl/SetRelayOutputSettingsResponse
int __tmd__SetRelayOutputSettings(
    _tmd__SetRelayOutputSettings*       tmd__SetRelayOutputSettings,	///< Input parameter
    _tmd__SetRelayOutputSettingsResponse&tmd__SetRelayOutputSettingsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tmd__SetRelayOutputState                                               *
 *                                                                            *
\******************************************************************************/


/** Operation "__tmd__SetRelayOutputState" of service binding "DeviceIOBinding".
Modify the relay state.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/deviceio/wsdl/SetRelayOutputState"

  - Addressing input action: "http://www.onvif.org/ver10/deviceio/wsdl/SetRelayOutputState"

  - Addressing output action: "http://www.onvif.org/ver10/deviceio/wsdl/SetRelayOutputStateResponse"
*/

//gsoap tmd  service method-protocol:	SetRelayOutputState SOAP
//gsoap tmd  service method-style:	SetRelayOutputState document
//gsoap tmd  service method-encoding:	SetRelayOutputState literal
//gsoap tmd  service method-input-action:	SetRelayOutputState http://www.onvif.org/ver10/deviceio/wsdl/SetRelayOutputState
//gsoap tmd  service method-output-action:	SetRelayOutputState http://www.onvif.org/ver10/deviceio/wsdl/SetRelayOutputStateResponse
int __tmd__SetRelayOutputState(
    _tds__SetRelayOutputState*          tds__SetRelayOutputState,	///< Input parameter
    _tds__SetRelayOutputStateResponse  &tds__SetRelayOutputStateResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tmd__GetDigitalInputs                                                  *
 *                                                                            *
\******************************************************************************/


/** Operation "__tmd__GetDigitalInputs" of service binding "DeviceIOBinding".
This operation gets a list of all available digital inputs.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/deviceio/wsdl/GetDigitalInputs"

  - Addressing input action: "http://www.onvif.org/ver10/deviceio/wsdl/GetDigitalInputs"

  - Addressing output action: "http://www.onvif.org/ver10/deviceio/wsdl/GetDigitalInputsResponse"
*/

//gsoap tmd  service method-protocol:	GetDigitalInputs SOAP
//gsoap tmd  service method-style:	GetDigitalInputs document
//gsoap tmd  service method-encoding:	GetDigitalInputs literal
//gsoap tmd  service method-input-action:	GetDigitalInputs http://www.onvif.org/ver10/deviceio/wsdl/GetDigitalInputs
//gsoap tmd  service method-output-action:	GetDigitalInputs http://www.onvif.org/ver10/deviceio/wsdl/GetDigitalInputsResponse
int __tmd__GetDigitalInputs(
    _tmd__GetDigitalInputs*             tmd__GetDigitalInputs,	///< Input parameter
    _tmd__GetDigitalInputsResponse     &tmd__GetDigitalInputsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tmd__GetDigitalInputConfigurationOptions                               *
 *                                                                            *
\******************************************************************************/


/** Operation "__tmd__GetDigitalInputConfigurationOptions" of service binding "DeviceIOBinding".
This operation lists what configuration is available for digital inputs.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/deviceio/wsdl/GetDigitalInputConfigurationOptions"

  - Addressing input action: "http://www.onvif.org/ver10/deviceio/wsdl/GetDigitalInputConfigurationOptions"

  - Addressing output action: "http://www.onvif.org/ver10/deviceio/wsdl/GetDigitalInputConfigurationOptionsResponse"
*/

//gsoap tmd  service method-protocol:	GetDigitalInputConfigurationOptions SOAP
//gsoap tmd  service method-style:	GetDigitalInputConfigurationOptions document
//gsoap tmd  service method-encoding:	GetDigitalInputConfigurationOptions literal
//gsoap tmd  service method-input-action:	GetDigitalInputConfigurationOptions http://www.onvif.org/ver10/deviceio/wsdl/GetDigitalInputConfigurationOptions
//gsoap tmd  service method-output-action:	GetDigitalInputConfigurationOptions http://www.onvif.org/ver10/deviceio/wsdl/GetDigitalInputConfigurationOptionsResponse
int __tmd__GetDigitalInputConfigurationOptions(
    _tmd__GetDigitalInputConfigurationOptions* tmd__GetDigitalInputConfigurationOptions,	///< Input parameter
    _tmd__GetDigitalInputConfigurationOptionsResponse&tmd__GetDigitalInputConfigurationOptionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tmd__SetDigitalInputConfigurations                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__tmd__SetDigitalInputConfigurations" of service binding "DeviceIOBinding".
Modify a digital input configuration.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/deviceio/wsdl/SetDigitalInputConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/deviceio/wsdl/SetDigitalInputConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/deviceio/wsdl/SetDigitalInputConfigurationsResponse"
*/

//gsoap tmd  service method-protocol:	SetDigitalInputConfigurations SOAP
//gsoap tmd  service method-style:	SetDigitalInputConfigurations document
//gsoap tmd  service method-encoding:	SetDigitalInputConfigurations literal
//gsoap tmd  service method-input-action:	SetDigitalInputConfigurations http://www.onvif.org/ver10/deviceio/wsdl/SetDigitalInputConfigurations
//gsoap tmd  service method-output-action:	SetDigitalInputConfigurations http://www.onvif.org/ver10/deviceio/wsdl/SetDigitalInputConfigurationsResponse
int __tmd__SetDigitalInputConfigurations(
    _tmd__SetDigitalInputConfigurations* tmd__SetDigitalInputConfigurations,	///< Input parameter
    _tmd__SetDigitalInputConfigurationsResponse&tmd__SetDigitalInputConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tmd__GetSerialPorts                                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "__tmd__GetSerialPorts" of service binding "DeviceIOBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/deviceio/wsdl/GetSerialPorts"

  - Addressing input action: "http://www.onvif.org/ver10/deviceio/wsdl/GetSerialPorts"

  - Addressing output action: "http://www.onvif.org/ver10/deviceio/wsdl/GetSerialPortsResponse"
*/

//gsoap tmd  service method-protocol:	GetSerialPorts SOAP
//gsoap tmd  service method-style:	GetSerialPorts document
//gsoap tmd  service method-encoding:	GetSerialPorts literal
//gsoap tmd  service method-input-action:	GetSerialPorts http://www.onvif.org/ver10/deviceio/wsdl/GetSerialPorts
//gsoap tmd  service method-output-action:	GetSerialPorts http://www.onvif.org/ver10/deviceio/wsdl/GetSerialPortsResponse
int __tmd__GetSerialPorts(
    _tmd__GetSerialPorts*               tmd__GetSerialPorts,	///< Input parameter
    _tmd__GetSerialPortsResponse       &tmd__GetSerialPortsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tmd__GetSerialPortConfiguration                                        *
 *                                                                            *
\******************************************************************************/


/** Operation "__tmd__GetSerialPortConfiguration" of service binding "DeviceIOBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/deviceio/wsdl/GetSerialPortConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/deviceio/wsdl/GetSerialPortConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/deviceio/wsdl/GetSerialPortConfigurationsResponse"
*/

//gsoap tmd  service method-protocol:	GetSerialPortConfiguration SOAP
//gsoap tmd  service method-style:	GetSerialPortConfiguration document
//gsoap tmd  service method-encoding:	GetSerialPortConfiguration literal
//gsoap tmd  service method-input-action:	GetSerialPortConfiguration http://www.onvif.org/ver10/deviceio/wsdl/GetSerialPortConfigurations
//gsoap tmd  service method-output-action:	GetSerialPortConfiguration http://www.onvif.org/ver10/deviceio/wsdl/GetSerialPortConfigurationsResponse
int __tmd__GetSerialPortConfiguration(
    _tmd__GetSerialPortConfiguration*   tmd__GetSerialPortConfiguration,	///< Input parameter
    _tmd__GetSerialPortConfigurationResponse&tmd__GetSerialPortConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tmd__SetSerialPortConfiguration                                        *
 *                                                                            *
\******************************************************************************/


/** Operation "__tmd__SetSerialPortConfiguration" of service binding "DeviceIOBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/deviceio/wsdl/SetSerialPortConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/deviceio/wsdl/SetSerialPortConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/deviceio/wsdl/SetSerialPortConfigurationResponse"
*/

//gsoap tmd  service method-protocol:	SetSerialPortConfiguration SOAP
//gsoap tmd  service method-style:	SetSerialPortConfiguration document
//gsoap tmd  service method-encoding:	SetSerialPortConfiguration literal
//gsoap tmd  service method-input-action:	SetSerialPortConfiguration http://www.onvif.org/ver10/deviceio/wsdl/SetSerialPortConfiguration
//gsoap tmd  service method-output-action:	SetSerialPortConfiguration http://www.onvif.org/ver10/deviceio/wsdl/SetSerialPortConfigurationResponse
int __tmd__SetSerialPortConfiguration(
    _tmd__SetSerialPortConfiguration*   tmd__SetSerialPortConfiguration,	///< Input parameter
    _tmd__SetSerialPortConfigurationResponse&tmd__SetSerialPortConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tmd__GetSerialPortConfigurationOptions                                 *
 *                                                                            *
\******************************************************************************/


/** Operation "__tmd__GetSerialPortConfigurationOptions" of service binding "DeviceIOBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/deviceio/wsdl/GetSerialPortConfigurationOptions"

  - Addressing input action: "http://www.onvif.org/ver10/deviceio/wsdl/GetSerialPortConfigurationOptions"

  - Addressing output action: "http://www.onvif.org/ver10/deviceio/wsdl/GetSerialPortConfigurationOptionsResponse"
*/

//gsoap tmd  service method-protocol:	GetSerialPortConfigurationOptions SOAP
//gsoap tmd  service method-style:	GetSerialPortConfigurationOptions document
//gsoap tmd  service method-encoding:	GetSerialPortConfigurationOptions literal
//gsoap tmd  service method-input-action:	GetSerialPortConfigurationOptions http://www.onvif.org/ver10/deviceio/wsdl/GetSerialPortConfigurationOptions
//gsoap tmd  service method-output-action:	GetSerialPortConfigurationOptions http://www.onvif.org/ver10/deviceio/wsdl/GetSerialPortConfigurationOptionsResponse
int __tmd__GetSerialPortConfigurationOptions(
    _tmd__GetSerialPortConfigurationOptions* tmd__GetSerialPortConfigurationOptions,	///< Input parameter
    _tmd__GetSerialPortConfigurationOptionsResponse&tmd__GetSerialPortConfigurationOptionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tmd__SendReceiveSerialCommand                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__tmd__SendReceiveSerialCommand" of service binding "DeviceIOBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/deviceio/wsdl/SendReceiveSerialCommand"

  - Addressing input action: "http://www.onvif.org/ver10/deviceio/wsdl/SendReceiveSerialCommand"

  - Addressing output action: "http://www.onvif.org/ver10/deviceio/wsdl/SendReceiveSerialCommandResponse"
*/

//gsoap tmd  service method-protocol:	SendReceiveSerialCommand SOAP
//gsoap tmd  service method-style:	SendReceiveSerialCommand document
//gsoap tmd  service method-encoding:	SendReceiveSerialCommand literal
//gsoap tmd  service method-input-action:	SendReceiveSerialCommand http://www.onvif.org/ver10/deviceio/wsdl/SendReceiveSerialCommand
//gsoap tmd  service method-output-action:	SendReceiveSerialCommand http://www.onvif.org/ver10/deviceio/wsdl/SendReceiveSerialCommandResponse
int __tmd__SendReceiveSerialCommand(
    _tmd__SendReceiveSerialCommand*     tmd__SendReceiveSerialCommand,	///< Input parameter
    _tmd__SendReceiveSerialCommandResponse&tmd__SendReceiveSerialCommandResponse	///< Output parameter
);

/** @page DeviceIOBinding Binding "DeviceIOBinding"

@section DeviceIOBinding_policy_enablers Policy Enablers of Binding "DeviceIOBinding"

None specified.

*/

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   PTZBinding                                                               *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__GetServiceCapabilities                                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__GetServiceCapabilities" of service binding "PTZBinding".
Returns the capabilities of the PTZ service. The result is returned in a typed answer.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/ptz/wsdl/GetServiceCapabilities"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/GetServiceCapabilities"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/GetServiceCapabilitiesResponse"
*/

//gsoap tptz service method-protocol:	GetServiceCapabilities SOAP
//gsoap tptz service method-style:	GetServiceCapabilities document
//gsoap tptz service method-encoding:	GetServiceCapabilities literal
//gsoap tptz service method-input-action:	GetServiceCapabilities http://www.onvif.org/ver20/ptz/wsdl/GetServiceCapabilities
//gsoap tptz service method-output-action:	GetServiceCapabilities http://www.onvif.org/ver20/ptz/wsdl/GetServiceCapabilitiesResponse
int __tptz__GetServiceCapabilities(
    _tptz__GetServiceCapabilities*      tptz__GetServiceCapabilities,	///< Input parameter
    _tptz__GetServiceCapabilitiesResponse&tptz__GetServiceCapabilitiesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__GetConfigurations                                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__GetConfigurations" of service binding "PTZBinding".
		        Get all the existing PTZConfigurations from the device.
				<br/>
				The default Position/Translation/Velocity Spaces
are introduced to allow NVCs sending move
				requests without the need to specify a certain coordinate
system. The default Speeds are
				introduced to control the speed of move requests
(absolute, relative, preset), where no
				explicit speed has been set.<br/>
				The allowed pan and tilt range for Pan/Tilt Limits
is defined by a two-dimensional space range
				that is mapped to a specific Absolute Pan/Tilt Position
Space. At least one Pan/Tilt Position
				Space is required by the PTZNode to support Pan/Tilt
limits. The limits apply to all supported
				absolute, relative and continuous Pan/Tilt movements.
The limits shall be checked within the
				coordinate system for which the limits have been
specified. That means that even if
				movements are specified in a different coordinate
system, the requested movements shall be
				transformed to the coordinate system of the limits
where the limits can be checked. When a
				relative or continuous movements is specified, which
would leave the specified limits, the PTZ
				unit has to move along the specified limits. The
Zoom Limits have to be interpreted
				accordingly.
			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/ptz/wsdl/GetConfigurations"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/GetConfigurations"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/GetConfigurationsResponse"
*/

//gsoap tptz service method-protocol:	GetConfigurations SOAP
//gsoap tptz service method-style:	GetConfigurations document
//gsoap tptz service method-encoding:	GetConfigurations literal
//gsoap tptz service method-input-action:	GetConfigurations http://www.onvif.org/ver20/ptz/wsdl/GetConfigurations
//gsoap tptz service method-output-action:	GetConfigurations http://www.onvif.org/ver20/ptz/wsdl/GetConfigurationsResponse
int __tptz__GetConfigurations(
    _tptz__GetConfigurations*           tptz__GetConfigurations,	///< Input parameter
    _tptz__GetConfigurationsResponse   &tptz__GetConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__GetPresets                                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__GetPresets" of service binding "PTZBinding".
        Operation to request all PTZ presets for the PTZNode
        in the selected profile. The operation is supported if there is support
        for at least on PTZ preset by the PTZNode.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/ptz/wsdl/GetPresets"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/GetPresets"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/GetPresetsResponse"
*/

//gsoap tptz service method-protocol:	GetPresets SOAP
//gsoap tptz service method-style:	GetPresets document
//gsoap tptz service method-encoding:	GetPresets literal
//gsoap tptz service method-input-action:	GetPresets http://www.onvif.org/ver20/ptz/wsdl/GetPresets
//gsoap tptz service method-output-action:	GetPresets http://www.onvif.org/ver20/ptz/wsdl/GetPresetsResponse
int __tptz__GetPresets(
    _tptz__GetPresets*                  tptz__GetPresets,	///< Input parameter
    _tptz__GetPresetsResponse          &tptz__GetPresetsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__SetPreset                                                        *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__SetPreset" of service binding "PTZBinding".
				The SetPreset command saves the current device position
parameters so that the device can
				move to the saved preset position through the GotoPreset
operation.
				In order to create a new preset, the SetPresetRequest
contains no PresetToken. If creation is
				successful, the Response contains the PresetToken
which uniquely identifies the Preset. An
				existing Preset can be overwritten by specifying
the PresetToken of the corresponding Preset.
				In both cases (overwriting or creation) an optional
PresetName can be specified. The
				operation fails if the PTZ device is moving during
the SetPreset operation.
				The device MAY internally save additional states
such as imaging properties in the PTZ
				Preset which then should be recalled in the GotoPreset
operation.      

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/ptz/wsdl/SetPreset"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/SetPreset"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/SetPresetResponse"
*/

//gsoap tptz service method-protocol:	SetPreset SOAP
//gsoap tptz service method-style:	SetPreset document
//gsoap tptz service method-encoding:	SetPreset literal
//gsoap tptz service method-input-action:	SetPreset http://www.onvif.org/ver20/ptz/wsdl/SetPreset
//gsoap tptz service method-output-action:	SetPreset http://www.onvif.org/ver20/ptz/wsdl/SetPresetResponse
int __tptz__SetPreset(
    _tptz__SetPreset*                   tptz__SetPreset,	///< Input parameter
    _tptz__SetPresetResponse           &tptz__SetPresetResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__RemovePreset                                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__RemovePreset" of service binding "PTZBinding".
        Operation to remove a PTZ preset for the Node in
        the
        selected profile. The operation is supported if the
        PresetPosition
        capability exists for teh Node in the
        selected profile.
      

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/ptz/wsdl/RemovePreset"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/RemovePreset"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/RemovePresetResponse"
*/

//gsoap tptz service method-protocol:	RemovePreset SOAP
//gsoap tptz service method-style:	RemovePreset document
//gsoap tptz service method-encoding:	RemovePreset literal
//gsoap tptz service method-input-action:	RemovePreset http://www.onvif.org/ver20/ptz/wsdl/RemovePreset
//gsoap tptz service method-output-action:	RemovePreset http://www.onvif.org/ver20/ptz/wsdl/RemovePresetResponse
int __tptz__RemovePreset(
    _tptz__RemovePreset*                tptz__RemovePreset,	///< Input parameter
    _tptz__RemovePresetResponse        &tptz__RemovePresetResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__GotoPreset                                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__GotoPreset" of service binding "PTZBinding".
        Operation to go to a saved preset position for the
        PTZNode in the selected profile. The operation is supported if there is
        support for at least on PTZ preset by the PTZNode.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/ptz/wsdl/GotoPreset"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/GotoPreset"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/GotoPresetResponse"
*/

//gsoap tptz service method-protocol:	GotoPreset SOAP
//gsoap tptz service method-style:	GotoPreset document
//gsoap tptz service method-encoding:	GotoPreset literal
//gsoap tptz service method-input-action:	GotoPreset http://www.onvif.org/ver20/ptz/wsdl/GotoPreset
//gsoap tptz service method-output-action:	GotoPreset http://www.onvif.org/ver20/ptz/wsdl/GotoPresetResponse
int __tptz__GotoPreset(
    _tptz__GotoPreset*                  tptz__GotoPreset,	///< Input parameter
    _tptz__GotoPresetResponse          &tptz__GotoPresetResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__GetStatus                                                        *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__GetStatus" of service binding "PTZBinding".
				Operation to request PTZ status for the Node in
the
				selected profile.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/ptz/wsdl/GetStatus"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/GetStatus"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/GetStatusResponse"
*/

//gsoap tptz service method-protocol:	GetStatus SOAP
//gsoap tptz service method-style:	GetStatus document
//gsoap tptz service method-encoding:	GetStatus literal
//gsoap tptz service method-input-action:	GetStatus http://www.onvif.org/ver20/ptz/wsdl/GetStatus
//gsoap tptz service method-output-action:	GetStatus http://www.onvif.org/ver20/ptz/wsdl/GetStatusResponse
int __tptz__GetStatus(
    _tptz__GetStatus*                   tptz__GetStatus,	///< Input parameter
    _tptz__GetStatusResponse           &tptz__GetStatusResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__GetConfiguration                                                 *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__GetConfiguration" of service binding "PTZBinding".
Get a specific PTZonfiguration from the device, identified by its reference token
or name.
				<br/>
				The default Position/Translation/Velocity Spaces
are introduced to allow NVCs sending move
				requests without the need to specify a certain coordinate
system. The default Speeds are
				introduced to control the speed of move requests
(absolute, relative, preset), where no
				explicit speed has been set.<br/>
				The allowed pan and tilt range for Pan/Tilt Limits
is defined by a two-dimensional space range
				that is mapped to a specific Absolute Pan/Tilt Position
Space. At least one Pan/Tilt Position
				Space is required by the PTZNode to support Pan/Tilt
limits. The limits apply to all supported
				absolute, relative and continuous Pan/Tilt movements.
The limits shall be checked within the
				coordinate system for which the limits have been
specified. That means that even if
				movements are specified in a different coordinate
system, the requested movements shall be
				transformed to the coordinate system of the limits
where the limits can be checked. When a
				relative or continuous movements is specified, which
would leave the specified limits, the PTZ
				unit has to move along the specified limits. The
Zoom Limits have to be interpreted
				accordingly.
			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/ptz/wsdl/GetConfiguration"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/GetConfiguration"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/GetConfigurationResponse"
*/

//gsoap tptz service method-protocol:	GetConfiguration SOAP
//gsoap tptz service method-style:	GetConfiguration document
//gsoap tptz service method-encoding:	GetConfiguration literal
//gsoap tptz service method-input-action:	GetConfiguration http://www.onvif.org/ver20/ptz/wsdl/GetConfiguration
//gsoap tptz service method-output-action:	GetConfiguration http://www.onvif.org/ver20/ptz/wsdl/GetConfigurationResponse
int __tptz__GetConfiguration(
    _tptz__GetConfiguration*            tptz__GetConfiguration,	///< Input parameter
    _tptz__GetConfigurationResponse    &tptz__GetConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__GetNodes                                                         *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__GetNodes" of service binding "PTZBinding".
				Get the descriptions of the available PTZ Nodes.
				<br/>
				A PTZ-capable device may have multiple PTZ Nodes.
The PTZ Nodes may represent
				mechanical PTZ drivers, uploaded PTZ drivers or
digital PTZ drivers. PTZ Nodes are the
				lowest level entities in the PTZ control API and
reflect the supported PTZ capabilities. The
				PTZ Node is referenced either by its name or by
its reference token. 
      		

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/ptz/wsdl/GetNodes"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/GetNodes"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/GetNodesResponse"
*/

//gsoap tptz service method-protocol:	GetNodes SOAP
//gsoap tptz service method-style:	GetNodes document
//gsoap tptz service method-encoding:	GetNodes literal
//gsoap tptz service method-input-action:	GetNodes http://www.onvif.org/ver20/ptz/wsdl/GetNodes
//gsoap tptz service method-output-action:	GetNodes http://www.onvif.org/ver20/ptz/wsdl/GetNodesResponse
int __tptz__GetNodes(
    _tptz__GetNodes*                    tptz__GetNodes,	///< Input parameter
    _tptz__GetNodesResponse            &tptz__GetNodesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__GetNode                                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__GetNode" of service binding "PTZBinding".
Get a specific PTZ Node identified by a reference
        token or a name.
	  

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/ptz/wsdl/GetNode"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/GetNode"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/GetNodeResponse"
*/

//gsoap tptz service method-protocol:	GetNode SOAP
//gsoap tptz service method-style:	GetNode document
//gsoap tptz service method-encoding:	GetNode literal
//gsoap tptz service method-input-action:	GetNode http://www.onvif.org/ver20/ptz/wsdl/GetNode
//gsoap tptz service method-output-action:	GetNode http://www.onvif.org/ver20/ptz/wsdl/GetNodeResponse
int __tptz__GetNode(
    _tptz__GetNode*                     tptz__GetNode,	///< Input parameter
    _tptz__GetNodeResponse             &tptz__GetNodeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__SetConfiguration                                                 *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__SetConfiguration" of service binding "PTZBinding".
        Set/update a existing PTZConfiguration on the device.
      

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/ptz/wsdl/SetConfiguration"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/SetConfiguration"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/SetConfigurationResponse"
*/

//gsoap tptz service method-protocol:	SetConfiguration SOAP
//gsoap tptz service method-style:	SetConfiguration document
//gsoap tptz service method-encoding:	SetConfiguration literal
//gsoap tptz service method-input-action:	SetConfiguration http://www.onvif.org/ver20/ptz/wsdl/SetConfiguration
//gsoap tptz service method-output-action:	SetConfiguration http://www.onvif.org/ver20/ptz/wsdl/SetConfigurationResponse
int __tptz__SetConfiguration(
    _tptz__SetConfiguration*            tptz__SetConfiguration,	///< Input parameter
    _tptz__SetConfigurationResponse    &tptz__SetConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__GetConfigurationOptions                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__GetConfigurationOptions" of service binding "PTZBinding".
				List supported coordinate systems including their
range limitations. Therefore, the options
				MAY differ depending on whether the PTZ Configuration
is assigned to a Profile containing a
				Video Source Configuration. In that case, the options
may additionally contain coordinate
				systems referring to the image coordinate system
described by the Video Source
				Configuration. If the PTZ Node supports continuous
movements, it shall return a Timeout Range within
				which Timeouts are accepted by the PTZ Node.				
			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/ptz/wsdl/GetConfigurationOptions"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/GetConfigurationOptions"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/GetConfigurationOptionsResponse"
*/

//gsoap tptz service method-protocol:	GetConfigurationOptions SOAP
//gsoap tptz service method-style:	GetConfigurationOptions document
//gsoap tptz service method-encoding:	GetConfigurationOptions literal
//gsoap tptz service method-input-action:	GetConfigurationOptions http://www.onvif.org/ver20/ptz/wsdl/GetConfigurationOptions
//gsoap tptz service method-output-action:	GetConfigurationOptions http://www.onvif.org/ver20/ptz/wsdl/GetConfigurationOptionsResponse
int __tptz__GetConfigurationOptions(
    _tptz__GetConfigurationOptions*     tptz__GetConfigurationOptions,	///< Input parameter
    _tptz__GetConfigurationOptionsResponse&tptz__GetConfigurationOptionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__GotoHomePosition                                                 *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__GotoHomePosition" of service binding "PTZBinding".
        Operation to move the PTZ device to it's "home" position. The operation
is supported if the HomeSupported element in the PTZNode is true.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/ptz/wsdl/GotoHomePosition"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/GotoHomePosition"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/GotoHomePositionResponse"
*/

//gsoap tptz service method-protocol:	GotoHomePosition SOAP
//gsoap tptz service method-style:	GotoHomePosition document
//gsoap tptz service method-encoding:	GotoHomePosition literal
//gsoap tptz service method-input-action:	GotoHomePosition http://www.onvif.org/ver20/ptz/wsdl/GotoHomePosition
//gsoap tptz service method-output-action:	GotoHomePosition http://www.onvif.org/ver20/ptz/wsdl/GotoHomePositionResponse
int __tptz__GotoHomePosition(
    _tptz__GotoHomePosition*            tptz__GotoHomePosition,	///< Input parameter
    _tptz__GotoHomePositionResponse    &tptz__GotoHomePositionResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__SetHomePosition                                                  *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__SetHomePosition" of service binding "PTZBinding".
Operation to save current position as the home position.
				The SetHomePosition command returns with a failure
if the home position is fixed and
				cannot be overwritten. If the SetHomePosition is
successful, it is possible to recall the
				Home Position with the GotoHomePosition command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/ptz/wsdl/SetHomePosition"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/SetHomePosition"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/SetHomePositionResponse"
*/

//gsoap tptz service method-protocol:	SetHomePosition SOAP
//gsoap tptz service method-style:	SetHomePosition document
//gsoap tptz service method-encoding:	SetHomePosition literal
//gsoap tptz service method-input-action:	SetHomePosition http://www.onvif.org/ver20/ptz/wsdl/SetHomePosition
//gsoap tptz service method-output-action:	SetHomePosition http://www.onvif.org/ver20/ptz/wsdl/SetHomePositionResponse
int __tptz__SetHomePosition(
    _tptz__SetHomePosition*             tptz__SetHomePosition,	///< Input parameter
    _tptz__SetHomePositionResponse     &tptz__SetHomePositionResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__ContinuousMove                                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__ContinuousMove" of service binding "PTZBinding".
Operation for continuous Pan/Tilt and Zoom movements. The operation is supported
if the PTZNode supports at least one continuous Pan/Tilt or Zoom space. If the
space argument is omitted, the default space set by the PTZConfiguration will be
used.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/ptz/wsdl/ContinuousMove"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/ContinuousMove"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/ContinuousMoveResponse"
*/

//gsoap tptz service method-protocol:	ContinuousMove SOAP
//gsoap tptz service method-style:	ContinuousMove document
//gsoap tptz service method-encoding:	ContinuousMove literal
//gsoap tptz service method-input-action:	ContinuousMove http://www.onvif.org/ver20/ptz/wsdl/ContinuousMove
//gsoap tptz service method-output-action:	ContinuousMove http://www.onvif.org/ver20/ptz/wsdl/ContinuousMoveResponse
int __tptz__ContinuousMove(
    _tptz__ContinuousMove*              tptz__ContinuousMove,	///< Input parameter
    _tptz__ContinuousMoveResponse      &tptz__ContinuousMoveResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__RelativeMove                                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__RelativeMove" of service binding "PTZBinding".
Operation for Relative Pan/Tilt and Zoom Move. The operation is supported if the
PTZNode supports at least one relative Pan/Tilt or Zoom space.<br/> 
				The speed argument is optional. If an x/y speed
value is given it is up to the device to either use 
				the x value as absolute resoluting speed vector
or to map x and y to the component speed. 
				If the speed argument is omitted, the default speed
set by the PTZConfiguration will be used.
			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/ptz/wsdl/RelativeMove"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/RelativeMove"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/RelativeMoveResponse"
*/

//gsoap tptz service method-protocol:	RelativeMove SOAP
//gsoap tptz service method-style:	RelativeMove document
//gsoap tptz service method-encoding:	RelativeMove literal
//gsoap tptz service method-input-action:	RelativeMove http://www.onvif.org/ver20/ptz/wsdl/RelativeMove
//gsoap tptz service method-output-action:	RelativeMove http://www.onvif.org/ver20/ptz/wsdl/RelativeMoveResponse
int __tptz__RelativeMove(
    _tptz__RelativeMove*                tptz__RelativeMove,	///< Input parameter
    _tptz__RelativeMoveResponse        &tptz__RelativeMoveResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__SendAuxiliaryCommand                                             *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__SendAuxiliaryCommand" of service binding "PTZBinding".
        Operation to send auxiliary commands to the PTZ device
        mapped by the PTZNode in the selected profile. The
        operation is supported
        if the AuxiliarySupported element of the PTZNode is true
      

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/ptz/wsdl/SendAuxiliaryCommand"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/SendAuxiliaryCommand"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/SendAuxiliaryCommandResponse"
*/

//gsoap tptz service method-protocol:	SendAuxiliaryCommand SOAP
//gsoap tptz service method-style:	SendAuxiliaryCommand document
//gsoap tptz service method-encoding:	SendAuxiliaryCommand literal
//gsoap tptz service method-input-action:	SendAuxiliaryCommand http://www.onvif.org/ver20/ptz/wsdl/SendAuxiliaryCommand
//gsoap tptz service method-output-action:	SendAuxiliaryCommand http://www.onvif.org/ver20/ptz/wsdl/SendAuxiliaryCommandResponse
int __tptz__SendAuxiliaryCommand(
    _tptz__SendAuxiliaryCommand*        tptz__SendAuxiliaryCommand,	///< Input parameter
    _tptz__SendAuxiliaryCommandResponse&tptz__SendAuxiliaryCommandResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__AbsoluteMove                                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__AbsoluteMove" of service binding "PTZBinding".
Operation to move pan,tilt or zoom to a absolute destination. <br/>
				The speed argument is optional. If an x/y speed
value is given it is up to the device to either use 
				the x value as absolute resoluting speed vector
or to map x and y to the component speed. 
				If the speed argument is omitted, the default speed
set by the PTZConfiguration will be used.
			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/ptz/wsdl/AbsoluteMove"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/AbsoluteMove"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/AbsoluteMoveResponse"
*/

//gsoap tptz service method-protocol:	AbsoluteMove SOAP
//gsoap tptz service method-style:	AbsoluteMove document
//gsoap tptz service method-encoding:	AbsoluteMove literal
//gsoap tptz service method-input-action:	AbsoluteMove http://www.onvif.org/ver20/ptz/wsdl/AbsoluteMove
//gsoap tptz service method-output-action:	AbsoluteMove http://www.onvif.org/ver20/ptz/wsdl/AbsoluteMoveResponse
int __tptz__AbsoluteMove(
    _tptz__AbsoluteMove*                tptz__AbsoluteMove,	///< Input parameter
    _tptz__AbsoluteMoveResponse        &tptz__AbsoluteMoveResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__Stop                                                             *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__Stop" of service binding "PTZBinding".
Operation to stop ongoing pan, tilt and zoom movements of absolute relative and
continuous type.
If no stop argument for pan, tilt or zoom is set, the device will stop all ongoing
pan, tilt and zoom movements.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/ptz/wsdl/Stop"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/Stop"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/StopResponse"
*/

//gsoap tptz service method-protocol:	Stop SOAP
//gsoap tptz service method-style:	Stop document
//gsoap tptz service method-encoding:	Stop literal
//gsoap tptz service method-input-action:	Stop http://www.onvif.org/ver20/ptz/wsdl/Stop
//gsoap tptz service method-output-action:	Stop http://www.onvif.org/ver20/ptz/wsdl/StopResponse
int __tptz__Stop(
    _tptz__Stop*                        tptz__Stop,	///< Input parameter
    _tptz__StopResponse                &tptz__StopResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__GetPresetTours                                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__GetPresetTours" of service binding "PTZBinding".
Operation to request PTZ preset tours in the selected media profiles.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/ptz/wsdl/GetPresetTours"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/GetPresetTours"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/GetPresetToursResponse"
*/

//gsoap tptz service method-protocol:	GetPresetTours SOAP
//gsoap tptz service method-style:	GetPresetTours document
//gsoap tptz service method-encoding:	GetPresetTours literal
//gsoap tptz service method-input-action:	GetPresetTours http://www.onvif.org/ver20/ptz/wsdl/GetPresetTours
//gsoap tptz service method-output-action:	GetPresetTours http://www.onvif.org/ver20/ptz/wsdl/GetPresetToursResponse
int __tptz__GetPresetTours(
    _tptz__GetPresetTours*              tptz__GetPresetTours,	///< Input parameter
    _tptz__GetPresetToursResponse      &tptz__GetPresetToursResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__GetPresetTour                                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__GetPresetTour" of service binding "PTZBinding".
Operation to request a specific PTZ preset tour in the selected media profile.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/ptz/wsdl/GetPresetTour"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/GetPresetTour"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/GetPresetTourResponse"
*/

//gsoap tptz service method-protocol:	GetPresetTour SOAP
//gsoap tptz service method-style:	GetPresetTour document
//gsoap tptz service method-encoding:	GetPresetTour literal
//gsoap tptz service method-input-action:	GetPresetTour http://www.onvif.org/ver20/ptz/wsdl/GetPresetTour
//gsoap tptz service method-output-action:	GetPresetTour http://www.onvif.org/ver20/ptz/wsdl/GetPresetTourResponse
int __tptz__GetPresetTour(
    _tptz__GetPresetTour*               tptz__GetPresetTour,	///< Input parameter
    _tptz__GetPresetTourResponse       &tptz__GetPresetTourResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__GetPresetTourOptions                                             *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__GetPresetTourOptions" of service binding "PTZBinding".
Operation to request available options to configure PTZ preset tour.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/ptz/wsdl/GetPresetTourOptions"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/GetPresetTourOptions"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/GetPresetTourOptionsResponse"
*/

//gsoap tptz service method-protocol:	GetPresetTourOptions SOAP
//gsoap tptz service method-style:	GetPresetTourOptions document
//gsoap tptz service method-encoding:	GetPresetTourOptions literal
//gsoap tptz service method-input-action:	GetPresetTourOptions http://www.onvif.org/ver20/ptz/wsdl/GetPresetTourOptions
//gsoap tptz service method-output-action:	GetPresetTourOptions http://www.onvif.org/ver20/ptz/wsdl/GetPresetTourOptionsResponse
int __tptz__GetPresetTourOptions(
    _tptz__GetPresetTourOptions*        tptz__GetPresetTourOptions,	///< Input parameter
    _tptz__GetPresetTourOptionsResponse&tptz__GetPresetTourOptionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__CreatePresetTour                                                 *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__CreatePresetTour" of service binding "PTZBinding".
Operation to create a preset tour for the selected media profile.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/ptz/wsdl/CreatePresetTour"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/CreatePresetTour"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/CreatePresetTourResponse"
*/

//gsoap tptz service method-protocol:	CreatePresetTour SOAP
//gsoap tptz service method-style:	CreatePresetTour document
//gsoap tptz service method-encoding:	CreatePresetTour literal
//gsoap tptz service method-input-action:	CreatePresetTour http://www.onvif.org/ver20/ptz/wsdl/CreatePresetTour
//gsoap tptz service method-output-action:	CreatePresetTour http://www.onvif.org/ver20/ptz/wsdl/CreatePresetTourResponse
int __tptz__CreatePresetTour(
    _tptz__CreatePresetTour*            tptz__CreatePresetTour,	///< Input parameter
    _tptz__CreatePresetTourResponse    &tptz__CreatePresetTourResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__ModifyPresetTour                                                 *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__ModifyPresetTour" of service binding "PTZBinding".
Operation to modify a preset tour for the selected media profile.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/ptz/wsdl/ModifyPresetTour"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/ModifyPresetTour"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/ModifyPresetTourResponse"
*/

//gsoap tptz service method-protocol:	ModifyPresetTour SOAP
//gsoap tptz service method-style:	ModifyPresetTour document
//gsoap tptz service method-encoding:	ModifyPresetTour literal
//gsoap tptz service method-input-action:	ModifyPresetTour http://www.onvif.org/ver20/ptz/wsdl/ModifyPresetTour
//gsoap tptz service method-output-action:	ModifyPresetTour http://www.onvif.org/ver20/ptz/wsdl/ModifyPresetTourResponse
int __tptz__ModifyPresetTour(
    _tptz__ModifyPresetTour*            tptz__ModifyPresetTour,	///< Input parameter
    _tptz__ModifyPresetTourResponse    &tptz__ModifyPresetTourResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__OperatePresetTour                                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__OperatePresetTour" of service binding "PTZBinding".
Operation to perform specific operation on the preset tour in selected media profile.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/ptz/wsdl/OperatePresetTour"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/OperatePresetTour"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/OperatePresetTourResponse"
*/

//gsoap tptz service method-protocol:	OperatePresetTour SOAP
//gsoap tptz service method-style:	OperatePresetTour document
//gsoap tptz service method-encoding:	OperatePresetTour literal
//gsoap tptz service method-input-action:	OperatePresetTour http://www.onvif.org/ver20/ptz/wsdl/OperatePresetTour
//gsoap tptz service method-output-action:	OperatePresetTour http://www.onvif.org/ver20/ptz/wsdl/OperatePresetTourResponse
int __tptz__OperatePresetTour(
    _tptz__OperatePresetTour*           tptz__OperatePresetTour,	///< Input parameter
    _tptz__OperatePresetTourResponse   &tptz__OperatePresetTourResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__RemovePresetTour                                                 *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__RemovePresetTour" of service binding "PTZBinding".
Operation to delete a specific preset tour from the media profile.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/ptz/wsdl/RemovePresetTour"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/RemovePresetTour"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/RemovePresetTourResponse"
*/

//gsoap tptz service method-protocol:	RemovePresetTour SOAP
//gsoap tptz service method-style:	RemovePresetTour document
//gsoap tptz service method-encoding:	RemovePresetTour literal
//gsoap tptz service method-input-action:	RemovePresetTour http://www.onvif.org/ver20/ptz/wsdl/RemovePresetTour
//gsoap tptz service method-output-action:	RemovePresetTour http://www.onvif.org/ver20/ptz/wsdl/RemovePresetTourResponse
int __tptz__RemovePresetTour(
    _tptz__RemovePresetTour*            tptz__RemovePresetTour,	///< Input parameter
    _tptz__RemovePresetTourResponse    &tptz__RemovePresetTourResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__GetCompatibleConfigurations                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__GetCompatibleConfigurations" of service binding "PTZBinding".
Operation to get all available PTZConfigurations that can be added to the referenced
media profile. <br/>
				A device providing more than one PTZConfiguration
or more than one VideoSourceConfiguration or which has any other resource
				interdependency between PTZConfiguration entities
and other resources listable in a media profile should implement this operation.
				PTZConfiguration entities returned by this operation
shall not fail on adding them to the referenced media profile.
			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/ptz/wsdl/GetCompatibleConfigurations"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/GetCompatibleConfigurations"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/GetCompatibleConfigurationsResponse"
*/

//gsoap tptz service method-protocol:	GetCompatibleConfigurations SOAP
//gsoap tptz service method-style:	GetCompatibleConfigurations document
//gsoap tptz service method-encoding:	GetCompatibleConfigurations literal
//gsoap tptz service method-input-action:	GetCompatibleConfigurations http://www.onvif.org/ver20/ptz/wsdl/GetCompatibleConfigurations
//gsoap tptz service method-output-action:	GetCompatibleConfigurations http://www.onvif.org/ver20/ptz/wsdl/GetCompatibleConfigurationsResponse
int __tptz__GetCompatibleConfigurations(
    _tptz__GetCompatibleConfigurations* tptz__GetCompatibleConfigurations,	///< Input parameter
    _tptz__GetCompatibleConfigurationsResponse&tptz__GetCompatibleConfigurationsResponse	///< Output parameter
);

/** @page PTZBinding Binding "PTZBinding"

@section PTZBinding_policy_enablers Policy Enablers of Binding "PTZBinding"

None specified.

*/

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   RecordingBinding                                                         *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trc__GetServiceCapabilities                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__trc__GetServiceCapabilities" of service binding "RecordingBinding".
Returns the capabilities of the recording service. The result is returned in a typed
answer.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/recording/wsdl/GetServiceCapabilities"

  - Addressing input action: "http://www.onvif.org/ver10/recording/wsdl/GetServiceCapabilities"

  - Addressing output action: "http://www.onvif.org/ver10/recording/wsdl/GetServiceCapabilitiesResponse"
*/

//gsoap trc  service method-protocol:	GetServiceCapabilities SOAP
//gsoap trc  service method-style:	GetServiceCapabilities document
//gsoap trc  service method-encoding:	GetServiceCapabilities literal
//gsoap trc  service method-input-action:	GetServiceCapabilities http://www.onvif.org/ver10/recording/wsdl/GetServiceCapabilities
//gsoap trc  service method-output-action:	GetServiceCapabilities http://www.onvif.org/ver10/recording/wsdl/GetServiceCapabilitiesResponse
int __trc__GetServiceCapabilities(
    _trc__GetServiceCapabilities*       trc__GetServiceCapabilities,	///< Input parameter
    _trc__GetServiceCapabilitiesResponse&trc__GetServiceCapabilitiesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trc__CreateRecording                                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__trc__CreateRecording" of service binding "RecordingBinding".
CreateRecording shall create a new recording. The new recording shall be created
with a track 
                                for each supported TrackType see Recording Control
Spec. <br/>
				This method is optional. It shall be available if
the Recording/DynamicRecordings capability is TRUE. <br/>
				When successfully completed, CreateRecording shall
have created three tracks with the following configurations: <ul>
					<li>
				TrackToken TrackType</li>
					<li>
					VIDEO001 Video</li>
					<li>
						AUDIO001 Audio</li>
					<li>
					META001 Metadata</li>
				</ul>
				All TrackConfigurations shall have the MaximumRetentionTime
set to 0 (unlimited), and the
				Description set to the empty string.
			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/recording/wsdl/CreateRecording"

  - Addressing input action: "http://www.onvif.org/ver10/recording/wsdl/CreateRecording"

  - Addressing output action: "http://www.onvif.org/ver10/recording/wsdl/CreateRecordingResponse"
*/

//gsoap trc  service method-protocol:	CreateRecording SOAP
//gsoap trc  service method-style:	CreateRecording document
//gsoap trc  service method-encoding:	CreateRecording literal
//gsoap trc  service method-input-action:	CreateRecording http://www.onvif.org/ver10/recording/wsdl/CreateRecording
//gsoap trc  service method-output-action:	CreateRecording http://www.onvif.org/ver10/recording/wsdl/CreateRecordingResponse
int __trc__CreateRecording(
    _trc__CreateRecording*              trc__CreateRecording,	///< Input parameter
    _trc__CreateRecordingResponse      &trc__CreateRecordingResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trc__DeleteRecording                                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__trc__DeleteRecording" of service binding "RecordingBinding".
DeleteRecording shall delete a recording object. Whenever a recording is deleted,
the device
				shall delete all the tracks that are part of the
recording, and it shall delete all the Recording
				Jobs that record into the recording. For each deleted
recording job, the device shall also
				delete all the receiver objects associated with
the recording job that are automatically created
				using the AutoCreateReceiver field of the recording
job configuration structure and are not
				used in any other recording job.<br/>
				This method is optional. It shall be available if
the Recording/DynamicRecordings capability is TRUE.
			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/recording/wsdl/DeleteRecording"

  - Addressing input action: "http://www.onvif.org/ver10/recording/wsdl/DeleteRecording"

  - Addressing output action: "http://www.onvif.org/ver10/recording/wsdl/DeleteRecordingResponse"
*/

//gsoap trc  service method-protocol:	DeleteRecording SOAP
//gsoap trc  service method-style:	DeleteRecording document
//gsoap trc  service method-encoding:	DeleteRecording literal
//gsoap trc  service method-input-action:	DeleteRecording http://www.onvif.org/ver10/recording/wsdl/DeleteRecording
//gsoap trc  service method-output-action:	DeleteRecording http://www.onvif.org/ver10/recording/wsdl/DeleteRecordingResponse
int __trc__DeleteRecording(
    _trc__DeleteRecording*              trc__DeleteRecording,	///< Input parameter
    _trc__DeleteRecordingResponse      &trc__DeleteRecordingResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trc__GetRecordings                                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__trc__GetRecordings" of service binding "RecordingBinding".
GetRecordings shall return a description of all the recordings in the device. This
description
				shall include a list of all the tracks for each
recording.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/recording/wsdl/GetRecordings"

  - Addressing input action: "http://www.onvif.org/ver10/recording/wsdl/GetRecordings"

  - Addressing output action: "http://www.onvif.org/ver10/recording/wsdl/GetRecordingsResponse"
*/

//gsoap trc  service method-protocol:	GetRecordings SOAP
//gsoap trc  service method-style:	GetRecordings document
//gsoap trc  service method-encoding:	GetRecordings literal
//gsoap trc  service method-input-action:	GetRecordings http://www.onvif.org/ver10/recording/wsdl/GetRecordings
//gsoap trc  service method-output-action:	GetRecordings http://www.onvif.org/ver10/recording/wsdl/GetRecordingsResponse
int __trc__GetRecordings(
    _trc__GetRecordings*                trc__GetRecordings,	///< Input parameter
    _trc__GetRecordingsResponse        &trc__GetRecordingsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trc__SetRecordingConfiguration                                         *
 *                                                                            *
\******************************************************************************/


/** Operation "__trc__SetRecordingConfiguration" of service binding "RecordingBinding".
SetRecordingConfiguration shall change the configuration of a recording.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/recording/wsdl/SetRecordingConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/recording/wsdl/SetRecordingConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/recording/wsdl/SetRecordingConfigurationResponse"
*/

//gsoap trc  service method-protocol:	SetRecordingConfiguration SOAP
//gsoap trc  service method-style:	SetRecordingConfiguration document
//gsoap trc  service method-encoding:	SetRecordingConfiguration literal
//gsoap trc  service method-input-action:	SetRecordingConfiguration http://www.onvif.org/ver10/recording/wsdl/SetRecordingConfiguration
//gsoap trc  service method-output-action:	SetRecordingConfiguration http://www.onvif.org/ver10/recording/wsdl/SetRecordingConfigurationResponse
int __trc__SetRecordingConfiguration(
    _trc__SetRecordingConfiguration*    trc__SetRecordingConfiguration,	///< Input parameter
    _trc__SetRecordingConfigurationResponse&trc__SetRecordingConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trc__GetRecordingConfiguration                                         *
 *                                                                            *
\******************************************************************************/


/** Operation "__trc__GetRecordingConfiguration" of service binding "RecordingBinding".
GetRecordingConfiguration shall retrieve the recording configuration for a recording.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/recording/wsdl/GetRecordingConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/recording/wsdl/GetRecordingConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/recording/wsdl/GetRecordingConfigurationResponse"
*/

//gsoap trc  service method-protocol:	GetRecordingConfiguration SOAP
//gsoap trc  service method-style:	GetRecordingConfiguration document
//gsoap trc  service method-encoding:	GetRecordingConfiguration literal
//gsoap trc  service method-input-action:	GetRecordingConfiguration http://www.onvif.org/ver10/recording/wsdl/GetRecordingConfiguration
//gsoap trc  service method-output-action:	GetRecordingConfiguration http://www.onvif.org/ver10/recording/wsdl/GetRecordingConfigurationResponse
int __trc__GetRecordingConfiguration(
    _trc__GetRecordingConfiguration*    trc__GetRecordingConfiguration,	///< Input parameter
    _trc__GetRecordingConfigurationResponse&trc__GetRecordingConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trc__GetRecordingOptions                                               *
 *                                                                            *
\******************************************************************************/


/** Operation "__trc__GetRecordingOptions" of service binding "RecordingBinding".
GetRecordingOptions returns information for a recording identified by the RecordingToken.
The information includes the number of additonal tracks as well as recording jobs
that can be configured.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/recording/wsdl/GetRecordingOptions"

  - Addressing input action: "http://www.onvif.org/ver10/recording/wsdl/GetRecordingOptions"

  - Addressing output action: "http://www.onvif.org/ver10/recording/wsdl/GetRecordingOptionsResponse"
*/

//gsoap trc  service method-protocol:	GetRecordingOptions SOAP
//gsoap trc  service method-style:	GetRecordingOptions document
//gsoap trc  service method-encoding:	GetRecordingOptions literal
//gsoap trc  service method-input-action:	GetRecordingOptions http://www.onvif.org/ver10/recording/wsdl/GetRecordingOptions
//gsoap trc  service method-output-action:	GetRecordingOptions http://www.onvif.org/ver10/recording/wsdl/GetRecordingOptionsResponse
int __trc__GetRecordingOptions(
    _trc__GetRecordingOptions*          trc__GetRecordingOptions,	///< Input parameter
    _trc__GetRecordingOptionsResponse  &trc__GetRecordingOptionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trc__CreateTrack                                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__trc__CreateTrack" of service binding "RecordingBinding".
This method shall create a new track within a recording.<br/>
				This method is optional. It shall be available if
the Recording/DynamicTracks capability is TRUE.<br/>
				A TrackToken in itself does not uniquely identify
a specific track. Tracks within different
				recordings may have the same TrackToken.
			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/recording/wsdl/CreateTrack"

  - Addressing input action: "http://www.onvif.org/ver10/recording/wsdl/CreateTrack"

  - Addressing output action: "http://www.onvif.org/ver10/recording/wsdl/CreateTrackResponse"
*/

//gsoap trc  service method-protocol:	CreateTrack SOAP
//gsoap trc  service method-style:	CreateTrack document
//gsoap trc  service method-encoding:	CreateTrack literal
//gsoap trc  service method-input-action:	CreateTrack http://www.onvif.org/ver10/recording/wsdl/CreateTrack
//gsoap trc  service method-output-action:	CreateTrack http://www.onvif.org/ver10/recording/wsdl/CreateTrackResponse
int __trc__CreateTrack(
    _trc__CreateTrack*                  trc__CreateTrack,	///< Input parameter
    _trc__CreateTrackResponse          &trc__CreateTrackResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trc__DeleteTrack                                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__trc__DeleteTrack" of service binding "RecordingBinding".
DeleteTrack shall remove a track from a recording. All the data in the track shall
be deleted.<br/>
				This method is optional. It shall be available if
the Recording/DynamicTracks capability is
				TRUE.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/recording/wsdl/DeleteTrack"

  - Addressing input action: "http://www.onvif.org/ver10/recording/wsdl/DeleteTrack"

  - Addressing output action: "http://www.onvif.org/ver10/recording/wsdl/DeleteTrackResponse"
*/

//gsoap trc  service method-protocol:	DeleteTrack SOAP
//gsoap trc  service method-style:	DeleteTrack document
//gsoap trc  service method-encoding:	DeleteTrack literal
//gsoap trc  service method-input-action:	DeleteTrack http://www.onvif.org/ver10/recording/wsdl/DeleteTrack
//gsoap trc  service method-output-action:	DeleteTrack http://www.onvif.org/ver10/recording/wsdl/DeleteTrackResponse
int __trc__DeleteTrack(
    _trc__DeleteTrack*                  trc__DeleteTrack,	///< Input parameter
    _trc__DeleteTrackResponse          &trc__DeleteTrackResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trc__GetTrackConfiguration                                             *
 *                                                                            *
\******************************************************************************/


/** Operation "__trc__GetTrackConfiguration" of service binding "RecordingBinding".
GetTrackConfiguration shall retrieve the configuration for a specific track.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/recording/wsdl/GetTrackConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/recording/wsdl/GetTrackConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/recording/wsdl/GetTrackConfigurationResponse"
*/

//gsoap trc  service method-protocol:	GetTrackConfiguration SOAP
//gsoap trc  service method-style:	GetTrackConfiguration document
//gsoap trc  service method-encoding:	GetTrackConfiguration literal
//gsoap trc  service method-input-action:	GetTrackConfiguration http://www.onvif.org/ver10/recording/wsdl/GetTrackConfiguration
//gsoap trc  service method-output-action:	GetTrackConfiguration http://www.onvif.org/ver10/recording/wsdl/GetTrackConfigurationResponse
int __trc__GetTrackConfiguration(
    _trc__GetTrackConfiguration*        trc__GetTrackConfiguration,	///< Input parameter
    _trc__GetTrackConfigurationResponse&trc__GetTrackConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trc__SetTrackConfiguration                                             *
 *                                                                            *
\******************************************************************************/


/** Operation "__trc__SetTrackConfiguration" of service binding "RecordingBinding".
SetTrackConfiguration shall change the configuration of a track.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/recording/wsdl/SetTrackConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/recording/wsdl/SetTrackConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/recording/wsdl/SetTrackConfigurationResponse"
*/

//gsoap trc  service method-protocol:	SetTrackConfiguration SOAP
//gsoap trc  service method-style:	SetTrackConfiguration document
//gsoap trc  service method-encoding:	SetTrackConfiguration literal
//gsoap trc  service method-input-action:	SetTrackConfiguration http://www.onvif.org/ver10/recording/wsdl/SetTrackConfiguration
//gsoap trc  service method-output-action:	SetTrackConfiguration http://www.onvif.org/ver10/recording/wsdl/SetTrackConfigurationResponse
int __trc__SetTrackConfiguration(
    _trc__SetTrackConfiguration*        trc__SetTrackConfiguration,	///< Input parameter
    _trc__SetTrackConfigurationResponse&trc__SetTrackConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trc__CreateRecordingJob                                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__trc__CreateRecordingJob" of service binding "RecordingBinding".
CreateRecordingJob shall create a new recording job.<br/>
				The JobConfiguration returned from CreateRecordingJob
shall be identical to the
				JobConfiguration passed into CreateRecordingJob,
except for the ReceiverToken and the
				AutoCreateReceiver. In the returned structure, the
ReceiverToken shall be present and valid
				and the AutoCreateReceiver field shall be omitted.
			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/recording/wsdl/CreateRecordingJob"

  - Addressing input action: "http://www.onvif.org/ver10/recording/wsdl/CreateRecordingJob"

  - Addressing output action: "http://www.onvif.org/ver10/recording/wsdl/CreateRecordingJobResponse"
*/

//gsoap trc  service method-protocol:	CreateRecordingJob SOAP
//gsoap trc  service method-style:	CreateRecordingJob document
//gsoap trc  service method-encoding:	CreateRecordingJob literal
//gsoap trc  service method-input-action:	CreateRecordingJob http://www.onvif.org/ver10/recording/wsdl/CreateRecordingJob
//gsoap trc  service method-output-action:	CreateRecordingJob http://www.onvif.org/ver10/recording/wsdl/CreateRecordingJobResponse
int __trc__CreateRecordingJob(
    _trc__CreateRecordingJob*           trc__CreateRecordingJob,	///< Input parameter
    _trc__CreateRecordingJobResponse   &trc__CreateRecordingJobResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trc__DeleteRecordingJob                                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__trc__DeleteRecordingJob" of service binding "RecordingBinding".
DeleteRecordingJob removes a recording job. It shall also implicitly delete all
the receiver
				objects associated with the recording job that are
automatically created using the
				AutoCreateReceiver field of the recording job configuration
structure and are not used in any
				other recording job.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/recording/wsdl/DeleteRecordingJob"

  - Addressing input action: "http://www.onvif.org/ver10/recording/wsdl/DeleteRecordingJob"

  - Addressing output action: "http://www.onvif.org/ver10/recording/wsdl/DeleteRecordingJobResponse"
*/

//gsoap trc  service method-protocol:	DeleteRecordingJob SOAP
//gsoap trc  service method-style:	DeleteRecordingJob document
//gsoap trc  service method-encoding:	DeleteRecordingJob literal
//gsoap trc  service method-input-action:	DeleteRecordingJob http://www.onvif.org/ver10/recording/wsdl/DeleteRecordingJob
//gsoap trc  service method-output-action:	DeleteRecordingJob http://www.onvif.org/ver10/recording/wsdl/DeleteRecordingJobResponse
int __trc__DeleteRecordingJob(
    _trc__DeleteRecordingJob*           trc__DeleteRecordingJob,	///< Input parameter
    _trc__DeleteRecordingJobResponse   &trc__DeleteRecordingJobResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trc__GetRecordingJobs                                                  *
 *                                                                            *
\******************************************************************************/


/** Operation "__trc__GetRecordingJobs" of service binding "RecordingBinding".
GetRecordingJobs shall return a list of all the recording jobs in the device.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/recording/wsdl/GetRecordingJobs"

  - Addressing input action: "http://www.onvif.org/ver10/recording/wsdl/GetRecordingJobs"

  - Addressing output action: "http://www.onvif.org/ver10/recording/wsdl/GetRecordingJobsResponse"
*/

//gsoap trc  service method-protocol:	GetRecordingJobs SOAP
//gsoap trc  service method-style:	GetRecordingJobs document
//gsoap trc  service method-encoding:	GetRecordingJobs literal
//gsoap trc  service method-input-action:	GetRecordingJobs http://www.onvif.org/ver10/recording/wsdl/GetRecordingJobs
//gsoap trc  service method-output-action:	GetRecordingJobs http://www.onvif.org/ver10/recording/wsdl/GetRecordingJobsResponse
int __trc__GetRecordingJobs(
    _trc__GetRecordingJobs*             trc__GetRecordingJobs,	///< Input parameter
    _trc__GetRecordingJobsResponse     &trc__GetRecordingJobsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trc__SetRecordingJobConfiguration                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__trc__SetRecordingJobConfiguration" of service binding "RecordingBinding".
SetRecordingJobConfiguration shall change the configuration for a recording job.<br/>
				SetRecordingJobConfiguration shall implicitly delete
any receiver objects that were created
				automatically if they are no longer used as a result
of changing the recording job configuration.
			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/recording/wsdl/SetRecordingJobConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/recording/wsdl/SetRecordingJobConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/recording/wsdl/SetRecordingJobConfigurationResponse"
*/

//gsoap trc  service method-protocol:	SetRecordingJobConfiguration SOAP
//gsoap trc  service method-style:	SetRecordingJobConfiguration document
//gsoap trc  service method-encoding:	SetRecordingJobConfiguration literal
//gsoap trc  service method-input-action:	SetRecordingJobConfiguration http://www.onvif.org/ver10/recording/wsdl/SetRecordingJobConfiguration
//gsoap trc  service method-output-action:	SetRecordingJobConfiguration http://www.onvif.org/ver10/recording/wsdl/SetRecordingJobConfigurationResponse
int __trc__SetRecordingJobConfiguration(
    _trc__SetRecordingJobConfiguration* trc__SetRecordingJobConfiguration,	///< Input parameter
    _trc__SetRecordingJobConfigurationResponse&trc__SetRecordingJobConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trc__GetRecordingJobConfiguration                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__trc__GetRecordingJobConfiguration" of service binding "RecordingBinding".
GetRecordingJobConfiguration shall return the current configuration for a recording
job.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/recording/wsdl/GetRecordingJobConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/recording/wsdl/GetRecordingJobConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/recording/wsdl/GetRecordingJobConfigurationResponse"
*/

//gsoap trc  service method-protocol:	GetRecordingJobConfiguration SOAP
//gsoap trc  service method-style:	GetRecordingJobConfiguration document
//gsoap trc  service method-encoding:	GetRecordingJobConfiguration literal
//gsoap trc  service method-input-action:	GetRecordingJobConfiguration http://www.onvif.org/ver10/recording/wsdl/GetRecordingJobConfiguration
//gsoap trc  service method-output-action:	GetRecordingJobConfiguration http://www.onvif.org/ver10/recording/wsdl/GetRecordingJobConfigurationResponse
int __trc__GetRecordingJobConfiguration(
    _trc__GetRecordingJobConfiguration* trc__GetRecordingJobConfiguration,	///< Input parameter
    _trc__GetRecordingJobConfigurationResponse&trc__GetRecordingJobConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trc__SetRecordingJobMode                                               *
 *                                                                            *
\******************************************************************************/


/** Operation "__trc__SetRecordingJobMode" of service binding "RecordingBinding".
SetRecordingJobMode shall change the mode of the recording job. Using this method
shall be
				equivalent to retrieving the recording job configuration,
and writing it back with a different
				mode.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/recording/wsdl/SetRecordingJobMode"

  - Addressing input action: "http://www.onvif.org/ver10/recording/wsdl/SetRecordingJobMode"

  - Addressing output action: "http://www.onvif.org/ver10/recording/wsdl/SetRecordingJobModeResponse"
*/

//gsoap trc  service method-protocol:	SetRecordingJobMode SOAP
//gsoap trc  service method-style:	SetRecordingJobMode document
//gsoap trc  service method-encoding:	SetRecordingJobMode literal
//gsoap trc  service method-input-action:	SetRecordingJobMode http://www.onvif.org/ver10/recording/wsdl/SetRecordingJobMode
//gsoap trc  service method-output-action:	SetRecordingJobMode http://www.onvif.org/ver10/recording/wsdl/SetRecordingJobModeResponse
int __trc__SetRecordingJobMode(
    _trc__SetRecordingJobMode*          trc__SetRecordingJobMode,	///< Input parameter
    _trc__SetRecordingJobModeResponse  &trc__SetRecordingJobModeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trc__GetRecordingJobState                                              *
 *                                                                            *
\******************************************************************************/


/** Operation "__trc__GetRecordingJobState" of service binding "RecordingBinding".
GetRecordingJobState returns the state of a recording job. It includes an aggregated
state,
				and state for each track of the recording job.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/recording/wsdl/GetRecordingJobState"

  - Addressing input action: "http://www.onvif.org/ver10/recording/wsdl/GetRecordingJobState"

  - Addressing output action: "http://www.onvif.org/ver10/recording/wsdl/GetRecordingJobStateResponse"
*/

//gsoap trc  service method-protocol:	GetRecordingJobState SOAP
//gsoap trc  service method-style:	GetRecordingJobState document
//gsoap trc  service method-encoding:	GetRecordingJobState literal
//gsoap trc  service method-input-action:	GetRecordingJobState http://www.onvif.org/ver10/recording/wsdl/GetRecordingJobState
//gsoap trc  service method-output-action:	GetRecordingJobState http://www.onvif.org/ver10/recording/wsdl/GetRecordingJobStateResponse
int __trc__GetRecordingJobState(
    _trc__GetRecordingJobState*         trc__GetRecordingJobState,	///< Input parameter
    _trc__GetRecordingJobStateResponse &trc__GetRecordingJobStateResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trc__ExportRecordedData                                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__trc__ExportRecordedData" of service binding "RecordingBinding".
			Exports the selected recordings (from existing recorded
data) to the given storage target based on the requested file format. 
			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/recording/wsdl/ExportRecordedData"

  - Addressing input action: "http://www.onvif.org/ver10/recording/wsdl/ExportRecordedData"

  - Addressing output action: "http://www.onvif.org/ver10/recording/wsdl/ExportRecordedDataResponse"
*/

//gsoap trc  service method-protocol:	ExportRecordedData SOAP
//gsoap trc  service method-style:	ExportRecordedData document
//gsoap trc  service method-encoding:	ExportRecordedData literal
//gsoap trc  service method-input-action:	ExportRecordedData http://www.onvif.org/ver10/recording/wsdl/ExportRecordedData
//gsoap trc  service method-output-action:	ExportRecordedData http://www.onvif.org/ver10/recording/wsdl/ExportRecordedDataResponse
int __trc__ExportRecordedData(
    _trc__ExportRecordedData*           trc__ExportRecordedData,	///< Input parameter
    _trc__ExportRecordedDataResponse   &trc__ExportRecordedDataResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trc__StopExportRecordedData                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__trc__StopExportRecordedData" of service binding "RecordingBinding".
			Stops the selected ExportRecordedData operation. 
			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/recording/wsdl/StopExportRecordedData"

  - Addressing input action: "http://www.onvif.org/ver10/recording/wsdl/StopExportRecordedData"

  - Addressing output action: "http://www.onvif.org/ver10/recording/wsdl/StopExportRecordedDataResponse"
*/

//gsoap trc  service method-protocol:	StopExportRecordedData SOAP
//gsoap trc  service method-style:	StopExportRecordedData document
//gsoap trc  service method-encoding:	StopExportRecordedData literal
//gsoap trc  service method-input-action:	StopExportRecordedData http://www.onvif.org/ver10/recording/wsdl/StopExportRecordedData
//gsoap trc  service method-output-action:	StopExportRecordedData http://www.onvif.org/ver10/recording/wsdl/StopExportRecordedDataResponse
int __trc__StopExportRecordedData(
    _trc__StopExportRecordedData*       trc__StopExportRecordedData,	///< Input parameter
    _trc__StopExportRecordedDataResponse&trc__StopExportRecordedDataResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trc__GetExportRecordedDataState                                        *
 *                                                                            *
\******************************************************************************/


/** Operation "__trc__GetExportRecordedDataState" of service binding "RecordingBinding".
			Retrieves the status of selected ExportRecordedData operation.

			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/recording/wsdl/GetExportRecordedDataState"

  - Addressing input action: "http://www.onvif.org/ver10/recording/wsdl/GetExportRecordedDataState"

  - Addressing output action: "http://www.onvif.org/ver10/recording/wsdl/GetExportRecordedDataStateResponse"
*/

//gsoap trc  service method-protocol:	GetExportRecordedDataState SOAP
//gsoap trc  service method-style:	GetExportRecordedDataState document
//gsoap trc  service method-encoding:	GetExportRecordedDataState literal
//gsoap trc  service method-input-action:	GetExportRecordedDataState http://www.onvif.org/ver10/recording/wsdl/GetExportRecordedDataState
//gsoap trc  service method-output-action:	GetExportRecordedDataState http://www.onvif.org/ver10/recording/wsdl/GetExportRecordedDataStateResponse
int __trc__GetExportRecordedDataState(
    _trc__GetExportRecordedDataState*   trc__GetExportRecordedDataState,	///< Input parameter
    _trc__GetExportRecordedDataStateResponse&trc__GetExportRecordedDataStateResponse	///< Output parameter
);

/** @page RecordingBinding Binding "RecordingBinding"

@section RecordingBinding_policy_enablers Policy Enablers of Binding "RecordingBinding"

None specified.

*/

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   ReplayBinding                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trp__GetServiceCapabilities                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__trp__GetServiceCapabilities" of service binding "ReplayBinding".
Returns the capabilities of the replay service. The result is returned in a typed
answer.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/replay/wsdl/GetServiceCapabilities"

  - Addressing input action: "http://www.onvif.org/ver10/replay/wsdl/GetServiceCapabilities"

  - Addressing output action: "http://www.onvif.org/ver10/replay/wsdl/GetServiceCapabilitiesResponse"
*/

//gsoap trp  service method-protocol:	GetServiceCapabilities SOAP
//gsoap trp  service method-style:	GetServiceCapabilities document
//gsoap trp  service method-encoding:	GetServiceCapabilities literal
//gsoap trp  service method-input-action:	GetServiceCapabilities http://www.onvif.org/ver10/replay/wsdl/GetServiceCapabilities
//gsoap trp  service method-output-action:	GetServiceCapabilities http://www.onvif.org/ver10/replay/wsdl/GetServiceCapabilitiesResponse
int __trp__GetServiceCapabilities(
    _trp__GetServiceCapabilities*       trp__GetServiceCapabilities,	///< Input parameter
    _trp__GetServiceCapabilitiesResponse&trp__GetServiceCapabilitiesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trp__GetReplayUri                                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__trp__GetReplayUri" of service binding "ReplayBinding".
				Requests a URI that can be used to initiate playback
of a recorded stream
				using RTSP as the control protocol. The URI is valid
only as it is
				specified in the response.
				This operation is mandatory.
			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/replay/wsdl/GetReplayUri"

  - Addressing input action: "http://www.onvif.org/ver10/replay/wsdl/GetReplayUri"

  - Addressing output action: "http://www.onvif.org/ver10/replay/wsdl/GetReplayUriResponse"
*/

//gsoap trp  service method-protocol:	GetReplayUri SOAP
//gsoap trp  service method-style:	GetReplayUri document
//gsoap trp  service method-encoding:	GetReplayUri literal
//gsoap trp  service method-input-action:	GetReplayUri http://www.onvif.org/ver10/replay/wsdl/GetReplayUri
//gsoap trp  service method-output-action:	GetReplayUri http://www.onvif.org/ver10/replay/wsdl/GetReplayUriResponse
int __trp__GetReplayUri(
    _trp__GetReplayUri*                 trp__GetReplayUri,	///< Input parameter
    _trp__GetReplayUriResponse         &trp__GetReplayUriResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trp__GetReplayConfiguration                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__trp__GetReplayConfiguration" of service binding "ReplayBinding".
				Returns the current configuration of the replay
service.
				This operation is mandatory.
			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/replay/wsdl/GetReplayConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/replay/wsdl/GetReplayConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/replay/wsdl/GetReplayConfigurationResponse"
*/

//gsoap trp  service method-protocol:	GetReplayConfiguration SOAP
//gsoap trp  service method-style:	GetReplayConfiguration document
//gsoap trp  service method-encoding:	GetReplayConfiguration literal
//gsoap trp  service method-input-action:	GetReplayConfiguration http://www.onvif.org/ver10/replay/wsdl/GetReplayConfiguration
//gsoap trp  service method-output-action:	GetReplayConfiguration http://www.onvif.org/ver10/replay/wsdl/GetReplayConfigurationResponse
int __trp__GetReplayConfiguration(
    _trp__GetReplayConfiguration*       trp__GetReplayConfiguration,	///< Input parameter
    _trp__GetReplayConfigurationResponse&trp__GetReplayConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trp__SetReplayConfiguration                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__trp__SetReplayConfiguration" of service binding "ReplayBinding".
				Changes the current configuration of the replay
service.
				This operation is mandatory.
			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/replay/wsdl/SetReplayConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/replay/wsdl/SetReplayConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/replay/wsdl/SetReplayConfigurationResponse"
*/

//gsoap trp  service method-protocol:	SetReplayConfiguration SOAP
//gsoap trp  service method-style:	SetReplayConfiguration document
//gsoap trp  service method-encoding:	SetReplayConfiguration literal
//gsoap trp  service method-input-action:	SetReplayConfiguration http://www.onvif.org/ver10/replay/wsdl/SetReplayConfiguration
//gsoap trp  service method-output-action:	SetReplayConfiguration http://www.onvif.org/ver10/replay/wsdl/SetReplayConfigurationResponse
int __trp__SetReplayConfiguration(
    _trp__SetReplayConfiguration*       trp__SetReplayConfiguration,	///< Input parameter
    _trp__SetReplayConfigurationResponse&trp__SetReplayConfigurationResponse	///< Output parameter
);

/** @page ReplayBinding Binding "ReplayBinding"

@section ReplayBinding_policy_enablers Policy Enablers of Binding "ReplayBinding"

None specified.

*/

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   MediaBinding                                                             *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetServiceCapabilities                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetServiceCapabilities" of service binding "MediaBinding".
Returns the capabilities of the media service. The result is returned in a typed
answer.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/GetServiceCapabilities"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetServiceCapabilities"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetServiceCapabilitiesResponse"
*/

//gsoap trt  service method-protocol:	GetServiceCapabilities SOAP
//gsoap trt  service method-style:	GetServiceCapabilities document
//gsoap trt  service method-encoding:	GetServiceCapabilities literal
//gsoap trt  service method-input-action:	GetServiceCapabilities http://www.onvif.org/ver10/media/wsdl/GetServiceCapabilities
//gsoap trt  service method-output-action:	GetServiceCapabilities http://www.onvif.org/ver10/media/wsdl/GetServiceCapabilitiesResponse
int __trt__GetServiceCapabilities(
    _trt__GetServiceCapabilities*       trt__GetServiceCapabilities,	///< Input parameter
    _trt__GetServiceCapabilitiesResponse&trt__GetServiceCapabilitiesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetVideoSources                                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetVideoSources" of service binding "MediaBinding".
This command lists all available physical video inputs of the device.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdlGetVideoSources/"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdlGetVideoSources/"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdlGetVideoSources/Response"
*/

//gsoap trt  service method-protocol:	GetVideoSources SOAP
//gsoap trt  service method-style:	GetVideoSources document
//gsoap trt  service method-encoding:	GetVideoSources literal
//gsoap trt  service method-input-action:	GetVideoSources http://www.onvif.org/ver10/media/wsdlGetVideoSources/
//gsoap trt  service method-output-action:	GetVideoSources http://www.onvif.org/ver10/media/wsdlGetVideoSources/Response
int __trt__GetVideoSources(
    _trt__GetVideoSources*              trt__GetVideoSources,	///< Input parameter
    _trt__GetVideoSourcesResponse      &trt__GetVideoSourcesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetAudioSources                                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetAudioSources" of service binding "MediaBinding".
This command lists all available physical audio inputs of the device.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/GetAudioSources"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetAudioSources"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetAudioSourcesResponse"
*/

//gsoap trt  service method-protocol:	GetAudioSources SOAP
//gsoap trt  service method-style:	GetAudioSources document
//gsoap trt  service method-encoding:	GetAudioSources literal
//gsoap trt  service method-input-action:	GetAudioSources http://www.onvif.org/ver10/media/wsdl/GetAudioSources
//gsoap trt  service method-output-action:	GetAudioSources http://www.onvif.org/ver10/media/wsdl/GetAudioSourcesResponse
int __trt__GetAudioSources(
    _trt__GetAudioSources*              trt__GetAudioSources,	///< Input parameter
    _trt__GetAudioSourcesResponse      &trt__GetAudioSourcesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetAudioOutputs                                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetAudioOutputs" of service binding "MediaBinding".
This command lists all available physical audio outputs of the device.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/GetAudioOutputs"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetAudioOutputs"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetAudioOutputsResponse"
*/

//gsoap trt  service method-protocol:	GetAudioOutputs SOAP
//gsoap trt  service method-style:	GetAudioOutputs document
//gsoap trt  service method-encoding:	GetAudioOutputs literal
//gsoap trt  service method-input-action:	GetAudioOutputs http://www.onvif.org/ver10/media/wsdl/GetAudioOutputs
//gsoap trt  service method-output-action:	GetAudioOutputs http://www.onvif.org/ver10/media/wsdl/GetAudioOutputsResponse
int __trt__GetAudioOutputs(
    _trt__GetAudioOutputs*              trt__GetAudioOutputs,	///< Input parameter
    _trt__GetAudioOutputsResponse      &trt__GetAudioOutputsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__CreateProfile                                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__CreateProfile" of service binding "MediaBinding".
This operation creates a new empty media profile. The media profile shall be created
in the
device and shall be persistent (remain after reboot). A created profile shall be
deletable and a device shall set the fixed attribute to false in the
returned Profile.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/CreateProfile"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/CreateProfile"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/CreateProfileResponse"
*/

//gsoap trt  service method-protocol:	CreateProfile SOAP
//gsoap trt  service method-style:	CreateProfile document
//gsoap trt  service method-encoding:	CreateProfile literal
//gsoap trt  service method-input-action:	CreateProfile http://www.onvif.org/ver10/media/wsdl/CreateProfile
//gsoap trt  service method-output-action:	CreateProfile http://www.onvif.org/ver10/media/wsdl/CreateProfileResponse
int __trt__CreateProfile(
    _trt__CreateProfile*                trt__CreateProfile,	///< Input parameter
    _trt__CreateProfileResponse        &trt__CreateProfileResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetProfile                                                        *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetProfile" of service binding "MediaBinding".
If the profile token is already known, a profile can be fetched through the GetProfile
command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdlGetProfile/"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdlGetProfile/"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdlGetProfile/Response"
*/

//gsoap trt  service method-protocol:	GetProfile SOAP
//gsoap trt  service method-style:	GetProfile document
//gsoap trt  service method-encoding:	GetProfile literal
//gsoap trt  service method-input-action:	GetProfile http://www.onvif.org/ver10/media/wsdlGetProfile/
//gsoap trt  service method-output-action:	GetProfile http://www.onvif.org/ver10/media/wsdlGetProfile/Response
int __trt__GetProfile(
    _trt__GetProfile*                   trt__GetProfile,	///< Input parameter
    _trt__GetProfileResponse           &trt__GetProfileResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetProfiles                                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetProfiles" of service binding "MediaBinding".
Any endpoint can ask for the existing media profiles of a device using the GetProfiles
command. Pre-configured or dynamically configured profiles can be retrieved using
this
command. This command lists all configured profiles in a device. The client does
not need to
know the media profile in order to use the command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/GetProfiles"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetProfiles"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetProfilesResponse"
*/

//gsoap trt  service method-protocol:	GetProfiles SOAP
//gsoap trt  service method-style:	GetProfiles document
//gsoap trt  service method-encoding:	GetProfiles literal
//gsoap trt  service method-input-action:	GetProfiles http://www.onvif.org/ver10/media/wsdl/GetProfiles
//gsoap trt  service method-output-action:	GetProfiles http://www.onvif.org/ver10/media/wsdl/GetProfilesResponse
int __trt__GetProfiles(
    _trt__GetProfiles*                  trt__GetProfiles,	///< Input parameter
    _trt__GetProfilesResponse          &trt__GetProfilesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__AddVideoEncoderConfiguration                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__AddVideoEncoderConfiguration" of service binding "MediaBinding".
This operation adds a VideoEncoderConfiguration to an existing media profile. If
a
configuration exists in the media profile, it will be replaced. The change shall
be persistent. A device shall
support adding a compatible VideoEncoderConfiguration to a Profile containing a
VideoSourceConfiguration and shall
support streaming video data of such a profile.
			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/AddVideoEncoderConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/AddVideoEncoderConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/AddVideoEncoderConfigurationResponse"
*/

//gsoap trt  service method-protocol:	AddVideoEncoderConfiguration SOAP
//gsoap trt  service method-style:	AddVideoEncoderConfiguration document
//gsoap trt  service method-encoding:	AddVideoEncoderConfiguration literal
//gsoap trt  service method-input-action:	AddVideoEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/AddVideoEncoderConfiguration
//gsoap trt  service method-output-action:	AddVideoEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/AddVideoEncoderConfigurationResponse
int __trt__AddVideoEncoderConfiguration(
    _trt__AddVideoEncoderConfiguration* trt__AddVideoEncoderConfiguration,	///< Input parameter
    _trt__AddVideoEncoderConfigurationResponse&trt__AddVideoEncoderConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__AddVideoSourceConfiguration                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__AddVideoSourceConfiguration" of service binding "MediaBinding".
This operation adds a VideoSourceConfiguration to an existing media profile. If
such a
configuration exists in the media profile, it will be replaced. The change shall
be persistent.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/AddVideoSourceConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/AddVideoSourceConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/AddVideoSourceConfigurationResponse"
*/

//gsoap trt  service method-protocol:	AddVideoSourceConfiguration SOAP
//gsoap trt  service method-style:	AddVideoSourceConfiguration document
//gsoap trt  service method-encoding:	AddVideoSourceConfiguration literal
//gsoap trt  service method-input-action:	AddVideoSourceConfiguration http://www.onvif.org/ver10/media/wsdl/AddVideoSourceConfiguration
//gsoap trt  service method-output-action:	AddVideoSourceConfiguration http://www.onvif.org/ver10/media/wsdl/AddVideoSourceConfigurationResponse
int __trt__AddVideoSourceConfiguration(
    _trt__AddVideoSourceConfiguration*  trt__AddVideoSourceConfiguration,	///< Input parameter
    _trt__AddVideoSourceConfigurationResponse&trt__AddVideoSourceConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__AddAudioEncoderConfiguration                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__AddAudioEncoderConfiguration" of service binding "MediaBinding".
This operation adds an AudioEncoderConfiguration to an existing media profile. If
a 
configuration exists in the media profile, it will be replaced. The change shall
be persistent. A device shall
support adding a compatible AudioEncoderConfiguration to a profile containing an
AudioSourceConfiguration and shall
support streaming audio data of such a profile.
			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/AddAudioEncoderConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/AddAudioEncoderConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/AddAudioEncoderConfigurationResponse"
*/

//gsoap trt  service method-protocol:	AddAudioEncoderConfiguration SOAP
//gsoap trt  service method-style:	AddAudioEncoderConfiguration document
//gsoap trt  service method-encoding:	AddAudioEncoderConfiguration literal
//gsoap trt  service method-input-action:	AddAudioEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/AddAudioEncoderConfiguration
//gsoap trt  service method-output-action:	AddAudioEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/AddAudioEncoderConfigurationResponse
int __trt__AddAudioEncoderConfiguration(
    _trt__AddAudioEncoderConfiguration* trt__AddAudioEncoderConfiguration,	///< Input parameter
    _trt__AddAudioEncoderConfigurationResponse&trt__AddAudioEncoderConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__AddAudioSourceConfiguration                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__AddAudioSourceConfiguration" of service binding "MediaBinding".
This operation adds an AudioSourceConfiguration to an existing media profile. If
a
configuration exists in the media profile, it will be replaced. The change shall
be persistent.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/AddAudioSourceConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/AddAudioSourceConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/AddAudioSourceConfigurationResponse"
*/

//gsoap trt  service method-protocol:	AddAudioSourceConfiguration SOAP
//gsoap trt  service method-style:	AddAudioSourceConfiguration document
//gsoap trt  service method-encoding:	AddAudioSourceConfiguration literal
//gsoap trt  service method-input-action:	AddAudioSourceConfiguration http://www.onvif.org/ver10/media/wsdl/AddAudioSourceConfiguration
//gsoap trt  service method-output-action:	AddAudioSourceConfiguration http://www.onvif.org/ver10/media/wsdl/AddAudioSourceConfigurationResponse
int __trt__AddAudioSourceConfiguration(
    _trt__AddAudioSourceConfiguration*  trt__AddAudioSourceConfiguration,	///< Input parameter
    _trt__AddAudioSourceConfigurationResponse&trt__AddAudioSourceConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__AddPTZConfiguration                                               *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__AddPTZConfiguration" of service binding "MediaBinding".
This operation adds a PTZConfiguration to an existing media profile. If a configuration
exists
in the media profile, it will be replaced. The change shall be persistent. Adding
a PTZConfiguration to a media profile means that streams using that media profile
can
contain PTZ status (in the metadata), and that the media profile can be used for
controlling
PTZ movement.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/AddPTZConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/AddPTZConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/AddPTZConfigurationResponse"
*/

//gsoap trt  service method-protocol:	AddPTZConfiguration SOAP
//gsoap trt  service method-style:	AddPTZConfiguration document
//gsoap trt  service method-encoding:	AddPTZConfiguration literal
//gsoap trt  service method-input-action:	AddPTZConfiguration http://www.onvif.org/ver10/media/wsdl/AddPTZConfiguration
//gsoap trt  service method-output-action:	AddPTZConfiguration http://www.onvif.org/ver10/media/wsdl/AddPTZConfigurationResponse
int __trt__AddPTZConfiguration(
    _trt__AddPTZConfiguration*          trt__AddPTZConfiguration,	///< Input parameter
    _trt__AddPTZConfigurationResponse  &trt__AddPTZConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__AddVideoAnalyticsConfiguration                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__AddVideoAnalyticsConfiguration" of service binding "MediaBinding".
This operation adds a VideoAnalytics configuration to an existing media profile.
If a
configuration exists in the media profile, it will be replaced. The change shall
be persistent. Adding a VideoAnalyticsConfiguration to a media profile means that
streams using that media
profile can contain video analytics data (in the metadata) as defined by the submitted
configuration reference. A profile containing only a video analytics configuration
but no video source configuration is incomplete. Therefore, a client should first
add a video source configuration to a profile before adding a video analytics configuration.
The device can deny adding of a video analytics
configuration before a video source configuration.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/AddVideoAnalyticsConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/AddVideoAnalyticsConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/AddVideoAnalyticsConfigurationResponse"
*/

//gsoap trt  service method-protocol:	AddVideoAnalyticsConfiguration SOAP
//gsoap trt  service method-style:	AddVideoAnalyticsConfiguration document
//gsoap trt  service method-encoding:	AddVideoAnalyticsConfiguration literal
//gsoap trt  service method-input-action:	AddVideoAnalyticsConfiguration http://www.onvif.org/ver10/media/wsdl/AddVideoAnalyticsConfiguration
//gsoap trt  service method-output-action:	AddVideoAnalyticsConfiguration http://www.onvif.org/ver10/media/wsdl/AddVideoAnalyticsConfigurationResponse
int __trt__AddVideoAnalyticsConfiguration(
    _trt__AddVideoAnalyticsConfiguration* trt__AddVideoAnalyticsConfiguration,	///< Input parameter
    _trt__AddVideoAnalyticsConfigurationResponse&trt__AddVideoAnalyticsConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__AddMetadataConfiguration                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__AddMetadataConfiguration" of service binding "MediaBinding".
This operation adds a Metadata configuration to an existing media profile. If a
configuration exists in the media profile, it will be replaced. The change shall
be persistent. Adding a MetadataConfiguration to a Profile means that streams using
that profile contain metadata. Metadata can consist of events, PTZ status, and/or
video analytics data.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/AddMetadataConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/AddMetadataConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/AddMetadataConfigurationResponse"
*/

//gsoap trt  service method-protocol:	AddMetadataConfiguration SOAP
//gsoap trt  service method-style:	AddMetadataConfiguration document
//gsoap trt  service method-encoding:	AddMetadataConfiguration literal
//gsoap trt  service method-input-action:	AddMetadataConfiguration http://www.onvif.org/ver10/media/wsdl/AddMetadataConfiguration
//gsoap trt  service method-output-action:	AddMetadataConfiguration http://www.onvif.org/ver10/media/wsdl/AddMetadataConfigurationResponse
int __trt__AddMetadataConfiguration(
    _trt__AddMetadataConfiguration*     trt__AddMetadataConfiguration,	///< Input parameter
    _trt__AddMetadataConfigurationResponse&trt__AddMetadataConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__AddAudioOutputConfiguration                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__AddAudioOutputConfiguration" of service binding "MediaBinding".
This operation adds an AudioOutputConfiguration to an existing media profile. If
a configuration exists in the media profile, it will be replaced. The change shall
be persistent.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/AddAudioOutputConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/AddAudioOutputConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/AddAudioOutputConfigurationResponse"
*/

//gsoap trt  service method-protocol:	AddAudioOutputConfiguration SOAP
//gsoap trt  service method-style:	AddAudioOutputConfiguration document
//gsoap trt  service method-encoding:	AddAudioOutputConfiguration literal
//gsoap trt  service method-input-action:	AddAudioOutputConfiguration http://www.onvif.org/ver10/media/wsdl/AddAudioOutputConfiguration
//gsoap trt  service method-output-action:	AddAudioOutputConfiguration http://www.onvif.org/ver10/media/wsdl/AddAudioOutputConfigurationResponse
int __trt__AddAudioOutputConfiguration(
    _trt__AddAudioOutputConfiguration*  trt__AddAudioOutputConfiguration,	///< Input parameter
    _trt__AddAudioOutputConfigurationResponse&trt__AddAudioOutputConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__AddAudioDecoderConfiguration                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__AddAudioDecoderConfiguration" of service binding "MediaBinding".
This operation adds an AudioDecoderConfiguration to an existing media profile. If
a configuration exists in the media profile, it shall be replaced. The change shall
be persistent.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/AddAudioDecoderConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/AddAudioDecoderConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/AddAudioDecoderConfigurationResponse"
*/

//gsoap trt  service method-protocol:	AddAudioDecoderConfiguration SOAP
//gsoap trt  service method-style:	AddAudioDecoderConfiguration document
//gsoap trt  service method-encoding:	AddAudioDecoderConfiguration literal
//gsoap trt  service method-input-action:	AddAudioDecoderConfiguration http://www.onvif.org/ver10/media/wsdl/AddAudioDecoderConfiguration
//gsoap trt  service method-output-action:	AddAudioDecoderConfiguration http://www.onvif.org/ver10/media/wsdl/AddAudioDecoderConfigurationResponse
int __trt__AddAudioDecoderConfiguration(
    _trt__AddAudioDecoderConfiguration* trt__AddAudioDecoderConfiguration,	///< Input parameter
    _trt__AddAudioDecoderConfigurationResponse&trt__AddAudioDecoderConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__RemoveVideoEncoderConfiguration                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__RemoveVideoEncoderConfiguration" of service binding "MediaBinding".
This operation removes a VideoEncoderConfiguration from an existing media profile.
If the
media profile does not contain a VideoEncoderConfiguration, the operation has no
effect. The removal shall be persistent.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/RemoveVideoEncoderConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/RemoveVideoEncoderConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/RemoveVideoEncoderConfigurationResponse"
*/

//gsoap trt  service method-protocol:	RemoveVideoEncoderConfiguration SOAP
//gsoap trt  service method-style:	RemoveVideoEncoderConfiguration document
//gsoap trt  service method-encoding:	RemoveVideoEncoderConfiguration literal
//gsoap trt  service method-input-action:	RemoveVideoEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/RemoveVideoEncoderConfiguration
//gsoap trt  service method-output-action:	RemoveVideoEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/RemoveVideoEncoderConfigurationResponse
int __trt__RemoveVideoEncoderConfiguration(
    _trt__RemoveVideoEncoderConfiguration* trt__RemoveVideoEncoderConfiguration,	///< Input parameter
    _trt__RemoveVideoEncoderConfigurationResponse&trt__RemoveVideoEncoderConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__RemoveVideoSourceConfiguration                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__RemoveVideoSourceConfiguration" of service binding "MediaBinding".
This operation removes a VideoSourceConfiguration from an existing media profile.
If the
media profile does not contain a VideoSourceConfiguration, the operation has no
effect. The removal shall be persistent. Video source configurations should only
be removed after removing a
VideoEncoderConfiguration from the media profile.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/RemoveVideoSourceConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/RemoveVideoSourceConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/RemoveVideoSourceConfigurationResponse"
*/

//gsoap trt  service method-protocol:	RemoveVideoSourceConfiguration SOAP
//gsoap trt  service method-style:	RemoveVideoSourceConfiguration document
//gsoap trt  service method-encoding:	RemoveVideoSourceConfiguration literal
//gsoap trt  service method-input-action:	RemoveVideoSourceConfiguration http://www.onvif.org/ver10/media/wsdl/RemoveVideoSourceConfiguration
//gsoap trt  service method-output-action:	RemoveVideoSourceConfiguration http://www.onvif.org/ver10/media/wsdl/RemoveVideoSourceConfigurationResponse
int __trt__RemoveVideoSourceConfiguration(
    _trt__RemoveVideoSourceConfiguration* trt__RemoveVideoSourceConfiguration,	///< Input parameter
    _trt__RemoveVideoSourceConfigurationResponse&trt__RemoveVideoSourceConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__RemoveAudioEncoderConfiguration                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__RemoveAudioEncoderConfiguration" of service binding "MediaBinding".
This operation removes an AudioEncoderConfiguration from an existing media profile.
If the
media profile does not contain an AudioEncoderConfiguration, the operation has
no effect.
The removal shall be persistent.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/RemoveAudioEncoderConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/RemoveAudioEncoderConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/RemoveAudioEncoderConfigurationResponse"
*/

//gsoap trt  service method-protocol:	RemoveAudioEncoderConfiguration SOAP
//gsoap trt  service method-style:	RemoveAudioEncoderConfiguration document
//gsoap trt  service method-encoding:	RemoveAudioEncoderConfiguration literal
//gsoap trt  service method-input-action:	RemoveAudioEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/RemoveAudioEncoderConfiguration
//gsoap trt  service method-output-action:	RemoveAudioEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/RemoveAudioEncoderConfigurationResponse
int __trt__RemoveAudioEncoderConfiguration(
    _trt__RemoveAudioEncoderConfiguration* trt__RemoveAudioEncoderConfiguration,	///< Input parameter
    _trt__RemoveAudioEncoderConfigurationResponse&trt__RemoveAudioEncoderConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__RemoveAudioSourceConfiguration                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__RemoveAudioSourceConfiguration" of service binding "MediaBinding".
This operation removes an AudioSourceConfiguration from an existing media profile.
If the
media profile does not contain an AudioSourceConfiguration, the operation has no
effect. The
removal shall be persistent. Audio source configurations should only be removed
after removing an
AudioEncoderConfiguration from the media profile.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/RemoveAudioSourceConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/RemoveAudioSourceConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/RemoveAudioSourceConfigurationResponse"
*/

//gsoap trt  service method-protocol:	RemoveAudioSourceConfiguration SOAP
//gsoap trt  service method-style:	RemoveAudioSourceConfiguration document
//gsoap trt  service method-encoding:	RemoveAudioSourceConfiguration literal
//gsoap trt  service method-input-action:	RemoveAudioSourceConfiguration http://www.onvif.org/ver10/media/wsdl/RemoveAudioSourceConfiguration
//gsoap trt  service method-output-action:	RemoveAudioSourceConfiguration http://www.onvif.org/ver10/media/wsdl/RemoveAudioSourceConfigurationResponse
int __trt__RemoveAudioSourceConfiguration(
    _trt__RemoveAudioSourceConfiguration* trt__RemoveAudioSourceConfiguration,	///< Input parameter
    _trt__RemoveAudioSourceConfigurationResponse&trt__RemoveAudioSourceConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__RemovePTZConfiguration                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__RemovePTZConfiguration" of service binding "MediaBinding".
This operation removes a PTZConfiguration from an existing media profile. If the
media profile
does not contain a PTZConfiguration, the operation has no effect. The removal shall
be persistent.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/RemovePTZConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/RemovePTZConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/RemovePTZConfigurationResponse"
*/

//gsoap trt  service method-protocol:	RemovePTZConfiguration SOAP
//gsoap trt  service method-style:	RemovePTZConfiguration document
//gsoap trt  service method-encoding:	RemovePTZConfiguration literal
//gsoap trt  service method-input-action:	RemovePTZConfiguration http://www.onvif.org/ver10/media/wsdl/RemovePTZConfiguration
//gsoap trt  service method-output-action:	RemovePTZConfiguration http://www.onvif.org/ver10/media/wsdl/RemovePTZConfigurationResponse
int __trt__RemovePTZConfiguration(
    _trt__RemovePTZConfiguration*       trt__RemovePTZConfiguration,	///< Input parameter
    _trt__RemovePTZConfigurationResponse&trt__RemovePTZConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__RemoveVideoAnalyticsConfiguration                                 *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__RemoveVideoAnalyticsConfiguration" of service binding "MediaBinding".
This operation removes a VideoAnalyticsConfiguration from an existing media profile.
If the media profile does not contain a VideoAnalyticsConfiguration, the operation
has no effect.
The removal shall be persistent.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/RemoveVideoAnalyticsConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/RemoveVideoAnalyticsConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/RemoveVideoAnalyticsConfigurationResponse"
*/

//gsoap trt  service method-protocol:	RemoveVideoAnalyticsConfiguration SOAP
//gsoap trt  service method-style:	RemoveVideoAnalyticsConfiguration document
//gsoap trt  service method-encoding:	RemoveVideoAnalyticsConfiguration literal
//gsoap trt  service method-input-action:	RemoveVideoAnalyticsConfiguration http://www.onvif.org/ver10/media/wsdl/RemoveVideoAnalyticsConfiguration
//gsoap trt  service method-output-action:	RemoveVideoAnalyticsConfiguration http://www.onvif.org/ver10/media/wsdl/RemoveVideoAnalyticsConfigurationResponse
int __trt__RemoveVideoAnalyticsConfiguration(
    _trt__RemoveVideoAnalyticsConfiguration* trt__RemoveVideoAnalyticsConfiguration,	///< Input parameter
    _trt__RemoveVideoAnalyticsConfigurationResponse&trt__RemoveVideoAnalyticsConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__RemoveMetadataConfiguration                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__RemoveMetadataConfiguration" of service binding "MediaBinding".
This operation removes a MetadataConfiguration from an existing media profile. If
the media profile does not contain a MetadataConfiguration, the operation has no
effect. The removal shall be persistent.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/RemoveMetadataConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/RemoveMetadataConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/RemoveMetadataConfigurationResponse"
*/

//gsoap trt  service method-protocol:	RemoveMetadataConfiguration SOAP
//gsoap trt  service method-style:	RemoveMetadataConfiguration document
//gsoap trt  service method-encoding:	RemoveMetadataConfiguration literal
//gsoap trt  service method-input-action:	RemoveMetadataConfiguration http://www.onvif.org/ver10/media/wsdl/RemoveMetadataConfiguration
//gsoap trt  service method-output-action:	RemoveMetadataConfiguration http://www.onvif.org/ver10/media/wsdl/RemoveMetadataConfigurationResponse
int __trt__RemoveMetadataConfiguration(
    _trt__RemoveMetadataConfiguration*  trt__RemoveMetadataConfiguration,	///< Input parameter
    _trt__RemoveMetadataConfigurationResponse&trt__RemoveMetadataConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__RemoveAudioOutputConfiguration                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__RemoveAudioOutputConfiguration" of service binding "MediaBinding".
This operation removes an AudioOutputConfiguration from an existing media profile.
If the media profile does not contain an AudioOutputConfiguration, the operation
has no effect. The removal shall be persistent.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/RemoveAudioOutputConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/RemoveAudioOutputConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/RemoveAudioOutputConfigurationResponse"
*/

//gsoap trt  service method-protocol:	RemoveAudioOutputConfiguration SOAP
//gsoap trt  service method-style:	RemoveAudioOutputConfiguration document
//gsoap trt  service method-encoding:	RemoveAudioOutputConfiguration literal
//gsoap trt  service method-input-action:	RemoveAudioOutputConfiguration http://www.onvif.org/ver10/media/wsdl/RemoveAudioOutputConfiguration
//gsoap trt  service method-output-action:	RemoveAudioOutputConfiguration http://www.onvif.org/ver10/media/wsdl/RemoveAudioOutputConfigurationResponse
int __trt__RemoveAudioOutputConfiguration(
    _trt__RemoveAudioOutputConfiguration* trt__RemoveAudioOutputConfiguration,	///< Input parameter
    _trt__RemoveAudioOutputConfigurationResponse&trt__RemoveAudioOutputConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__RemoveAudioDecoderConfiguration                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__RemoveAudioDecoderConfiguration" of service binding "MediaBinding".
This operation removes an AudioDecoderConfiguration from an existing media profile.
If the media profile does not contain an AudioDecoderConfiguration, the operation
has no effect. The removal shall be persistent.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/RemoveAudioDecoderConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/RemoveAudioDecoderConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/RemoveAudioDecoderConfigurationResponse"
*/

//gsoap trt  service method-protocol:	RemoveAudioDecoderConfiguration SOAP
//gsoap trt  service method-style:	RemoveAudioDecoderConfiguration document
//gsoap trt  service method-encoding:	RemoveAudioDecoderConfiguration literal
//gsoap trt  service method-input-action:	RemoveAudioDecoderConfiguration http://www.onvif.org/ver10/media/wsdl/RemoveAudioDecoderConfiguration
//gsoap trt  service method-output-action:	RemoveAudioDecoderConfiguration http://www.onvif.org/ver10/media/wsdl/RemoveAudioDecoderConfigurationResponse
int __trt__RemoveAudioDecoderConfiguration(
    _trt__RemoveAudioDecoderConfiguration* trt__RemoveAudioDecoderConfiguration,	///< Input parameter
    _trt__RemoveAudioDecoderConfigurationResponse&trt__RemoveAudioDecoderConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__DeleteProfile                                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__DeleteProfile" of service binding "MediaBinding".
This operation deletes a profile. This change shall always be persistent. Deletion
of a profile is only possible for non-fixed profiles

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/DeleteProfile"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/DeleteProfile"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/DeleteProfileResponse"
*/

//gsoap trt  service method-protocol:	DeleteProfile SOAP
//gsoap trt  service method-style:	DeleteProfile document
//gsoap trt  service method-encoding:	DeleteProfile literal
//gsoap trt  service method-input-action:	DeleteProfile http://www.onvif.org/ver10/media/wsdl/DeleteProfile
//gsoap trt  service method-output-action:	DeleteProfile http://www.onvif.org/ver10/media/wsdl/DeleteProfileResponse
int __trt__DeleteProfile(
    _trt__DeleteProfile*                trt__DeleteProfile,	///< Input parameter
    _trt__DeleteProfileResponse        &trt__DeleteProfileResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetVideoSourceConfigurations                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetVideoSourceConfigurations" of service binding "MediaBinding".
This operation lists all existing video source configurations for a device. The
client need not know anything about the video source configurations in order to
use the command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/GetVideoSourceConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetVideoSourceConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetVideoSourceConfigurationsResponse"
*/

//gsoap trt  service method-protocol:	GetVideoSourceConfigurations SOAP
//gsoap trt  service method-style:	GetVideoSourceConfigurations document
//gsoap trt  service method-encoding:	GetVideoSourceConfigurations literal
//gsoap trt  service method-input-action:	GetVideoSourceConfigurations http://www.onvif.org/ver10/media/wsdl/GetVideoSourceConfigurations
//gsoap trt  service method-output-action:	GetVideoSourceConfigurations http://www.onvif.org/ver10/media/wsdl/GetVideoSourceConfigurationsResponse
int __trt__GetVideoSourceConfigurations(
    _trt__GetVideoSourceConfigurations* trt__GetVideoSourceConfigurations,	///< Input parameter
    _trt__GetVideoSourceConfigurationsResponse&trt__GetVideoSourceConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetVideoEncoderConfigurations                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetVideoEncoderConfigurations" of service binding "MediaBinding".
This operation lists all existing video encoder configurations of a device. This
command lists all configured video encoder configurations in a device. The client
need not know anything apriori about the video encoder configurations in order
to use the command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfigurationsResponse"
*/

//gsoap trt  service method-protocol:	GetVideoEncoderConfigurations SOAP
//gsoap trt  service method-style:	GetVideoEncoderConfigurations document
//gsoap trt  service method-encoding:	GetVideoEncoderConfigurations literal
//gsoap trt  service method-input-action:	GetVideoEncoderConfigurations http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfigurations
//gsoap trt  service method-output-action:	GetVideoEncoderConfigurations http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfigurationsResponse
int __trt__GetVideoEncoderConfigurations(
    _trt__GetVideoEncoderConfigurations* trt__GetVideoEncoderConfigurations,	///< Input parameter
    _trt__GetVideoEncoderConfigurationsResponse&trt__GetVideoEncoderConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetAudioSourceConfigurations                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetAudioSourceConfigurations" of service binding "MediaBinding".
This operation lists all existing audio source configurations of a device. This
command lists all audio source configurations in a device. The client need not
know anything apriori about the audio source configurations in order to use the
command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdlGetAudioSourceConfigurations/"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdlGetAudioSourceConfigurations/"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdlGetAudioSourceConfigurations/Response"
*/

//gsoap trt  service method-protocol:	GetAudioSourceConfigurations SOAP
//gsoap trt  service method-style:	GetAudioSourceConfigurations document
//gsoap trt  service method-encoding:	GetAudioSourceConfigurations literal
//gsoap trt  service method-input-action:	GetAudioSourceConfigurations http://www.onvif.org/ver10/media/wsdlGetAudioSourceConfigurations/
//gsoap trt  service method-output-action:	GetAudioSourceConfigurations http://www.onvif.org/ver10/media/wsdlGetAudioSourceConfigurations/Response
int __trt__GetAudioSourceConfigurations(
    _trt__GetAudioSourceConfigurations* trt__GetAudioSourceConfigurations,	///< Input parameter
    _trt__GetAudioSourceConfigurationsResponse&trt__GetAudioSourceConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetAudioEncoderConfigurations                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetAudioEncoderConfigurations" of service binding "MediaBinding".
This operation lists all existing device audio encoder configurations. The client
need not know anything apriori about the audio encoder configurations in order
to use the command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfigurationsResponse"
*/

//gsoap trt  service method-protocol:	GetAudioEncoderConfigurations SOAP
//gsoap trt  service method-style:	GetAudioEncoderConfigurations document
//gsoap trt  service method-encoding:	GetAudioEncoderConfigurations literal
//gsoap trt  service method-input-action:	GetAudioEncoderConfigurations http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfigurations
//gsoap trt  service method-output-action:	GetAudioEncoderConfigurations http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfigurationsResponse
int __trt__GetAudioEncoderConfigurations(
    _trt__GetAudioEncoderConfigurations* trt__GetAudioEncoderConfigurations,	///< Input parameter
    _trt__GetAudioEncoderConfigurationsResponse&trt__GetAudioEncoderConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetVideoAnalyticsConfigurations                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetVideoAnalyticsConfigurations" of service binding "MediaBinding".
This operation lists all video analytics configurations of a device. This command
lists all configured video analytics in a device. The client need not know anything
apriori about the video analytics in order to use the command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/GetVideoAnalyticsConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetVideoAnalyticsConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetVideoAnalyticsConfigurationsResponse"
*/

//gsoap trt  service method-protocol:	GetVideoAnalyticsConfigurations SOAP
//gsoap trt  service method-style:	GetVideoAnalyticsConfigurations document
//gsoap trt  service method-encoding:	GetVideoAnalyticsConfigurations literal
//gsoap trt  service method-input-action:	GetVideoAnalyticsConfigurations http://www.onvif.org/ver10/media/wsdl/GetVideoAnalyticsConfigurations
//gsoap trt  service method-output-action:	GetVideoAnalyticsConfigurations http://www.onvif.org/ver10/media/wsdl/GetVideoAnalyticsConfigurationsResponse
int __trt__GetVideoAnalyticsConfigurations(
    _trt__GetVideoAnalyticsConfigurations* trt__GetVideoAnalyticsConfigurations,	///< Input parameter
    _trt__GetVideoAnalyticsConfigurationsResponse&trt__GetVideoAnalyticsConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetMetadataConfigurations                                         *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetMetadataConfigurations" of service binding "MediaBinding".
This operation lists all existing metadata configurations. The client need not know
anything apriori about the metadata in order to use the command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/GetMetadataConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetMetadataConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetMetadataConfigurationsResponse"
*/

//gsoap trt  service method-protocol:	GetMetadataConfigurations SOAP
//gsoap trt  service method-style:	GetMetadataConfigurations document
//gsoap trt  service method-encoding:	GetMetadataConfigurations literal
//gsoap trt  service method-input-action:	GetMetadataConfigurations http://www.onvif.org/ver10/media/wsdl/GetMetadataConfigurations
//gsoap trt  service method-output-action:	GetMetadataConfigurations http://www.onvif.org/ver10/media/wsdl/GetMetadataConfigurationsResponse
int __trt__GetMetadataConfigurations(
    _trt__GetMetadataConfigurations*    trt__GetMetadataConfigurations,	///< Input parameter
    _trt__GetMetadataConfigurationsResponse&trt__GetMetadataConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetAudioOutputConfigurations                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetAudioOutputConfigurations" of service binding "MediaBinding".
This command lists all existing AudioOutputConfigurations of a device. The NVC need
not know anything apriori about the audio configurations to use this command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfigurationsResponse"
*/

//gsoap trt  service method-protocol:	GetAudioOutputConfigurations SOAP
//gsoap trt  service method-style:	GetAudioOutputConfigurations document
//gsoap trt  service method-encoding:	GetAudioOutputConfigurations literal
//gsoap trt  service method-input-action:	GetAudioOutputConfigurations http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfigurations
//gsoap trt  service method-output-action:	GetAudioOutputConfigurations http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfigurationsResponse
int __trt__GetAudioOutputConfigurations(
    _trt__GetAudioOutputConfigurations* trt__GetAudioOutputConfigurations,	///< Input parameter
    _trt__GetAudioOutputConfigurationsResponse&trt__GetAudioOutputConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetAudioDecoderConfigurations                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetAudioDecoderConfigurations" of service binding "MediaBinding".
This command lists all existing AudioDecoderConfigurations of a device. The NVC
need not know anything apriori about the audio decoder configurations in order
to
use this command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfigurationsResponse"
*/

//gsoap trt  service method-protocol:	GetAudioDecoderConfigurations SOAP
//gsoap trt  service method-style:	GetAudioDecoderConfigurations document
//gsoap trt  service method-encoding:	GetAudioDecoderConfigurations literal
//gsoap trt  service method-input-action:	GetAudioDecoderConfigurations http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfigurations
//gsoap trt  service method-output-action:	GetAudioDecoderConfigurations http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfigurationsResponse
int __trt__GetAudioDecoderConfigurations(
    _trt__GetAudioDecoderConfigurations* trt__GetAudioDecoderConfigurations,	///< Input parameter
    _trt__GetAudioDecoderConfigurationsResponse&trt__GetAudioDecoderConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetVideoSourceConfiguration                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetVideoSourceConfiguration" of service binding "MediaBinding".
If the video source configuration token is already known, the video source configuration
can be fetched through the GetVideoSourceConfiguration command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/GetVideoSourceConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetVideoSourceConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetVideoSourceConfigurationResponse"
*/

//gsoap trt  service method-protocol:	GetVideoSourceConfiguration SOAP
//gsoap trt  service method-style:	GetVideoSourceConfiguration document
//gsoap trt  service method-encoding:	GetVideoSourceConfiguration literal
//gsoap trt  service method-input-action:	GetVideoSourceConfiguration http://www.onvif.org/ver10/media/wsdl/GetVideoSourceConfiguration
//gsoap trt  service method-output-action:	GetVideoSourceConfiguration http://www.onvif.org/ver10/media/wsdl/GetVideoSourceConfigurationResponse
int __trt__GetVideoSourceConfiguration(
    _trt__GetVideoSourceConfiguration*  trt__GetVideoSourceConfiguration,	///< Input parameter
    _trt__GetVideoSourceConfigurationResponse&trt__GetVideoSourceConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetVideoEncoderConfiguration                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetVideoEncoderConfiguration" of service binding "MediaBinding".
If the video encoder configuration token is already known, the encoder configuration
can be fetched through the GetVideoEncoderConfiguration command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfigurationResponse"
*/

//gsoap trt  service method-protocol:	GetVideoEncoderConfiguration SOAP
//gsoap trt  service method-style:	GetVideoEncoderConfiguration document
//gsoap trt  service method-encoding:	GetVideoEncoderConfiguration literal
//gsoap trt  service method-input-action:	GetVideoEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfiguration
//gsoap trt  service method-output-action:	GetVideoEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfigurationResponse
int __trt__GetVideoEncoderConfiguration(
    _trt__GetVideoEncoderConfiguration* trt__GetVideoEncoderConfiguration,	///< Input parameter
    _trt__GetVideoEncoderConfigurationResponse&trt__GetVideoEncoderConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetAudioSourceConfiguration                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetAudioSourceConfiguration" of service binding "MediaBinding".
The GetAudioSourceConfiguration command fetches the audio source configurations
if the audio source configuration token is already known. An

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/GetAudioSourceConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetAudioSourceConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetAudioSourceConfigurationResponse"
*/

//gsoap trt  service method-protocol:	GetAudioSourceConfiguration SOAP
//gsoap trt  service method-style:	GetAudioSourceConfiguration document
//gsoap trt  service method-encoding:	GetAudioSourceConfiguration literal
//gsoap trt  service method-input-action:	GetAudioSourceConfiguration http://www.onvif.org/ver10/media/wsdl/GetAudioSourceConfiguration
//gsoap trt  service method-output-action:	GetAudioSourceConfiguration http://www.onvif.org/ver10/media/wsdl/GetAudioSourceConfigurationResponse
int __trt__GetAudioSourceConfiguration(
    _trt__GetAudioSourceConfiguration*  trt__GetAudioSourceConfiguration,	///< Input parameter
    _trt__GetAudioSourceConfigurationResponse&trt__GetAudioSourceConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetAudioEncoderConfiguration                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetAudioEncoderConfiguration" of service binding "MediaBinding".
The GetAudioEncoderConfiguration command fetches the encoder configuration if the
audio encoder configuration token is known.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfigurationResponse"
*/

//gsoap trt  service method-protocol:	GetAudioEncoderConfiguration SOAP
//gsoap trt  service method-style:	GetAudioEncoderConfiguration document
//gsoap trt  service method-encoding:	GetAudioEncoderConfiguration literal
//gsoap trt  service method-input-action:	GetAudioEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfiguration
//gsoap trt  service method-output-action:	GetAudioEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfigurationResponse
int __trt__GetAudioEncoderConfiguration(
    _trt__GetAudioEncoderConfiguration* trt__GetAudioEncoderConfiguration,	///< Input parameter
    _trt__GetAudioEncoderConfigurationResponse&trt__GetAudioEncoderConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetVideoAnalyticsConfiguration                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetVideoAnalyticsConfiguration" of service binding "MediaBinding".
The GetVideoAnalyticsConfiguration command fetches the video analytics configuration
if the video analytics token is known.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/GetVideoAnalyticsConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetVideoAnalyticsConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetVideoAnalyticsConfigurationResponse"
*/

//gsoap trt  service method-protocol:	GetVideoAnalyticsConfiguration SOAP
//gsoap trt  service method-style:	GetVideoAnalyticsConfiguration document
//gsoap trt  service method-encoding:	GetVideoAnalyticsConfiguration literal
//gsoap trt  service method-input-action:	GetVideoAnalyticsConfiguration http://www.onvif.org/ver10/media/wsdl/GetVideoAnalyticsConfiguration
//gsoap trt  service method-output-action:	GetVideoAnalyticsConfiguration http://www.onvif.org/ver10/media/wsdl/GetVideoAnalyticsConfigurationResponse
int __trt__GetVideoAnalyticsConfiguration(
    _trt__GetVideoAnalyticsConfiguration* trt__GetVideoAnalyticsConfiguration,	///< Input parameter
    _trt__GetVideoAnalyticsConfigurationResponse&trt__GetVideoAnalyticsConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetMetadataConfiguration                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetMetadataConfiguration" of service binding "MediaBinding".
The GetMetadataConfiguration command fetches the metadata configuration if the metadata
token is known.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/GetMetadataConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetMetadataConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetMetadataConfigurationResponse"
*/

//gsoap trt  service method-protocol:	GetMetadataConfiguration SOAP
//gsoap trt  service method-style:	GetMetadataConfiguration document
//gsoap trt  service method-encoding:	GetMetadataConfiguration literal
//gsoap trt  service method-input-action:	GetMetadataConfiguration http://www.onvif.org/ver10/media/wsdl/GetMetadataConfiguration
//gsoap trt  service method-output-action:	GetMetadataConfiguration http://www.onvif.org/ver10/media/wsdl/GetMetadataConfigurationResponse
int __trt__GetMetadataConfiguration(
    _trt__GetMetadataConfiguration*     trt__GetMetadataConfiguration,	///< Input parameter
    _trt__GetMetadataConfigurationResponse&trt__GetMetadataConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetAudioOutputConfiguration                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetAudioOutputConfiguration" of service binding "MediaBinding".
If the audio output configuration token is already known, the output configuration
can be fetched through the GetAudioOutputConfiguration command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfigurationResponse"
*/

//gsoap trt  service method-protocol:	GetAudioOutputConfiguration SOAP
//gsoap trt  service method-style:	GetAudioOutputConfiguration document
//gsoap trt  service method-encoding:	GetAudioOutputConfiguration literal
//gsoap trt  service method-input-action:	GetAudioOutputConfiguration http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfiguration
//gsoap trt  service method-output-action:	GetAudioOutputConfiguration http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfigurationResponse
int __trt__GetAudioOutputConfiguration(
    _trt__GetAudioOutputConfiguration*  trt__GetAudioOutputConfiguration,	///< Input parameter
    _trt__GetAudioOutputConfigurationResponse&trt__GetAudioOutputConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetAudioDecoderConfiguration                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetAudioDecoderConfiguration" of service binding "MediaBinding".
If the audio decoder configuration token is already known, the decoder configuration
can be fetched through the GetAudioDecoderConfiguration command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfigurationResponse"
*/

//gsoap trt  service method-protocol:	GetAudioDecoderConfiguration SOAP
//gsoap trt  service method-style:	GetAudioDecoderConfiguration document
//gsoap trt  service method-encoding:	GetAudioDecoderConfiguration literal
//gsoap trt  service method-input-action:	GetAudioDecoderConfiguration http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfiguration
//gsoap trt  service method-output-action:	GetAudioDecoderConfiguration http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfigurationResponse
int __trt__GetAudioDecoderConfiguration(
    _trt__GetAudioDecoderConfiguration* trt__GetAudioDecoderConfiguration,	///< Input parameter
    _trt__GetAudioDecoderConfigurationResponse&trt__GetAudioDecoderConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetCompatibleVideoEncoderConfigurations                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetCompatibleVideoEncoderConfigurations" of service binding "MediaBinding".
This operation lists all the video encoder configurations of the device that are
compatible with a certain media profile. Each of the returned configurations shall
be a valid input parameter for the AddVideoEncoderConfiguration command on the
media profile. The result will vary depending on the capabilities, configurations
and settings in the device.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoEncoderConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoEncoderConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoEncoderConfigurationsResponse"
*/

//gsoap trt  service method-protocol:	GetCompatibleVideoEncoderConfigurations SOAP
//gsoap trt  service method-style:	GetCompatibleVideoEncoderConfigurations document
//gsoap trt  service method-encoding:	GetCompatibleVideoEncoderConfigurations literal
//gsoap trt  service method-input-action:	GetCompatibleVideoEncoderConfigurations http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoEncoderConfigurations
//gsoap trt  service method-output-action:	GetCompatibleVideoEncoderConfigurations http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoEncoderConfigurationsResponse
int __trt__GetCompatibleVideoEncoderConfigurations(
    _trt__GetCompatibleVideoEncoderConfigurations* trt__GetCompatibleVideoEncoderConfigurations,	///< Input parameter
    _trt__GetCompatibleVideoEncoderConfigurationsResponse&trt__GetCompatibleVideoEncoderConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetCompatibleVideoSourceConfigurations                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetCompatibleVideoSourceConfigurations" of service binding "MediaBinding".
This operation requests all the video source configurations of the device that are
compatible
with a certain media profile. Each of the returned configurations shall be a valid
input
parameter for the AddVideoSourceConfiguration command on the media profile. The
result
will vary depending on the capabilities, configurations and settings in the device.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoSourceConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoSourceConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoSourceConfigurationsResponse"
*/

//gsoap trt  service method-protocol:	GetCompatibleVideoSourceConfigurations SOAP
//gsoap trt  service method-style:	GetCompatibleVideoSourceConfigurations document
//gsoap trt  service method-encoding:	GetCompatibleVideoSourceConfigurations literal
//gsoap trt  service method-input-action:	GetCompatibleVideoSourceConfigurations http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoSourceConfigurations
//gsoap trt  service method-output-action:	GetCompatibleVideoSourceConfigurations http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoSourceConfigurationsResponse
int __trt__GetCompatibleVideoSourceConfigurations(
    _trt__GetCompatibleVideoSourceConfigurations* trt__GetCompatibleVideoSourceConfigurations,	///< Input parameter
    _trt__GetCompatibleVideoSourceConfigurationsResponse&trt__GetCompatibleVideoSourceConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetCompatibleAudioEncoderConfigurations                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetCompatibleAudioEncoderConfigurations" of service binding "MediaBinding".
This operation requests all audio encoder configurations of a device that are compatible
with a certain media profile. Each of the returned configurations shall be a valid
input parameter for the AddAudioSourceConfiguration command on the media profile.
The result varies depending on the capabilities, configurations and settings in
the device.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioEncoderConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioEncoderConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioEncoderConfigurationsResponse"
*/

//gsoap trt  service method-protocol:	GetCompatibleAudioEncoderConfigurations SOAP
//gsoap trt  service method-style:	GetCompatibleAudioEncoderConfigurations document
//gsoap trt  service method-encoding:	GetCompatibleAudioEncoderConfigurations literal
//gsoap trt  service method-input-action:	GetCompatibleAudioEncoderConfigurations http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioEncoderConfigurations
//gsoap trt  service method-output-action:	GetCompatibleAudioEncoderConfigurations http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioEncoderConfigurationsResponse
int __trt__GetCompatibleAudioEncoderConfigurations(
    _trt__GetCompatibleAudioEncoderConfigurations* trt__GetCompatibleAudioEncoderConfigurations,	///< Input parameter
    _trt__GetCompatibleAudioEncoderConfigurationsResponse&trt__GetCompatibleAudioEncoderConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetCompatibleAudioSourceConfigurations                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetCompatibleAudioSourceConfigurations" of service binding "MediaBinding".
This operation requests all audio source configurations of the device that are compatible
with a certain media profile. Each of the returned configurations shall be a valid
input parameter for the AddAudioEncoderConfiguration command on the media profile.
The result varies depending on the capabilities, configurations and settings in
the device.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioSourceConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioSourceConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioSourceConfigurationsResponse"
*/

//gsoap trt  service method-protocol:	GetCompatibleAudioSourceConfigurations SOAP
//gsoap trt  service method-style:	GetCompatibleAudioSourceConfigurations document
//gsoap trt  service method-encoding:	GetCompatibleAudioSourceConfigurations literal
//gsoap trt  service method-input-action:	GetCompatibleAudioSourceConfigurations http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioSourceConfigurations
//gsoap trt  service method-output-action:	GetCompatibleAudioSourceConfigurations http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioSourceConfigurationsResponse
int __trt__GetCompatibleAudioSourceConfigurations(
    _trt__GetCompatibleAudioSourceConfigurations* trt__GetCompatibleAudioSourceConfigurations,	///< Input parameter
    _trt__GetCompatibleAudioSourceConfigurationsResponse&trt__GetCompatibleAudioSourceConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetCompatibleVideoAnalyticsConfigurations                         *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetCompatibleVideoAnalyticsConfigurations" of service binding "MediaBinding".
This operation requests all video analytic configurations of the device that are
compatible with a certain media profile. Each of the returned configurations shall
be a valid input parameter for the AddVideoAnalyticsConfiguration command on the
media profile. The result varies depending on the capabilities, configurations
and settings in the device.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoAnalyticsConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoAnalyticsConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoAnalyticsConfigurationsResponse"
*/

//gsoap trt  service method-protocol:	GetCompatibleVideoAnalyticsConfigurations SOAP
//gsoap trt  service method-style:	GetCompatibleVideoAnalyticsConfigurations document
//gsoap trt  service method-encoding:	GetCompatibleVideoAnalyticsConfigurations literal
//gsoap trt  service method-input-action:	GetCompatibleVideoAnalyticsConfigurations http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoAnalyticsConfigurations
//gsoap trt  service method-output-action:	GetCompatibleVideoAnalyticsConfigurations http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoAnalyticsConfigurationsResponse
int __trt__GetCompatibleVideoAnalyticsConfigurations(
    _trt__GetCompatibleVideoAnalyticsConfigurations* trt__GetCompatibleVideoAnalyticsConfigurations,	///< Input parameter
    _trt__GetCompatibleVideoAnalyticsConfigurationsResponse&trt__GetCompatibleVideoAnalyticsConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetCompatibleMetadataConfigurations                               *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetCompatibleMetadataConfigurations" of service binding "MediaBinding".
This operation requests all the metadata configurations of the device that are compatible
with a certain media profile. Each of the returned configurations shall be a valid
input parameter for the AddMetadataConfiguration command on the media profile.
The result varies depending on the capabilities, configurations and settings in
the device.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/GetCompatibleMetadataConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleMetadataConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleMetadataConfigurationsResponse"
*/

//gsoap trt  service method-protocol:	GetCompatibleMetadataConfigurations SOAP
//gsoap trt  service method-style:	GetCompatibleMetadataConfigurations document
//gsoap trt  service method-encoding:	GetCompatibleMetadataConfigurations literal
//gsoap trt  service method-input-action:	GetCompatibleMetadataConfigurations http://www.onvif.org/ver10/media/wsdl/GetCompatibleMetadataConfigurations
//gsoap trt  service method-output-action:	GetCompatibleMetadataConfigurations http://www.onvif.org/ver10/media/wsdl/GetCompatibleMetadataConfigurationsResponse
int __trt__GetCompatibleMetadataConfigurations(
    _trt__GetCompatibleMetadataConfigurations* trt__GetCompatibleMetadataConfigurations,	///< Input parameter
    _trt__GetCompatibleMetadataConfigurationsResponse&trt__GetCompatibleMetadataConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetCompatibleAudioOutputConfigurations                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetCompatibleAudioOutputConfigurations" of service binding "MediaBinding".
This command lists all audio output configurations of a device that are compatible
with a certain media profile. Each returned configuration shall be a valid input
for the 
AddAudioOutputConfiguration command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioOutputConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioOutputConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioOutputConfigurationsResponse"
*/

//gsoap trt  service method-protocol:	GetCompatibleAudioOutputConfigurations SOAP
//gsoap trt  service method-style:	GetCompatibleAudioOutputConfigurations document
//gsoap trt  service method-encoding:	GetCompatibleAudioOutputConfigurations literal
//gsoap trt  service method-input-action:	GetCompatibleAudioOutputConfigurations http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioOutputConfigurations
//gsoap trt  service method-output-action:	GetCompatibleAudioOutputConfigurations http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioOutputConfigurationsResponse
int __trt__GetCompatibleAudioOutputConfigurations(
    _trt__GetCompatibleAudioOutputConfigurations* trt__GetCompatibleAudioOutputConfigurations,	///< Input parameter
    _trt__GetCompatibleAudioOutputConfigurationsResponse&trt__GetCompatibleAudioOutputConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetCompatibleAudioDecoderConfigurations                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetCompatibleAudioDecoderConfigurations" of service binding "MediaBinding".
This operation lists all the audio decoder configurations of the device that are
compatible with a certain media profile. Each of the returned configurations shall
be a valid input parameter for the AddAudioDecoderConfiguration command on the
media profile.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioDecoderConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioDecoderConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioDecoderConfigurationsResponse"
*/

//gsoap trt  service method-protocol:	GetCompatibleAudioDecoderConfigurations SOAP
//gsoap trt  service method-style:	GetCompatibleAudioDecoderConfigurations document
//gsoap trt  service method-encoding:	GetCompatibleAudioDecoderConfigurations literal
//gsoap trt  service method-input-action:	GetCompatibleAudioDecoderConfigurations http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioDecoderConfigurations
//gsoap trt  service method-output-action:	GetCompatibleAudioDecoderConfigurations http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioDecoderConfigurationsResponse
int __trt__GetCompatibleAudioDecoderConfigurations(
    _trt__GetCompatibleAudioDecoderConfigurations* trt__GetCompatibleAudioDecoderConfigurations,	///< Input parameter
    _trt__GetCompatibleAudioDecoderConfigurationsResponse&trt__GetCompatibleAudioDecoderConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__SetVideoSourceConfiguration                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__SetVideoSourceConfiguration" of service binding "MediaBinding".
This operation modifies a video source configuration. The ForcePersistence flag
indicates if the changes shall remain after reboot of the device. Running streams
using this configuration may be immediately updated according to the new settings.
The changes are not guaranteed to take effect unless the client requests a new
stream URI and restarts any affected stream. NVC methods for changing a running
stream are out of scope for this specification.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/SetVideoSourceConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/SetVideoSourceConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/SetVideoSourceConfigurationResponse"
*/

//gsoap trt  service method-protocol:	SetVideoSourceConfiguration SOAP
//gsoap trt  service method-style:	SetVideoSourceConfiguration document
//gsoap trt  service method-encoding:	SetVideoSourceConfiguration literal
//gsoap trt  service method-input-action:	SetVideoSourceConfiguration http://www.onvif.org/ver10/media/wsdl/SetVideoSourceConfiguration
//gsoap trt  service method-output-action:	SetVideoSourceConfiguration http://www.onvif.org/ver10/media/wsdl/SetVideoSourceConfigurationResponse
int __trt__SetVideoSourceConfiguration(
    _trt__SetVideoSourceConfiguration*  trt__SetVideoSourceConfiguration,	///< Input parameter
    _trt__SetVideoSourceConfigurationResponse&trt__SetVideoSourceConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__SetVideoEncoderConfiguration                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__SetVideoEncoderConfiguration" of service binding "MediaBinding".
This operation modifies a video encoder configuration. The ForcePersistence flag
indicates if the changes shall remain after reboot of the device. Changes in the
Multicast settings shall always be persistent. Running streams using this configuration
may be immediately updated according to the new settings. The changes are not guaranteed
to take effect unless the client requests a new stream URI and restarts any affected
stream. NVC methods for changing a running stream are out of scope for this specification.
<br/>SessionTimeout is provided as a hint for keeping rtsp session by a device.
If necessary the device may adapt parameter values for SessionTimeout elements
without returning an error. For the time between keep alive calls the client shall
adhere to the timeout value signaled via RTSP.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/SetVideoEncoderConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/SetVideoEncoderConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/SetVideoEncoderConfigurationResponse"
*/

//gsoap trt  service method-protocol:	SetVideoEncoderConfiguration SOAP
//gsoap trt  service method-style:	SetVideoEncoderConfiguration document
//gsoap trt  service method-encoding:	SetVideoEncoderConfiguration literal
//gsoap trt  service method-input-action:	SetVideoEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/SetVideoEncoderConfiguration
//gsoap trt  service method-output-action:	SetVideoEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/SetVideoEncoderConfigurationResponse
int __trt__SetVideoEncoderConfiguration(
    _trt__SetVideoEncoderConfiguration* trt__SetVideoEncoderConfiguration,	///< Input parameter
    _trt__SetVideoEncoderConfigurationResponse&trt__SetVideoEncoderConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__SetAudioSourceConfiguration                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__SetAudioSourceConfiguration" of service binding "MediaBinding".
This operation modifies an audio source configuration. The ForcePersistence flag
indicates if
the changes shall remain after reboot of the device. Running streams using this
configuration
may be immediately updated according to the new settings. The changes are not guaranteed
to take effect unless the client requests a new stream URI and restarts any affected
stream
NVC methods for changing a running stream are out of scope for this specification.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/SetAudioSourceConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/SetAudioSourceConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/SetAudioSourceConfigurationResponse"
*/

//gsoap trt  service method-protocol:	SetAudioSourceConfiguration SOAP
//gsoap trt  service method-style:	SetAudioSourceConfiguration document
//gsoap trt  service method-encoding:	SetAudioSourceConfiguration literal
//gsoap trt  service method-input-action:	SetAudioSourceConfiguration http://www.onvif.org/ver10/media/wsdl/SetAudioSourceConfiguration
//gsoap trt  service method-output-action:	SetAudioSourceConfiguration http://www.onvif.org/ver10/media/wsdl/SetAudioSourceConfigurationResponse
int __trt__SetAudioSourceConfiguration(
    _trt__SetAudioSourceConfiguration*  trt__SetAudioSourceConfiguration,	///< Input parameter
    _trt__SetAudioSourceConfigurationResponse&trt__SetAudioSourceConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__SetAudioEncoderConfiguration                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__SetAudioEncoderConfiguration" of service binding "MediaBinding".
This operation modifies an audio encoder configuration. The ForcePersistence flag
indicates if
the changes shall remain after reboot of the device. Running streams using this
configuration may be immediately updated
according to the new settings. The changes are not guaranteed to take effect unless
the client
requests a new stream URI and restarts any affected streams. NVC methods for changing
a
running stream are out of scope for this specification.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/SetAudioEncoderConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/SetAudioEncoderConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/SetAudioEncoderConfigurationResponse"
*/

//gsoap trt  service method-protocol:	SetAudioEncoderConfiguration SOAP
//gsoap trt  service method-style:	SetAudioEncoderConfiguration document
//gsoap trt  service method-encoding:	SetAudioEncoderConfiguration literal
//gsoap trt  service method-input-action:	SetAudioEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/SetAudioEncoderConfiguration
//gsoap trt  service method-output-action:	SetAudioEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/SetAudioEncoderConfigurationResponse
int __trt__SetAudioEncoderConfiguration(
    _trt__SetAudioEncoderConfiguration* trt__SetAudioEncoderConfiguration,	///< Input parameter
    _trt__SetAudioEncoderConfigurationResponse&trt__SetAudioEncoderConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__SetVideoAnalyticsConfiguration                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__SetVideoAnalyticsConfiguration" of service binding "MediaBinding".
A video analytics configuration is modified using this command. The ForcePersistence
flag
indicates if the changes shall remain after reboot of the device or not. Running
streams using
this configuration shall be immediately updated according to the new settings.
Otherwise
inconsistencies can occur between the scene description processed by the rule engine
and
the notifications produced by analytics engine and rule engine which reference
the very same
video analytics configuration token.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/SetVideoAnalyticsConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/SetVideoAnalyticsConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/SetVideoAnalyticsConfigurationResponse"
*/

//gsoap trt  service method-protocol:	SetVideoAnalyticsConfiguration SOAP
//gsoap trt  service method-style:	SetVideoAnalyticsConfiguration document
//gsoap trt  service method-encoding:	SetVideoAnalyticsConfiguration literal
//gsoap trt  service method-input-action:	SetVideoAnalyticsConfiguration http://www.onvif.org/ver10/media/wsdl/SetVideoAnalyticsConfiguration
//gsoap trt  service method-output-action:	SetVideoAnalyticsConfiguration http://www.onvif.org/ver10/media/wsdl/SetVideoAnalyticsConfigurationResponse
int __trt__SetVideoAnalyticsConfiguration(
    _trt__SetVideoAnalyticsConfiguration* trt__SetVideoAnalyticsConfiguration,	///< Input parameter
    _trt__SetVideoAnalyticsConfigurationResponse&trt__SetVideoAnalyticsConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__SetMetadataConfiguration                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__SetMetadataConfiguration" of service binding "MediaBinding".
This operation modifies a metadata configuration. The ForcePersistence flag indicates
if the
changes shall remain after reboot of the device. Changes in the Multicast settings
shall
always be persistent. Running streams using this configuration may be updated immediately
according to the new settings. The changes are not guaranteed to take effect unless
the client
requests a new stream URI and restarts any affected streams. NVC methods for changing
a
running stream are out of scope for this specification.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/SetMetadataConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/SetMetadataConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/SetMetadataConfigurationResponse"
*/

//gsoap trt  service method-protocol:	SetMetadataConfiguration SOAP
//gsoap trt  service method-style:	SetMetadataConfiguration document
//gsoap trt  service method-encoding:	SetMetadataConfiguration literal
//gsoap trt  service method-input-action:	SetMetadataConfiguration http://www.onvif.org/ver10/media/wsdl/SetMetadataConfiguration
//gsoap trt  service method-output-action:	SetMetadataConfiguration http://www.onvif.org/ver10/media/wsdl/SetMetadataConfigurationResponse
int __trt__SetMetadataConfiguration(
    _trt__SetMetadataConfiguration*     trt__SetMetadataConfiguration,	///< Input parameter
    _trt__SetMetadataConfigurationResponse&trt__SetMetadataConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__SetAudioOutputConfiguration                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__SetAudioOutputConfiguration" of service binding "MediaBinding".
This operation modifies an audio output configuration. The ForcePersistence flag
indicates if
the changes shall remain after reboot of the device.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/SetAudioOutputConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/SetAudioOutputConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/SetAudioOutputConfigurationResponse"
*/

//gsoap trt  service method-protocol:	SetAudioOutputConfiguration SOAP
//gsoap trt  service method-style:	SetAudioOutputConfiguration document
//gsoap trt  service method-encoding:	SetAudioOutputConfiguration literal
//gsoap trt  service method-input-action:	SetAudioOutputConfiguration http://www.onvif.org/ver10/media/wsdl/SetAudioOutputConfiguration
//gsoap trt  service method-output-action:	SetAudioOutputConfiguration http://www.onvif.org/ver10/media/wsdl/SetAudioOutputConfigurationResponse
int __trt__SetAudioOutputConfiguration(
    _trt__SetAudioOutputConfiguration*  trt__SetAudioOutputConfiguration,	///< Input parameter
    _trt__SetAudioOutputConfigurationResponse&trt__SetAudioOutputConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__SetAudioDecoderConfiguration                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__SetAudioDecoderConfiguration" of service binding "MediaBinding".
This operation modifies an audio decoder configuration. The ForcePersistence flag
indicates if
the changes shall remain after reboot of the device.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/SetAudioDecoderConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/SetAudioDecoderConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/SetAudioDecoderConfigurationResponse"
*/

//gsoap trt  service method-protocol:	SetAudioDecoderConfiguration SOAP
//gsoap trt  service method-style:	SetAudioDecoderConfiguration document
//gsoap trt  service method-encoding:	SetAudioDecoderConfiguration literal
//gsoap trt  service method-input-action:	SetAudioDecoderConfiguration http://www.onvif.org/ver10/media/wsdl/SetAudioDecoderConfiguration
//gsoap trt  service method-output-action:	SetAudioDecoderConfiguration http://www.onvif.org/ver10/media/wsdl/SetAudioDecoderConfigurationResponse
int __trt__SetAudioDecoderConfiguration(
    _trt__SetAudioDecoderConfiguration* trt__SetAudioDecoderConfiguration,	///< Input parameter
    _trt__SetAudioDecoderConfigurationResponse&trt__SetAudioDecoderConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetVideoSourceConfigurationOptions                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetVideoSourceConfigurationOptions" of service binding "MediaBinding".
This operation returns the available options  (supported values and ranges for video
source configuration parameters) when the video source parameters are
reconfigured If a video source configuration is specified, the options shall concern
that
particular configuration. If a media profile is specified, the options shall be
compatible with
that media profile.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdlGetVideoSourceConfigurationOptions/"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdlGetVideoSourceConfigurationOptions/"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdlGetVideoSourceConfigurationOptions/Response"
*/

//gsoap trt  service method-protocol:	GetVideoSourceConfigurationOptions SOAP
//gsoap trt  service method-style:	GetVideoSourceConfigurationOptions document
//gsoap trt  service method-encoding:	GetVideoSourceConfigurationOptions literal
//gsoap trt  service method-input-action:	GetVideoSourceConfigurationOptions http://www.onvif.org/ver10/media/wsdlGetVideoSourceConfigurationOptions/
//gsoap trt  service method-output-action:	GetVideoSourceConfigurationOptions http://www.onvif.org/ver10/media/wsdlGetVideoSourceConfigurationOptions/Response
int __trt__GetVideoSourceConfigurationOptions(
    _trt__GetVideoSourceConfigurationOptions* trt__GetVideoSourceConfigurationOptions,	///< Input parameter
    _trt__GetVideoSourceConfigurationOptionsResponse&trt__GetVideoSourceConfigurationOptionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetVideoEncoderConfigurationOptions                               *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetVideoEncoderConfigurationOptions" of service binding "MediaBinding".
This operation returns the available options (supported values and ranges for video
encoder 
				configuration parameters) when the video encoder
parameters are reconfigured. <br/>
				For JPEG, MPEG4 and H264 extension elements have
been defined that provide additional information. A device must provide the 
				XxxOption information for all encodings supported
and should additionally provide the corresponding XxxOption2 information.<br/>
				This response contains the available video encoder
configuration options. If a video encoder configuration is specified, 
				the options shall concern that particular configuration.
If a media profile is specified, the options shall be 
				compatible with that media profile. If no tokens
are specified, the options shall be considered generic for the device.
			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfigurationOptions"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfigurationOptions"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfigurationOptionsResponse"
*/

//gsoap trt  service method-protocol:	GetVideoEncoderConfigurationOptions SOAP
//gsoap trt  service method-style:	GetVideoEncoderConfigurationOptions document
//gsoap trt  service method-encoding:	GetVideoEncoderConfigurationOptions literal
//gsoap trt  service method-input-action:	GetVideoEncoderConfigurationOptions http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfigurationOptions
//gsoap trt  service method-output-action:	GetVideoEncoderConfigurationOptions http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfigurationOptionsResponse
int __trt__GetVideoEncoderConfigurationOptions(
    _trt__GetVideoEncoderConfigurationOptions* trt__GetVideoEncoderConfigurationOptions,	///< Input parameter
    _trt__GetVideoEncoderConfigurationOptionsResponse&trt__GetVideoEncoderConfigurationOptionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetAudioSourceConfigurationOptions                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetAudioSourceConfigurationOptions" of service binding "MediaBinding".
This operation returns the available options (supported values and ranges for audio
source configuration parameters) when the audio source parameters are
reconfigured. If an audio source configuration is specified, the options shall
concern that
particular configuration. If a media profile is specified, the options shall be
compatible with
that media profile.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/GetAudioSourceConfigurationOptions"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetAudioSourceConfigurationOptions"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetAudioSourceConfigurationOptionsResponse"
*/

//gsoap trt  service method-protocol:	GetAudioSourceConfigurationOptions SOAP
//gsoap trt  service method-style:	GetAudioSourceConfigurationOptions document
//gsoap trt  service method-encoding:	GetAudioSourceConfigurationOptions literal
//gsoap trt  service method-input-action:	GetAudioSourceConfigurationOptions http://www.onvif.org/ver10/media/wsdl/GetAudioSourceConfigurationOptions
//gsoap trt  service method-output-action:	GetAudioSourceConfigurationOptions http://www.onvif.org/ver10/media/wsdl/GetAudioSourceConfigurationOptionsResponse
int __trt__GetAudioSourceConfigurationOptions(
    _trt__GetAudioSourceConfigurationOptions* trt__GetAudioSourceConfigurationOptions,	///< Input parameter
    _trt__GetAudioSourceConfigurationOptionsResponse&trt__GetAudioSourceConfigurationOptionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetAudioEncoderConfigurationOptions                               *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetAudioEncoderConfigurationOptions" of service binding "MediaBinding".
This operation returns the available options  (supported values and ranges for audio
encoder configuration parameters) when the audio encoder parameters are
reconfigured.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfigurationOptions"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfigurationOptions"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfigurationOptionsResponse"
*/

//gsoap trt  service method-protocol:	GetAudioEncoderConfigurationOptions SOAP
//gsoap trt  service method-style:	GetAudioEncoderConfigurationOptions document
//gsoap trt  service method-encoding:	GetAudioEncoderConfigurationOptions literal
//gsoap trt  service method-input-action:	GetAudioEncoderConfigurationOptions http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfigurationOptions
//gsoap trt  service method-output-action:	GetAudioEncoderConfigurationOptions http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfigurationOptionsResponse
int __trt__GetAudioEncoderConfigurationOptions(
    _trt__GetAudioEncoderConfigurationOptions* trt__GetAudioEncoderConfigurationOptions,	///< Input parameter
    _trt__GetAudioEncoderConfigurationOptionsResponse&trt__GetAudioEncoderConfigurationOptionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetMetadataConfigurationOptions                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetMetadataConfigurationOptions" of service binding "MediaBinding".
This operation returns the available options (supported values and ranges for metadata
configuration parameters) for changing the metadata configuration.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/GetMetadataConfigurationOptions"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetMetadataConfigurationOptions"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetMetadataConfigurationOptionsResponse"
*/

//gsoap trt  service method-protocol:	GetMetadataConfigurationOptions SOAP
//gsoap trt  service method-style:	GetMetadataConfigurationOptions document
//gsoap trt  service method-encoding:	GetMetadataConfigurationOptions literal
//gsoap trt  service method-input-action:	GetMetadataConfigurationOptions http://www.onvif.org/ver10/media/wsdl/GetMetadataConfigurationOptions
//gsoap trt  service method-output-action:	GetMetadataConfigurationOptions http://www.onvif.org/ver10/media/wsdl/GetMetadataConfigurationOptionsResponse
int __trt__GetMetadataConfigurationOptions(
    _trt__GetMetadataConfigurationOptions* trt__GetMetadataConfigurationOptions,	///< Input parameter
    _trt__GetMetadataConfigurationOptionsResponse&trt__GetMetadataConfigurationOptionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetAudioOutputConfigurationOptions                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetAudioOutputConfigurationOptions" of service binding "MediaBinding".
This operation returns the available options (supported values and ranges for audio
output configuration parameters) for configuring an audio output.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfigurationOptions"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfigurationOptions"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfigurationOptionsResponse"
*/

//gsoap trt  service method-protocol:	GetAudioOutputConfigurationOptions SOAP
//gsoap trt  service method-style:	GetAudioOutputConfigurationOptions document
//gsoap trt  service method-encoding:	GetAudioOutputConfigurationOptions literal
//gsoap trt  service method-input-action:	GetAudioOutputConfigurationOptions http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfigurationOptions
//gsoap trt  service method-output-action:	GetAudioOutputConfigurationOptions http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfigurationOptionsResponse
int __trt__GetAudioOutputConfigurationOptions(
    _trt__GetAudioOutputConfigurationOptions* trt__GetAudioOutputConfigurationOptions,	///< Input parameter
    _trt__GetAudioOutputConfigurationOptionsResponse&trt__GetAudioOutputConfigurationOptionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetAudioDecoderConfigurationOptions                               *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetAudioDecoderConfigurationOptions" of service binding "MediaBinding".
This command list the audio decoding capabilities for a given profile and configuration
of a
device.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfigurationOptions"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfigurationOptions"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfigurationOptionsResponse"
*/

//gsoap trt  service method-protocol:	GetAudioDecoderConfigurationOptions SOAP
//gsoap trt  service method-style:	GetAudioDecoderConfigurationOptions document
//gsoap trt  service method-encoding:	GetAudioDecoderConfigurationOptions literal
//gsoap trt  service method-input-action:	GetAudioDecoderConfigurationOptions http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfigurationOptions
//gsoap trt  service method-output-action:	GetAudioDecoderConfigurationOptions http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfigurationOptionsResponse
int __trt__GetAudioDecoderConfigurationOptions(
    _trt__GetAudioDecoderConfigurationOptions* trt__GetAudioDecoderConfigurationOptions,	///< Input parameter
    _trt__GetAudioDecoderConfigurationOptionsResponse&trt__GetAudioDecoderConfigurationOptionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetGuaranteedNumberOfVideoEncoderInstances                        *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetGuaranteedNumberOfVideoEncoderInstances" of service binding "MediaBinding".
The GetGuaranteedNumberOfVideoEncoderInstances command can be used to request the
minimum number of guaranteed video encoder instances (applications) per Video Source
Configuration.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/GetGuaranteedNumberOfVideoEncoderInstances"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetGuaranteedNumberOfVideoEncoderInstances"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetGuaranteedNumberOfVideoEncoderInstancesResponse"
*/

//gsoap trt  service method-protocol:	GetGuaranteedNumberOfVideoEncoderInstances SOAP
//gsoap trt  service method-style:	GetGuaranteedNumberOfVideoEncoderInstances document
//gsoap trt  service method-encoding:	GetGuaranteedNumberOfVideoEncoderInstances literal
//gsoap trt  service method-input-action:	GetGuaranteedNumberOfVideoEncoderInstances http://www.onvif.org/ver10/media/wsdl/GetGuaranteedNumberOfVideoEncoderInstances
//gsoap trt  service method-output-action:	GetGuaranteedNumberOfVideoEncoderInstances http://www.onvif.org/ver10/media/wsdl/GetGuaranteedNumberOfVideoEncoderInstancesResponse
int __trt__GetGuaranteedNumberOfVideoEncoderInstances(
    _trt__GetGuaranteedNumberOfVideoEncoderInstances* trt__GetGuaranteedNumberOfVideoEncoderInstances,	///< Input parameter
    _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse&trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetStreamUri                                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetStreamUri" of service binding "MediaBinding".
This operation requests a URI that can be used to initiate a live media stream using
RTSP as
the control protocol. The returned URI shall remain valid indefinitely even if
the profile is
changed. The ValidUntilConnect, ValidUntilReboot and Timeout Parameter shall be
set
accordingly (ValidUntilConnect=false, ValidUntilReboot=false, timeout=PT0S). <br/>
				The correct syntax for the StreamSetup element for
these media stream setups defined in 5.1.1 of the streaming specification are as
follows:
				<ol>
					<li>RTP unicast over UDP: StreamType = "RTP_unicast",
TransportProtocol = "UDP"</li>
					<li>RTP over RTSP over HTTP over TCP: StreamType
= "RTP_unicast", TransportProtocol = "HTTP"</li>
					<li>RTP over RTSP over TCP: StreamType =
"RTP_unicast", TransportProtocol = "RTSP"</li>
				</ol>
				<br/>
If a multicast stream is requested the VideoEncoderConfiguration, AudioEncoderConfiguration
and MetadataConfiguration element inside the corresponding 
media profile must be configured with valid multicast settings.<br/>
For full compatibility with other ONVIF services a device should not generate Uris
longer than
128 octets.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/GetStreamUri"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetStreamUri"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetStreamUriResponse"
*/

//gsoap trt  service method-protocol:	GetStreamUri SOAP
//gsoap trt  service method-style:	GetStreamUri document
//gsoap trt  service method-encoding:	GetStreamUri literal
//gsoap trt  service method-input-action:	GetStreamUri http://www.onvif.org/ver10/media/wsdl/GetStreamUri
//gsoap trt  service method-output-action:	GetStreamUri http://www.onvif.org/ver10/media/wsdl/GetStreamUriResponse
int __trt__GetStreamUri(
    _trt__GetStreamUri*                 trt__GetStreamUri,	///< Input parameter
    _trt__GetStreamUriResponse         &trt__GetStreamUriResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__StartMulticastStreaming                                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__StartMulticastStreaming" of service binding "MediaBinding".
This command starts multicast streaming using a specified media profile of a device.
Streaming continues until StopMulticastStreaming is called for the same Profile.
The
streaming shall continue after a reboot of the device until a StopMulticastStreaming
request is
received. The multicast address, port and TTL are configured in the
VideoEncoderConfiguration, AudioEncoderConfiguration and MetadataConfiguration
respectively.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/StartMulticastStreaming"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/StartMulticastStreaming"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/StartMulticastStreamingResponse"
*/

//gsoap trt  service method-protocol:	StartMulticastStreaming SOAP
//gsoap trt  service method-style:	StartMulticastStreaming document
//gsoap trt  service method-encoding:	StartMulticastStreaming literal
//gsoap trt  service method-input-action:	StartMulticastStreaming http://www.onvif.org/ver10/media/wsdl/StartMulticastStreaming
//gsoap trt  service method-output-action:	StartMulticastStreaming http://www.onvif.org/ver10/media/wsdl/StartMulticastStreamingResponse
int __trt__StartMulticastStreaming(
    _trt__StartMulticastStreaming*      trt__StartMulticastStreaming,	///< Input parameter
    _trt__StartMulticastStreamingResponse&trt__StartMulticastStreamingResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__StopMulticastStreaming                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__StopMulticastStreaming" of service binding "MediaBinding".
This command stop multicast streaming using a specified media profile of a device

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/StopMulticastStreaming"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/StopMulticastStreaming"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/StopMulticastStreamingResponse"
*/

//gsoap trt  service method-protocol:	StopMulticastStreaming SOAP
//gsoap trt  service method-style:	StopMulticastStreaming document
//gsoap trt  service method-encoding:	StopMulticastStreaming literal
//gsoap trt  service method-input-action:	StopMulticastStreaming http://www.onvif.org/ver10/media/wsdl/StopMulticastStreaming
//gsoap trt  service method-output-action:	StopMulticastStreaming http://www.onvif.org/ver10/media/wsdl/StopMulticastStreamingResponse
int __trt__StopMulticastStreaming(
    _trt__StopMulticastStreaming*       trt__StopMulticastStreaming,	///< Input parameter
    _trt__StopMulticastStreamingResponse&trt__StopMulticastStreamingResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__SetSynchronizationPoint                                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__SetSynchronizationPoint" of service binding "MediaBinding".
Synchronization points allow clients to decode and correctly use all data after
the
synchronization point.
For example, if a video stream is configured with a large I-frame distance and
a client loses a
single packet, the client does not display video until the next I-frame is transmitted.
In such
cases, the client can request a Synchronization Point which enforces the device
to add an I-Frame as soon as possible. Clients can request Synchronization Points
for profiles. The device
shall add synchronization points for all streams associated with this profile.
Similarly, a synchronization point is used to get an update on full PTZ or event
status through
the metadata stream.
If a video stream is associated with the profile, an I-frame shall be added to
this video stream.
If a PTZ metadata stream is associated to the profile,
the PTZ position shall be repeated within the metadata stream.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/SetSynchronizationPoint"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/SetSynchronizationPoint"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/SetSynchronizationPointResponse"
*/

//gsoap trt  service method-protocol:	SetSynchronizationPoint SOAP
//gsoap trt  service method-style:	SetSynchronizationPoint document
//gsoap trt  service method-encoding:	SetSynchronizationPoint literal
//gsoap trt  service method-input-action:	SetSynchronizationPoint http://www.onvif.org/ver10/media/wsdl/SetSynchronizationPoint
//gsoap trt  service method-output-action:	SetSynchronizationPoint http://www.onvif.org/ver10/media/wsdl/SetSynchronizationPointResponse
int __trt__SetSynchronizationPoint(
    _trt__SetSynchronizationPoint*      trt__SetSynchronizationPoint,	///< Input parameter
    _trt__SetSynchronizationPointResponse&trt__SetSynchronizationPointResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetSnapshotUri                                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetSnapshotUri" of service binding "MediaBinding".
A client uses the GetSnapshotUri command to obtain a JPEG snapshot from the
device. The returned URI shall remain valid indefinitely even if the profile is
changed. The
ValidUntilConnect, ValidUntilReboot and Timeout Parameter shall be set accordingly
(ValidUntilConnect=false, ValidUntilReboot=false, timeout=PT0S). The URI can be
used for
acquiring a JPEG image through a HTTP GET operation. The image encoding will always
be
JPEG regardless of the encoding setting in the media profile. The Jpeg settings
(like resolution or quality) may be taken from the profile if suitable. The provided
image will be updated automatically and independent from calls to GetSnapshotUri.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/GetSnapshotUri"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetSnapshotUri"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetSnapshotUriResponse"
*/

//gsoap trt  service method-protocol:	GetSnapshotUri SOAP
//gsoap trt  service method-style:	GetSnapshotUri document
//gsoap trt  service method-encoding:	GetSnapshotUri literal
//gsoap trt  service method-input-action:	GetSnapshotUri http://www.onvif.org/ver10/media/wsdl/GetSnapshotUri
//gsoap trt  service method-output-action:	GetSnapshotUri http://www.onvif.org/ver10/media/wsdl/GetSnapshotUriResponse
int __trt__GetSnapshotUri(
    _trt__GetSnapshotUri*               trt__GetSnapshotUri,	///< Input parameter
    _trt__GetSnapshotUriResponse       &trt__GetSnapshotUriResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetVideoSourceModes                                               *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetVideoSourceModes" of service binding "MediaBinding".
A device returns the information for current video source mode and settable video
source modes of specified video source. A device that indicates a capability of
 VideoSourceModes shall support this command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/GetVideoSourceModes"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetVideoSourceModes"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetVideoSourceModesResponse"
*/

//gsoap trt  service method-protocol:	GetVideoSourceModes SOAP
//gsoap trt  service method-style:	GetVideoSourceModes document
//gsoap trt  service method-encoding:	GetVideoSourceModes literal
//gsoap trt  service method-input-action:	GetVideoSourceModes http://www.onvif.org/ver10/media/wsdl/GetVideoSourceModes
//gsoap trt  service method-output-action:	GetVideoSourceModes http://www.onvif.org/ver10/media/wsdl/GetVideoSourceModesResponse
int __trt__GetVideoSourceModes(
    _trt__GetVideoSourceModes*          trt__GetVideoSourceModes,	///< Input parameter
    _trt__GetVideoSourceModesResponse  &trt__GetVideoSourceModesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__SetVideoSourceMode                                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__SetVideoSourceMode" of service binding "MediaBinding".
SetVideoSourceMode changes the media profile structure relating to video source
for the specified video source mode. A device that indicates a capability of VideoSourceModes
shall support this command. The behavior after changing the mode is not defined
in this specification.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/SetVideoSourceMode"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/SetVideoSourceMode"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/SetVideoSourceModeResponse"
*/

//gsoap trt  service method-protocol:	SetVideoSourceMode SOAP
//gsoap trt  service method-style:	SetVideoSourceMode document
//gsoap trt  service method-encoding:	SetVideoSourceMode literal
//gsoap trt  service method-input-action:	SetVideoSourceMode http://www.onvif.org/ver10/media/wsdl/SetVideoSourceMode
//gsoap trt  service method-output-action:	SetVideoSourceMode http://www.onvif.org/ver10/media/wsdl/SetVideoSourceModeResponse
int __trt__SetVideoSourceMode(
    _trt__SetVideoSourceMode*           trt__SetVideoSourceMode,	///< Input parameter
    _trt__SetVideoSourceModeResponse   &trt__SetVideoSourceModeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetOSDs                                                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetOSDs" of service binding "MediaBinding".
Get the OSDs.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/GetOSDs"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetOSDs"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetOSDsResponse"
*/

//gsoap trt  service method-protocol:	GetOSDs SOAP
//gsoap trt  service method-style:	GetOSDs document
//gsoap trt  service method-encoding:	GetOSDs literal
//gsoap trt  service method-input-action:	GetOSDs http://www.onvif.org/ver10/media/wsdl/GetOSDs
//gsoap trt  service method-output-action:	GetOSDs http://www.onvif.org/ver10/media/wsdl/GetOSDsResponse
int __trt__GetOSDs(
    _trt__GetOSDs*                      trt__GetOSDs,	///< Input parameter
    _trt__GetOSDsResponse              &trt__GetOSDsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetOSD                                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetOSD" of service binding "MediaBinding".
Get the OSD.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/GetOSD"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetOSD"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetOSDResponse"
*/

//gsoap trt  service method-protocol:	GetOSD SOAP
//gsoap trt  service method-style:	GetOSD document
//gsoap trt  service method-encoding:	GetOSD literal
//gsoap trt  service method-input-action:	GetOSD http://www.onvif.org/ver10/media/wsdl/GetOSD
//gsoap trt  service method-output-action:	GetOSD http://www.onvif.org/ver10/media/wsdl/GetOSDResponse
int __trt__GetOSD(
    _trt__GetOSD*                       trt__GetOSD,	///< Input parameter
    _trt__GetOSDResponse               &trt__GetOSDResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetOSDOptions                                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetOSDOptions" of service binding "MediaBinding".
Get the OSD Options.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/GetOSDOptions"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetOSDOptions"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetOSDOptionsResponse"
*/

//gsoap trt  service method-protocol:	GetOSDOptions SOAP
//gsoap trt  service method-style:	GetOSDOptions document
//gsoap trt  service method-encoding:	GetOSDOptions literal
//gsoap trt  service method-input-action:	GetOSDOptions http://www.onvif.org/ver10/media/wsdl/GetOSDOptions
//gsoap trt  service method-output-action:	GetOSDOptions http://www.onvif.org/ver10/media/wsdl/GetOSDOptionsResponse
int __trt__GetOSDOptions(
    _trt__GetOSDOptions*                trt__GetOSDOptions,	///< Input parameter
    _trt__GetOSDOptionsResponse        &trt__GetOSDOptionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__SetOSD                                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__SetOSD" of service binding "MediaBinding".
Set the OSD

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/SetOSD"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/SetOSD"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/SetOSDResponse"
*/

//gsoap trt  service method-protocol:	SetOSD SOAP
//gsoap trt  service method-style:	SetOSD document
//gsoap trt  service method-encoding:	SetOSD literal
//gsoap trt  service method-input-action:	SetOSD http://www.onvif.org/ver10/media/wsdl/SetOSD
//gsoap trt  service method-output-action:	SetOSD http://www.onvif.org/ver10/media/wsdl/SetOSDResponse
int __trt__SetOSD(
    _trt__SetOSD*                       trt__SetOSD,	///< Input parameter
    _trt__SetOSDResponse               &trt__SetOSDResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__CreateOSD                                                         *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__CreateOSD" of service binding "MediaBinding".
Create the OSD.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/CreateOSD"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/CreateOSD"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/CreateOSDResponse"
*/

//gsoap trt  service method-protocol:	CreateOSD SOAP
//gsoap trt  service method-style:	CreateOSD document
//gsoap trt  service method-encoding:	CreateOSD literal
//gsoap trt  service method-input-action:	CreateOSD http://www.onvif.org/ver10/media/wsdl/CreateOSD
//gsoap trt  service method-output-action:	CreateOSD http://www.onvif.org/ver10/media/wsdl/CreateOSDResponse
int __trt__CreateOSD(
    _trt__CreateOSD*                    trt__CreateOSD,	///< Input parameter
    _trt__CreateOSDResponse            &trt__CreateOSDResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__DeleteOSD                                                         *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__DeleteOSD" of service binding "MediaBinding".
Delete the OSD.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/DeleteOSD"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/DeleteOSD"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/DeleteOSDResponse"
*/

//gsoap trt  service method-protocol:	DeleteOSD SOAP
//gsoap trt  service method-style:	DeleteOSD document
//gsoap trt  service method-encoding:	DeleteOSD literal
//gsoap trt  service method-input-action:	DeleteOSD http://www.onvif.org/ver10/media/wsdl/DeleteOSD
//gsoap trt  service method-output-action:	DeleteOSD http://www.onvif.org/ver10/media/wsdl/DeleteOSDResponse
int __trt__DeleteOSD(
    _trt__DeleteOSD*                    trt__DeleteOSD,	///< Input parameter
    _trt__DeleteOSDResponse            &trt__DeleteOSDResponse	///< Output parameter
);

/** @page MediaBinding Binding "MediaBinding"

@section MediaBinding_policy_enablers Policy Enablers of Binding "MediaBinding"

None specified.

*/

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   ReceiverBinding                                                          *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trv__GetServiceCapabilities                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__trv__GetServiceCapabilities" of service binding "ReceiverBinding".
Returns the capabilities of the receiver service. The result is returned in a typed
answer.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/receiver/wsdl/GetServiceCapabilities"

  - Addressing input action: "http://www.onvif.org/ver10/receiver/wsdl/GetServiceCapabilities"

  - Addressing output action: "http://www.onvif.org/ver10/receiver/wsdl/GetServiceCapabilitiesResponse"
*/

//gsoap trv  service method-protocol:	GetServiceCapabilities SOAP
//gsoap trv  service method-style:	GetServiceCapabilities document
//gsoap trv  service method-encoding:	GetServiceCapabilities literal
//gsoap trv  service method-input-action:	GetServiceCapabilities http://www.onvif.org/ver10/receiver/wsdl/GetServiceCapabilities
//gsoap trv  service method-output-action:	GetServiceCapabilities http://www.onvif.org/ver10/receiver/wsdl/GetServiceCapabilitiesResponse
int __trv__GetServiceCapabilities(
    _trv__GetServiceCapabilities*       trv__GetServiceCapabilities,	///< Input parameter
    _trv__GetServiceCapabilitiesResponse&trv__GetServiceCapabilitiesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trv__GetReceivers                                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__trv__GetReceivers" of service binding "ReceiverBinding".
				Lists all receivers currently present on a device.
This operation is mandatory.
			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/receiver/wsdl/GetReceivers"

  - Addressing input action: "http://www.onvif.org/ver10/receiver/wsdl/GetReceivers"

  - Addressing output action: "http://www.onvif.org/ver10/receiver/wsdl/GetReceiversResponse"
*/

//gsoap trv  service method-protocol:	GetReceivers SOAP
//gsoap trv  service method-style:	GetReceivers document
//gsoap trv  service method-encoding:	GetReceivers literal
//gsoap trv  service method-input-action:	GetReceivers http://www.onvif.org/ver10/receiver/wsdl/GetReceivers
//gsoap trv  service method-output-action:	GetReceivers http://www.onvif.org/ver10/receiver/wsdl/GetReceiversResponse
int __trv__GetReceivers(
    _trv__GetReceivers*                 trv__GetReceivers,	///< Input parameter
    _trv__GetReceiversResponse         &trv__GetReceiversResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trv__GetReceiver                                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__trv__GetReceiver" of service binding "ReceiverBinding".
				Retrieves the details of a specific receiver. This
operation is mandatory.
			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/receiver/wsdl/GetReceiver"

  - Addressing input action: "http://www.onvif.org/ver10/receiver/wsdl/GetReceiver"

  - Addressing output action: "http://www.onvif.org/ver10/receiver/wsdl/GetReceiverResponse"
*/

//gsoap trv  service method-protocol:	GetReceiver SOAP
//gsoap trv  service method-style:	GetReceiver document
//gsoap trv  service method-encoding:	GetReceiver literal
//gsoap trv  service method-input-action:	GetReceiver http://www.onvif.org/ver10/receiver/wsdl/GetReceiver
//gsoap trv  service method-output-action:	GetReceiver http://www.onvif.org/ver10/receiver/wsdl/GetReceiverResponse
int __trv__GetReceiver(
    _trv__GetReceiver*                  trv__GetReceiver,	///< Input parameter
    _trv__GetReceiverResponse          &trv__GetReceiverResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trv__CreateReceiver                                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "__trv__CreateReceiver" of service binding "ReceiverBinding".
				Creates a new receiver. This operation is mandatory,
although the service may
				raise a fault if the receiver cannot be created.
			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/receiver/wsdl/CreateReceiver"

  - Addressing input action: "http://www.onvif.org/ver10/receiver/wsdl/CreateReceiver"

  - Addressing output action: "http://www.onvif.org/ver10/receiver/wsdl/CreateReceiverResponse"
*/

//gsoap trv  service method-protocol:	CreateReceiver SOAP
//gsoap trv  service method-style:	CreateReceiver document
//gsoap trv  service method-encoding:	CreateReceiver literal
//gsoap trv  service method-input-action:	CreateReceiver http://www.onvif.org/ver10/receiver/wsdl/CreateReceiver
//gsoap trv  service method-output-action:	CreateReceiver http://www.onvif.org/ver10/receiver/wsdl/CreateReceiverResponse
int __trv__CreateReceiver(
    _trv__CreateReceiver*               trv__CreateReceiver,	///< Input parameter
    _trv__CreateReceiverResponse       &trv__CreateReceiverResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trv__DeleteReceiver                                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "__trv__DeleteReceiver" of service binding "ReceiverBinding".
				Deletes an existing receiver. A receiver may be
deleted only if it is not
				currently in use; otherwise a fault shall be raised.
				This operation is mandatory.
			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/receiver/wsdl/DeleteReceiver"

  - Addressing input action: "http://www.onvif.org/ver10/receiver/wsdl/DeleteReceiver"

  - Addressing output action: "http://www.onvif.org/ver10/receiver/wsdl/DeleteReceiverResponse"
*/

//gsoap trv  service method-protocol:	DeleteReceiver SOAP
//gsoap trv  service method-style:	DeleteReceiver document
//gsoap trv  service method-encoding:	DeleteReceiver literal
//gsoap trv  service method-input-action:	DeleteReceiver http://www.onvif.org/ver10/receiver/wsdl/DeleteReceiver
//gsoap trv  service method-output-action:	DeleteReceiver http://www.onvif.org/ver10/receiver/wsdl/DeleteReceiverResponse
int __trv__DeleteReceiver(
    _trv__DeleteReceiver*               trv__DeleteReceiver,	///< Input parameter
    _trv__DeleteReceiverResponse       &trv__DeleteReceiverResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trv__ConfigureReceiver                                                 *
 *                                                                            *
\******************************************************************************/


/** Operation "__trv__ConfigureReceiver" of service binding "ReceiverBinding".
				Configures an existing receiver. This operation
is mandatory.
			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/receiver/wsdl/ConfigureReceiver"

  - Addressing input action: "http://www.onvif.org/ver10/receiver/wsdl/ConfigureReceiver"

  - Addressing output action: "http://www.onvif.org/ver10/receiver/wsdl/ConfigureReceiverResponse"
*/

//gsoap trv  service method-protocol:	ConfigureReceiver SOAP
//gsoap trv  service method-style:	ConfigureReceiver document
//gsoap trv  service method-encoding:	ConfigureReceiver literal
//gsoap trv  service method-input-action:	ConfigureReceiver http://www.onvif.org/ver10/receiver/wsdl/ConfigureReceiver
//gsoap trv  service method-output-action:	ConfigureReceiver http://www.onvif.org/ver10/receiver/wsdl/ConfigureReceiverResponse
int __trv__ConfigureReceiver(
    _trv__ConfigureReceiver*            trv__ConfigureReceiver,	///< Input parameter
    _trv__ConfigureReceiverResponse    &trv__ConfigureReceiverResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trv__SetReceiverMode                                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__trv__SetReceiverMode" of service binding "ReceiverBinding".
				Sets the mode of the receiver without affecting
the rest of its configuration.
				This operation is mandatory.
			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/receiver/wsdl/SetReceiverMode"

  - Addressing input action: "http://www.onvif.org/ver10/receiver/wsdl/SetReceiverMode"

  - Addressing output action: "http://www.onvif.org/ver10/receiver/wsdl/SetReceiverModeResponse"
*/

//gsoap trv  service method-protocol:	SetReceiverMode SOAP
//gsoap trv  service method-style:	SetReceiverMode document
//gsoap trv  service method-encoding:	SetReceiverMode literal
//gsoap trv  service method-input-action:	SetReceiverMode http://www.onvif.org/ver10/receiver/wsdl/SetReceiverMode
//gsoap trv  service method-output-action:	SetReceiverMode http://www.onvif.org/ver10/receiver/wsdl/SetReceiverModeResponse
int __trv__SetReceiverMode(
    _trv__SetReceiverMode*              trv__SetReceiverMode,	///< Input parameter
    _trv__SetReceiverModeResponse      &trv__SetReceiverModeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trv__GetReceiverState                                                  *
 *                                                                            *
\******************************************************************************/


/** Operation "__trv__GetReceiverState" of service binding "ReceiverBinding".
				Determines whether the receiver is currently disconnected,
connected or
				attempting to connect.
				This operation is mandatory.
			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/receiver/wsdl/GetReceiverState"

  - Addressing input action: "http://www.onvif.org/ver10/receiver/wsdl/GetReceiverState"

  - Addressing output action: "http://www.onvif.org/ver10/receiver/wsdl/GetReceiverStateResponse"
*/

//gsoap trv  service method-protocol:	GetReceiverState SOAP
//gsoap trv  service method-style:	GetReceiverState document
//gsoap trv  service method-encoding:	GetReceiverState literal
//gsoap trv  service method-input-action:	GetReceiverState http://www.onvif.org/ver10/receiver/wsdl/GetReceiverState
//gsoap trv  service method-output-action:	GetReceiverState http://www.onvif.org/ver10/receiver/wsdl/GetReceiverStateResponse
int __trv__GetReceiverState(
    _trv__GetReceiverState*             trv__GetReceiverState,	///< Input parameter
    _trv__GetReceiverStateResponse     &trv__GetReceiverStateResponse	///< Output parameter
);

/** @page ReceiverBinding Binding "ReceiverBinding"

@section ReceiverBinding_policy_enablers Policy Enablers of Binding "ReceiverBinding"

None specified.

*/

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   SearchBinding                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tse__GetServiceCapabilities                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__tse__GetServiceCapabilities" of service binding "SearchBinding".
Returns the capabilities of the search service. The result is returned in a typed
answer.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/search/wsdl/GetServiceCapabilities"

  - Addressing input action: "http://www.onvif.org/ver10/search/wsdl/GetServiceCapabilities"

  - Addressing output action: "http://www.onvif.org/ver10/search/wsdl/GetServiceCapabilitiesResponse"
*/

//gsoap tse  service method-protocol:	GetServiceCapabilities SOAP
//gsoap tse  service method-style:	GetServiceCapabilities document
//gsoap tse  service method-encoding:	GetServiceCapabilities literal
//gsoap tse  service method-input-action:	GetServiceCapabilities http://www.onvif.org/ver10/search/wsdl/GetServiceCapabilities
//gsoap tse  service method-output-action:	GetServiceCapabilities http://www.onvif.org/ver10/search/wsdl/GetServiceCapabilitiesResponse
int __tse__GetServiceCapabilities(
    _tse__GetServiceCapabilities*       tse__GetServiceCapabilities,	///< Input parameter
    _tse__GetServiceCapabilitiesResponse&tse__GetServiceCapabilitiesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tse__GetRecordingSummary                                               *
 *                                                                            *
\******************************************************************************/


/** Operation "__tse__GetRecordingSummary" of service binding "SearchBinding".
GetRecordingSummary is used to get a summary description of all recorded data. This
				operation is mandatory to support for a device implementing
the recording search service.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/search/wsdl/GetRecordingSummary"

  - Addressing input action: "http://www.onvif.org/ver10/search/wsdl/GetRecordingSummary"

  - Addressing output action: "http://www.onvif.org/ver10/search/wsdl/GetRecordingSummaryResponse"
*/

//gsoap tse  service method-protocol:	GetRecordingSummary SOAP
//gsoap tse  service method-style:	GetRecordingSummary document
//gsoap tse  service method-encoding:	GetRecordingSummary literal
//gsoap tse  service method-input-action:	GetRecordingSummary http://www.onvif.org/ver10/search/wsdl/GetRecordingSummary
//gsoap tse  service method-output-action:	GetRecordingSummary http://www.onvif.org/ver10/search/wsdl/GetRecordingSummaryResponse
int __tse__GetRecordingSummary(
    _tse__GetRecordingSummary*          tse__GetRecordingSummary,	///< Input parameter
    _tse__GetRecordingSummaryResponse  &tse__GetRecordingSummaryResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tse__GetRecordingInformation                                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__tse__GetRecordingInformation" of service binding "SearchBinding".
Returns information about a single Recording specified by a RecordingToken. This
operation
				is mandatory to support for a device implementing
the recording search service.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/search/wsdl/GetRecordingInformation"

  - Addressing input action: "http://www.onvif.org/ver10/search/wsdl/GetRecordingInformation"

  - Addressing output action: "http://www.onvif.org/ver10/search/wsdl/GetRecordingInformationResponse"
*/

//gsoap tse  service method-protocol:	GetRecordingInformation SOAP
//gsoap tse  service method-style:	GetRecordingInformation document
//gsoap tse  service method-encoding:	GetRecordingInformation literal
//gsoap tse  service method-input-action:	GetRecordingInformation http://www.onvif.org/ver10/search/wsdl/GetRecordingInformation
//gsoap tse  service method-output-action:	GetRecordingInformation http://www.onvif.org/ver10/search/wsdl/GetRecordingInformationResponse
int __tse__GetRecordingInformation(
    _tse__GetRecordingInformation*      tse__GetRecordingInformation,	///< Input parameter
    _tse__GetRecordingInformationResponse&tse__GetRecordingInformationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tse__GetMediaAttributes                                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__tse__GetMediaAttributes" of service binding "SearchBinding".
Returns a set of media attributes for all tracks of the specified recordings at
a specified point
				in time. Clients using this operation shall be able
to use it as a non blocking operation. A
				device shall set the starttime and endtime of the
MediaAttributes structure to equal values if
				calculating this range would causes this operation
to block. See MediaAttributes structure for
				more information. This operation is mandatory to
support for a device implementing the
				recording search service.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/search/wsdl/GetMediaAttributes"

  - Addressing input action: "http://www.onvif.org/ver10/search/wsdl/GetMediaAttributes"

  - Addressing output action: "http://www.onvif.org/ver10/search/wsdl/GetMediaAttributesResponse"
*/

//gsoap tse  service method-protocol:	GetMediaAttributes SOAP
//gsoap tse  service method-style:	GetMediaAttributes document
//gsoap tse  service method-encoding:	GetMediaAttributes literal
//gsoap tse  service method-input-action:	GetMediaAttributes http://www.onvif.org/ver10/search/wsdl/GetMediaAttributes
//gsoap tse  service method-output-action:	GetMediaAttributes http://www.onvif.org/ver10/search/wsdl/GetMediaAttributesResponse
int __tse__GetMediaAttributes(
    _tse__GetMediaAttributes*           tse__GetMediaAttributes,	///< Input parameter
    _tse__GetMediaAttributesResponse   &tse__GetMediaAttributesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tse__FindRecordings                                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "__tse__FindRecordings" of service binding "SearchBinding".
FindRecordings starts a search session, looking for recordings that matches the
scope (See
				20.2.4) defined in the request. Results from the
search are acquired using the
				GetRecordingSearchResults request, specifying the
search token returned from this request.
				The device shall continue searching until one of
the following occurs:<ul>
					<li>The entire time range from StartPoint
to EndPoint has been searched through.</li>
					<li>The total number of matches has been
found, defined by the MaxMatches parameter.</li>
					<li>The session has been ended by a client
EndSession request.</li>
					<li>The session has been ended because KeepAliveTime
since the last request related to
				this session has expired.</li>
				</ul>
				The order of the results is undefined, to allow
the device to return results in any order they
				are found. This operation is mandatory to support
for a device implementing the recording
				search service.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/search/wsdl/FindRecordings"

  - Addressing input action: "http://www.onvif.org/ver10/search/wsdl/FindRecordings"

  - Addressing output action: "http://www.onvif.org/ver10/search/wsdl/FindRecordingsResponse"
*/

//gsoap tse  service method-protocol:	FindRecordings SOAP
//gsoap tse  service method-style:	FindRecordings document
//gsoap tse  service method-encoding:	FindRecordings literal
//gsoap tse  service method-input-action:	FindRecordings http://www.onvif.org/ver10/search/wsdl/FindRecordings
//gsoap tse  service method-output-action:	FindRecordings http://www.onvif.org/ver10/search/wsdl/FindRecordingsResponse
int __tse__FindRecordings(
    _tse__FindRecordings*               tse__FindRecordings,	///< Input parameter
    _tse__FindRecordingsResponse       &tse__FindRecordingsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tse__GetRecordingSearchResults                                         *
 *                                                                            *
\******************************************************************************/


/** Operation "__tse__GetRecordingSearchResults" of service binding "SearchBinding".
GetRecordingSearchResults acquires the results from a recording search session previously
				initiated by a FindRecordings operation. The response
shall not include results already
				returned in previous requests for the same session.
If MaxResults is specified, the response
				shall not contain more than MaxResults results.
The number of results relates to the number of recordings. 
				For viewing individual recorded data for a signal
track use the FindEvents method.<br/>
				GetRecordingSearchResults shall block until:<ul>
					<li>
				MaxResults results are available for the response
if MaxResults is specified.</li>
					<li>MinResults results are available for
the response if MinResults is specified.</li>
					<li>WaitTime has expired.</li>
					<li>Search is completed or stopped.</li>
				</ul>
				This operation is mandatory to support for a device
implementing the recording search service.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/search/wsdl/GetRecordingSearchResults"

  - Addressing input action: "http://www.onvif.org/ver10/search/wsdl/GetRecordingSearchResults"

  - Addressing output action: "http://www.onvif.org/ver10/search/wsdl/GetRecordingSearchResultsResponse"
*/

//gsoap tse  service method-protocol:	GetRecordingSearchResults SOAP
//gsoap tse  service method-style:	GetRecordingSearchResults document
//gsoap tse  service method-encoding:	GetRecordingSearchResults literal
//gsoap tse  service method-input-action:	GetRecordingSearchResults http://www.onvif.org/ver10/search/wsdl/GetRecordingSearchResults
//gsoap tse  service method-output-action:	GetRecordingSearchResults http://www.onvif.org/ver10/search/wsdl/GetRecordingSearchResultsResponse
int __tse__GetRecordingSearchResults(
    _tse__GetRecordingSearchResults*    tse__GetRecordingSearchResults,	///< Input parameter
    _tse__GetRecordingSearchResultsResponse&tse__GetRecordingSearchResultsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tse__FindEvents                                                        *
 *                                                                            *
\******************************************************************************/


/** Operation "__tse__FindEvents" of service binding "SearchBinding".
FindEvents starts a search session, looking for recording events (in the scope that

				matches the search filter defined in the request.
Results from the search are
				acquired using the GetEventSearchResults request,
specifying the search token returned from
				this request.<br/>
				The device shall continue searching until one of
the following occurs:<ul>
					<li>
				The entire time range from StartPoint to EndPoint
has been searched through.</li>
					<li>The total number of matches has been
found, defined by the MaxMatches parameter.</li>
					<li>The session has been ended by a client
EndSession request.</li>
					<li>The session has been ended because KeepAliveTime
since the last request related to
				this session has expired.</li>
				</ul>
				Results shall be ordered by time, ascending in case
of forward search, or descending in case
				of backward search. This operation is mandatory
to support for a device implementing the
				recording search service.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/search/wsdl/FindEvents"

  - Addressing input action: "http://www.onvif.org/ver10/search/wsdl/FindEvents"

  - Addressing output action: "http://www.onvif.org/ver10/search/wsdl/FindEventsResponse"
*/

//gsoap tse  service method-protocol:	FindEvents SOAP
//gsoap tse  service method-style:	FindEvents document
//gsoap tse  service method-encoding:	FindEvents literal
//gsoap tse  service method-input-action:	FindEvents http://www.onvif.org/ver10/search/wsdl/FindEvents
//gsoap tse  service method-output-action:	FindEvents http://www.onvif.org/ver10/search/wsdl/FindEventsResponse
int __tse__FindEvents(
    _tse__FindEvents*                   tse__FindEvents,	///< Input parameter
    _tse__FindEventsResponse           &tse__FindEventsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tse__GetEventSearchResults                                             *
 *                                                                            *
\******************************************************************************/


/** Operation "__tse__GetEventSearchResults" of service binding "SearchBinding".
GetEventSearchResults acquires the results from a recording event search session
previously
				initiated by a FindEvents operation. The response
shall not include results already returned in
				previous requests for the same session. If MaxResults
is specified, the response shall not
				contain more than MaxResults results.<br/>
				GetEventSearchResults shall block until:<ul>
					<li>
				MaxResults results are available for the response
if MaxResults is specified.</li>
					<li>MinResults results are available for
the response if MinResults is specified.</li>
					<li>WaitTime has expired.</li>
					<li>Search is completed or stopped.</li>
				</ul>
				This operation is mandatory to support for a device
implementing the recording search service.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/search/wsdl/GetEventSearchResults"

  - Addressing input action: "http://www.onvif.org/ver10/search/wsdl/GetEventSearchResults"

  - Addressing output action: "http://www.onvif.org/ver10/search/wsdl/GetEventSearchResultsResponse"
*/

//gsoap tse  service method-protocol:	GetEventSearchResults SOAP
//gsoap tse  service method-style:	GetEventSearchResults document
//gsoap tse  service method-encoding:	GetEventSearchResults literal
//gsoap tse  service method-input-action:	GetEventSearchResults http://www.onvif.org/ver10/search/wsdl/GetEventSearchResults
//gsoap tse  service method-output-action:	GetEventSearchResults http://www.onvif.org/ver10/search/wsdl/GetEventSearchResultsResponse
int __tse__GetEventSearchResults(
    _tse__GetEventSearchResults*        tse__GetEventSearchResults,	///< Input parameter
    _tse__GetEventSearchResultsResponse&tse__GetEventSearchResultsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tse__FindPTZPosition                                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__tse__FindPTZPosition" of service binding "SearchBinding".
FindPTZPosition starts a search session, looking for ptz positions in the scope
(See 20.2.4)
				that matches the search filter defined in the request.
Results from the search are acquired
				using the GetPTZPositionSearchResults request, specifying
the search token returned from
				this request.<br/>
				The device shall continue searching until one of
the following occurs:<ul>
					<li>
				The entire time range from StartPoint to EndPoint
has been searched through.</li>
					<li>The total number of matches has been
found, defined by the MaxMatches parameter.</li>
					<li>The session has been ended by a client
EndSession request.</li>
					<li>The session has been ended because KeepAliveTime
since the last request related to
				this session has expired.</li>
				</ul>
				This operation is mandatory to support whenever
CanContainPTZ is true for any metadata
				track in any recording on the device.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/search/wsdl/FindPTZPosition"

  - Addressing input action: "http://www.onvif.org/ver10/search/wsdl/FindPTZPosition"

  - Addressing output action: "http://www.onvif.org/ver10/search/wsdl/FindPTZPositionResponse"
*/

//gsoap tse  service method-protocol:	FindPTZPosition SOAP
//gsoap tse  service method-style:	FindPTZPosition document
//gsoap tse  service method-encoding:	FindPTZPosition literal
//gsoap tse  service method-input-action:	FindPTZPosition http://www.onvif.org/ver10/search/wsdl/FindPTZPosition
//gsoap tse  service method-output-action:	FindPTZPosition http://www.onvif.org/ver10/search/wsdl/FindPTZPositionResponse
int __tse__FindPTZPosition(
    _tse__FindPTZPosition*              tse__FindPTZPosition,	///< Input parameter
    _tse__FindPTZPositionResponse      &tse__FindPTZPositionResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tse__GetPTZPositionSearchResults                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__tse__GetPTZPositionSearchResults" of service binding "SearchBinding".
GetPTZPositionSearchResults acquires the results from a ptz position search session
				previously initiated by a FindPTZPosition operation.
The response shall not include results
				already returned in previous requests for the same
session. If MaxResults is specified, the
				response shall not contain more than MaxResults
results.<br/>
				GetPTZPositionSearchResults shall block until:<ul>
					<li>
				MaxResults results are available for the response
if MaxResults is specified.</li>
					<li>MinResults results are available for
the response if MinResults is specified.</li>
					<li>WaitTime has expired.</li>
					<li>Search is completed or stopped.</li>
				</ul>
				This operation is mandatory to support whenever
CanContainPTZ is true for any metadata
				track in any recording on the device.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/search/wsdl/GetPTZPositionSearchResults"

  - Addressing input action: "http://www.onvif.org/ver10/search/wsdl/GetPTZPositionSearchResults"

  - Addressing output action: "http://www.onvif.org/ver10/search/wsdl/GetPTZPositionSearchResultsResponse"
*/

//gsoap tse  service method-protocol:	GetPTZPositionSearchResults SOAP
//gsoap tse  service method-style:	GetPTZPositionSearchResults document
//gsoap tse  service method-encoding:	GetPTZPositionSearchResults literal
//gsoap tse  service method-input-action:	GetPTZPositionSearchResults http://www.onvif.org/ver10/search/wsdl/GetPTZPositionSearchResults
//gsoap tse  service method-output-action:	GetPTZPositionSearchResults http://www.onvif.org/ver10/search/wsdl/GetPTZPositionSearchResultsResponse
int __tse__GetPTZPositionSearchResults(
    _tse__GetPTZPositionSearchResults*  tse__GetPTZPositionSearchResults,	///< Input parameter
    _tse__GetPTZPositionSearchResultsResponse&tse__GetPTZPositionSearchResultsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tse__GetSearchState                                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "__tse__GetSearchState" of service binding "SearchBinding".
GetSearchState returns the current state of the specified search session. This command
is deprecated .

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/search/wsdl/GetSearchState"

  - Addressing input action: "http://www.onvif.org/ver10/search/wsdl/GetSearchState"

  - Addressing output action: "http://www.onvif.org/ver10/search/wsdl/GetSearchStateResponse"
*/

//gsoap tse  service method-protocol:	GetSearchState SOAP
//gsoap tse  service method-style:	GetSearchState document
//gsoap tse  service method-encoding:	GetSearchState literal
//gsoap tse  service method-input-action:	GetSearchState http://www.onvif.org/ver10/search/wsdl/GetSearchState
//gsoap tse  service method-output-action:	GetSearchState http://www.onvif.org/ver10/search/wsdl/GetSearchStateResponse
int __tse__GetSearchState(
    _tse__GetSearchState*               tse__GetSearchState,	///< Input parameter
    _tse__GetSearchStateResponse       &tse__GetSearchStateResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tse__EndSearch                                                         *
 *                                                                            *
\******************************************************************************/


/** Operation "__tse__EndSearch" of service binding "SearchBinding".
EndSearch stops and ongoing search session, causing any blocking result request
to return
				and the SearchToken to become invalid. If the search
was interrupted before completion, the
				point in time that the search had reached shall
be returned. If the search had not yet begun,
				the StartPoint shall be returned. If the search
was completed the original EndPoint supplied
				by the Find operation shall be returned. When issuing
EndSearch on a FindRecordings request the 
				EndPoint is undefined and shall not be used since
the FindRecordings request doesn't have 
				StartPoint/EndPoint. This operation is mandatory
to support for a device implementing the 
				recording search service. 
			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/search/wsdl/EndSearch"

  - Addressing input action: "http://www.onvif.org/ver10/search/wsdl/EndSearch"

  - Addressing output action: "http://www.onvif.org/ver10/search/wsdl/EndSearchResponse"
*/

//gsoap tse  service method-protocol:	EndSearch SOAP
//gsoap tse  service method-style:	EndSearch document
//gsoap tse  service method-encoding:	EndSearch literal
//gsoap tse  service method-input-action:	EndSearch http://www.onvif.org/ver10/search/wsdl/EndSearch
//gsoap tse  service method-output-action:	EndSearch http://www.onvif.org/ver10/search/wsdl/EndSearchResponse
int __tse__EndSearch(
    _tse__EndSearch*                    tse__EndSearch,	///< Input parameter
    _tse__EndSearchResponse            &tse__EndSearchResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tse__FindMetadata                                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__tse__FindMetadata" of service binding "SearchBinding".
FindMetadata starts a search session, looking for metadata in the scope (See 20.2.4)
that
				matches the search filter defined in the request.
Results from the search are acquired using
				the GetMetadataSearchResults request, specifying
the search token returned from this
				request.<br/>
				The device shall continue searching until one of
the following occurs:<ul>
					<li>
				The entire time range from StartPoint to EndPoint
has been searched through.</li>
					<li>The total number of matches has been
found, defined by the MaxMatches parameter.</li>
					<li>The session has been ended by a client
EndSession request.</li>
					<li>The session has been ended because KeepAliveTime
since the last request related to
				this session has expired.</li>
				</ul>
				This operation is mandatory to support if the MetaDataSearch
capability is set to true in the
				SearchCapabilities structure return by the GetCapabilities
command in the Device service.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/search/wsdl/FindMetadata"

  - Addressing input action: "http://www.onvif.org/ver10/search/wsdl/FindMetadata"

  - Addressing output action: "http://www.onvif.org/ver10/search/wsdl/FindMetadataResponse"
*/

//gsoap tse  service method-protocol:	FindMetadata SOAP
//gsoap tse  service method-style:	FindMetadata document
//gsoap tse  service method-encoding:	FindMetadata literal
//gsoap tse  service method-input-action:	FindMetadata http://www.onvif.org/ver10/search/wsdl/FindMetadata
//gsoap tse  service method-output-action:	FindMetadata http://www.onvif.org/ver10/search/wsdl/FindMetadataResponse
int __tse__FindMetadata(
    _tse__FindMetadata*                 tse__FindMetadata,	///< Input parameter
    _tse__FindMetadataResponse         &tse__FindMetadataResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tse__GetMetadataSearchResults                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__tse__GetMetadataSearchResults" of service binding "SearchBinding".
GetMetadataSearchResults acquires the results from a recording search session previously
				initiated by a FindMetadata operation. The response
shall not include results already returned
				in previous requests for the same session. If MaxResults
is specified, the response shall not
				contain more than MaxResults results.<br/>
				GetMetadataSearchResults shall block until:<ul>
					<li>
				MaxResults results are available for the response
if MaxResults is specified.</li>
					<li>MinResults results are available for
the response if MinResults is specified.</li>
					<li>WaitTime has expired.</li>
					<li>Search is completed or stopped.</li>
				</ul>
				This operation is mandatory to support if the MetaDataSearch
capability is set to true in the
				SearchCapabilities structure return by the GetCapabilities
command in the Device service.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/search/wsdl/GetMetadataSearchResults"

  - Addressing input action: "http://www.onvif.org/ver10/search/wsdl/GetMetadataSearchResults"

  - Addressing output action: "http://www.onvif.org/ver10/search/wsdl/GetMetadataSearchResultsResponse"
*/

//gsoap tse  service method-protocol:	GetMetadataSearchResults SOAP
//gsoap tse  service method-style:	GetMetadataSearchResults document
//gsoap tse  service method-encoding:	GetMetadataSearchResults literal
//gsoap tse  service method-input-action:	GetMetadataSearchResults http://www.onvif.org/ver10/search/wsdl/GetMetadataSearchResults
//gsoap tse  service method-output-action:	GetMetadataSearchResults http://www.onvif.org/ver10/search/wsdl/GetMetadataSearchResultsResponse
int __tse__GetMetadataSearchResults(
    _tse__GetMetadataSearchResults*     tse__GetMetadataSearchResults,	///< Input parameter
    _tse__GetMetadataSearchResultsResponse&tse__GetMetadataSearchResultsResponse	///< Output parameter
);

/** @page SearchBinding Binding "SearchBinding"

@section SearchBinding_policy_enablers Policy Enablers of Binding "SearchBinding"

None specified.

*/

/******************************************************************************\
 *                                                                            *
 * XML Data Binding                                                           *
 *                                                                            *
\******************************************************************************/


/** @page page_XMLDataBinding XML Data Binding

SOAP/XML services use data bindings that are contractually bound by WSDLs and
are auto-generated by wsdl2h and soapcpp2 (see Service Bindings). Plain data
bindings are adopted from XML schemas as part of the WSDL types section or when
running wsdl2h on a set of schemas to produce non-SOAP-based XML data bindings.

*/

/**

@section wsnt Top-level root elements of schema "http://docs.oasis-open.org/wsn/b-2"

  - <wsnt:TopicExpression> (use wsdl2h option -g to auto-generate type _wsnt__TopicExpression)

  - <wsnt:FixedTopicSet> (use wsdl2h option -g to auto-generate type _wsnt__FixedTopicSet)

  - <wsnt:TopicExpressionDialect> (use wsdl2h option -g to auto-generate type _wsnt__TopicExpressionDialect)

  - <wsnt:NotificationProducerRP> @ref _wsnt__NotificationProducerRP

  - <wsnt:ConsumerReference> (use wsdl2h option -g to auto-generate type _wsnt__ConsumerReference)

  - <wsnt:Filter> (use wsdl2h option -g to auto-generate type _wsnt__Filter)

  - <wsnt:SubscriptionPolicy> (use wsdl2h option -g to auto-generate type _wsnt__SubscriptionPolicy)

  - <wsnt:CreationTime> (use wsdl2h option -g to auto-generate type _wsnt__CreationTime)

  - <wsnt:SubscriptionManagerRP> @ref _wsnt__SubscriptionManagerRP

  - <wsnt:SubscriptionReference> (use wsdl2h option -g to auto-generate type _wsnt__SubscriptionReference)

  - <wsnt:Topic> (use wsdl2h option -g to auto-generate type _wsnt__Topic)

  - <wsnt:ProducerReference> (use wsdl2h option -g to auto-generate type _wsnt__ProducerReference)

  - <wsnt:NotificationMessage> (use wsdl2h option -g to auto-generate type _wsnt__NotificationMessage)

  - <wsnt:Notify> @ref _wsnt__Notify

  - <wsnt:CurrentTime> (use wsdl2h option -g to auto-generate type _wsnt__CurrentTime)

  - <wsnt:TerminationTime> (use wsdl2h option -g to auto-generate type _wsnt__TerminationTime)

  - <wsnt:ProducerProperties> (use wsdl2h option -g to auto-generate type _wsnt__ProducerProperties)

  - <wsnt:MessageContent> (use wsdl2h option -g to auto-generate type _wsnt__MessageContent)

  - <wsnt:UseRaw> @ref _wsnt__UseRaw

  - <wsnt:Subscribe> @ref _wsnt__Subscribe

  - <wsnt:SubscribeResponse> @ref _wsnt__SubscribeResponse

  - <wsnt:GetCurrentMessage> @ref _wsnt__GetCurrentMessage

  - <wsnt:GetCurrentMessageResponse> @ref _wsnt__GetCurrentMessageResponse

  - <wsnt:SubscribeCreationFailedFault> (use wsdl2h option -g to auto-generate type _wsnt__SubscribeCreationFailedFault)

  - <wsnt:InvalidFilterFault> (use wsdl2h option -g to auto-generate type _wsnt__InvalidFilterFault)

  - <wsnt:TopicExpressionDialectUnknownFault> (use wsdl2h option -g to auto-generate type _wsnt__TopicExpressionDialectUnknownFault)

  - <wsnt:InvalidTopicExpressionFault> (use wsdl2h option -g to auto-generate type _wsnt__InvalidTopicExpressionFault)

  - <wsnt:TopicNotSupportedFault> (use wsdl2h option -g to auto-generate type _wsnt__TopicNotSupportedFault)

  - <wsnt:MultipleTopicsSpecifiedFault> (use wsdl2h option -g to auto-generate type _wsnt__MultipleTopicsSpecifiedFault)

  - <wsnt:InvalidProducerPropertiesExpressionFault> (use wsdl2h option -g to auto-generate type _wsnt__InvalidProducerPropertiesExpressionFault)

  - <wsnt:InvalidMessageContentExpressionFault> (use wsdl2h option -g to auto-generate type _wsnt__InvalidMessageContentExpressionFault)

  - <wsnt:UnrecognizedPolicyRequestFault> (use wsdl2h option -g to auto-generate type _wsnt__UnrecognizedPolicyRequestFault)

  - <wsnt:UnsupportedPolicyRequestFault> (use wsdl2h option -g to auto-generate type _wsnt__UnsupportedPolicyRequestFault)

  - <wsnt:NotifyMessageNotSupportedFault> (use wsdl2h option -g to auto-generate type _wsnt__NotifyMessageNotSupportedFault)

  - <wsnt:UnacceptableInitialTerminationTimeFault> (use wsdl2h option -g to auto-generate type _wsnt__UnacceptableInitialTerminationTimeFault)

  - <wsnt:NoCurrentMessageOnTopicFault> (use wsdl2h option -g to auto-generate type _wsnt__NoCurrentMessageOnTopicFault)

  - <wsnt:GetMessages> @ref _wsnt__GetMessages

  - <wsnt:GetMessagesResponse> @ref _wsnt__GetMessagesResponse

  - <wsnt:DestroyPullPoint> @ref _wsnt__DestroyPullPoint

  - <wsnt:DestroyPullPointResponse> @ref _wsnt__DestroyPullPointResponse

  - <wsnt:UnableToGetMessagesFault> (use wsdl2h option -g to auto-generate type _wsnt__UnableToGetMessagesFault)

  - <wsnt:UnableToDestroyPullPointFault> (use wsdl2h option -g to auto-generate type _wsnt__UnableToDestroyPullPointFault)

  - <wsnt:CreatePullPoint> @ref _wsnt__CreatePullPoint

  - <wsnt:CreatePullPointResponse> @ref _wsnt__CreatePullPointResponse

  - <wsnt:UnableToCreatePullPointFault> (use wsdl2h option -g to auto-generate type _wsnt__UnableToCreatePullPointFault)

  - <wsnt:Renew> @ref _wsnt__Renew

  - <wsnt:RenewResponse> @ref _wsnt__RenewResponse

  - <wsnt:UnacceptableTerminationTimeFault> (use wsdl2h option -g to auto-generate type _wsnt__UnacceptableTerminationTimeFault)

  - <wsnt:Unsubscribe> @ref _wsnt__Unsubscribe

  - <wsnt:UnsubscribeResponse> @ref _wsnt__UnsubscribeResponse

  - <wsnt:UnableToDestroySubscriptionFault> (use wsdl2h option -g to auto-generate type _wsnt__UnableToDestroySubscriptionFault)

  - <wsnt:PauseSubscription> @ref _wsnt__PauseSubscription

  - <wsnt:PauseSubscriptionResponse> @ref _wsnt__PauseSubscriptionResponse

  - <wsnt:ResumeSubscription> @ref _wsnt__ResumeSubscription

  - <wsnt:ResumeSubscriptionResponse> @ref _wsnt__ResumeSubscriptionResponse

  - <wsnt:PauseFailedFault> (use wsdl2h option -g to auto-generate type _wsnt__PauseFailedFault)

  - <wsnt:ResumeFailedFault> (use wsdl2h option -g to auto-generate type _wsnt__ResumeFailedFault)

*/

/**

@section wsrfr Top-level root elements of schema "http://docs.oasis-open.org/wsrf/r-2"

  - <wsrfr:ResourceUnknownFault> (use wsdl2h option -g to auto-generate type _wsrfr__ResourceUnknownFault)

  - <wsrfr:ResourceUnavailableFault> (use wsdl2h option -g to auto-generate type _wsrfr__ResourceUnavailableFault)

*/

/**

@section tls Top-level root elements of schema "http://www.onvif.org/ver10/display/wsdl"

  - <tls:GetServiceCapabilities> @ref _tls__GetServiceCapabilities

  - <tls:GetServiceCapabilitiesResponse> @ref _tls__GetServiceCapabilitiesResponse

  - <tls:Capabilities> (use wsdl2h option -g to auto-generate type _tls__Capabilities)

  - <tls:GetLayout> @ref _tls__GetLayout

  - <tls:GetLayoutResponse> @ref _tls__GetLayoutResponse

  - <tls:SetLayout> @ref _tls__SetLayout

  - <tls:SetLayoutResponse> @ref _tls__SetLayoutResponse

  - <tls:GetDisplayOptions> @ref _tls__GetDisplayOptions

  - <tls:GetDisplayOptionsResponse> @ref _tls__GetDisplayOptionsResponse

  - <tls:GetPaneConfigurations> @ref _tls__GetPaneConfigurations

  - <tls:GetPaneConfigurationsResponse> @ref _tls__GetPaneConfigurationsResponse

  - <tls:GetPaneConfiguration> @ref _tls__GetPaneConfiguration

  - <tls:GetPaneConfigurationResponse> @ref _tls__GetPaneConfigurationResponse

  - <tls:SetPaneConfigurations> @ref _tls__SetPaneConfigurations

  - <tls:SetPaneConfigurationsResponse> @ref _tls__SetPaneConfigurationsResponse

  - <tls:SetPaneConfiguration> @ref _tls__SetPaneConfiguration

  - <tls:SetPaneConfigurationResponse> @ref _tls__SetPaneConfigurationResponse

  - <tls:CreatePaneConfiguration> @ref _tls__CreatePaneConfiguration

  - <tls:CreatePaneConfigurationResponse> @ref _tls__CreatePaneConfigurationResponse

  - <tls:DeletePaneConfiguration> @ref _tls__DeletePaneConfiguration

  - <tls:DeletePaneConfigurationResponse> @ref _tls__DeletePaneConfigurationResponse

*/

/**

@section  Top-level root elements of schema ""

*/

/**

@section wsrfrw Top-level root elements of schema "http://docs.oasis-open.org/wsrf/rw-2"

*/

/**

@section tptz Top-level root elements of schema "http://www.onvif.org/ver20/ptz/wsdl"

  - <tptz:GetServiceCapabilities> @ref _tptz__GetServiceCapabilities

  - <tptz:GetServiceCapabilitiesResponse> @ref _tptz__GetServiceCapabilitiesResponse

  - <tptz:Capabilities> (use wsdl2h option -g to auto-generate type _tptz__Capabilities)

  - <tptz:GetNodes> @ref _tptz__GetNodes

  - <tptz:GetNodesResponse> @ref _tptz__GetNodesResponse

  - <tptz:GetNode> @ref _tptz__GetNode

  - <tptz:GetNodeResponse> @ref _tptz__GetNodeResponse

  - <tptz:GetConfigurations> @ref _tptz__GetConfigurations

  - <tptz:GetConfigurationsResponse> @ref _tptz__GetConfigurationsResponse

  - <tptz:GetConfiguration> @ref _tptz__GetConfiguration

  - <tptz:GetConfigurationResponse> @ref _tptz__GetConfigurationResponse

  - <tptz:SetConfiguration> @ref _tptz__SetConfiguration

  - <tptz:SetConfigurationResponse> @ref _tptz__SetConfigurationResponse

  - <tptz:GetConfigurationOptions> @ref _tptz__GetConfigurationOptions

  - <tptz:GetConfigurationOptionsResponse> @ref _tptz__GetConfigurationOptionsResponse

  - <tptz:SendAuxiliaryCommand> @ref _tptz__SendAuxiliaryCommand

  - <tptz:SendAuxiliaryCommandResponse> @ref _tptz__SendAuxiliaryCommandResponse

  - <tptz:GetPresets> @ref _tptz__GetPresets

  - <tptz:GetPresetsResponse> @ref _tptz__GetPresetsResponse

  - <tptz:SetPreset> @ref _tptz__SetPreset

  - <tptz:SetPresetResponse> @ref _tptz__SetPresetResponse

  - <tptz:RemovePreset> @ref _tptz__RemovePreset

  - <tptz:RemovePresetResponse> @ref _tptz__RemovePresetResponse

  - <tptz:GotoPreset> @ref _tptz__GotoPreset

  - <tptz:GotoPresetResponse> @ref _tptz__GotoPresetResponse

  - <tptz:GetStatus> @ref _tptz__GetStatus

  - <tptz:GetStatusResponse> @ref _tptz__GetStatusResponse

  - <tptz:GotoHomePosition> @ref _tptz__GotoHomePosition

  - <tptz:GotoHomePositionResponse> @ref _tptz__GotoHomePositionResponse

  - <tptz:SetHomePosition> @ref _tptz__SetHomePosition

  - <tptz:SetHomePositionResponse> @ref _tptz__SetHomePositionResponse

  - <tptz:ContinuousMove> @ref _tptz__ContinuousMove

  - <tptz:ContinuousMoveResponse> @ref _tptz__ContinuousMoveResponse

  - <tptz:RelativeMove> @ref _tptz__RelativeMove

  - <tptz:RelativeMoveResponse> @ref _tptz__RelativeMoveResponse

  - <tptz:AbsoluteMove> @ref _tptz__AbsoluteMove

  - <tptz:AbsoluteMoveResponse> @ref _tptz__AbsoluteMoveResponse

  - <tptz:Stop> @ref _tptz__Stop

  - <tptz:StopResponse> @ref _tptz__StopResponse

  - <tptz:GetPresetTours> @ref _tptz__GetPresetTours

  - <tptz:GetPresetToursResponse> @ref _tptz__GetPresetToursResponse

  - <tptz:GetPresetTour> @ref _tptz__GetPresetTour

  - <tptz:GetPresetTourResponse> @ref _tptz__GetPresetTourResponse

  - <tptz:GetPresetTourOptions> @ref _tptz__GetPresetTourOptions

  - <tptz:GetPresetTourOptionsResponse> @ref _tptz__GetPresetTourOptionsResponse

  - <tptz:CreatePresetTour> @ref _tptz__CreatePresetTour

  - <tptz:CreatePresetTourResponse> @ref _tptz__CreatePresetTourResponse

  - <tptz:ModifyPresetTour> @ref _tptz__ModifyPresetTour

  - <tptz:ModifyPresetTourResponse> @ref _tptz__ModifyPresetTourResponse

  - <tptz:OperatePresetTour> @ref _tptz__OperatePresetTour

  - <tptz:OperatePresetTourResponse> @ref _tptz__OperatePresetTourResponse

  - <tptz:RemovePresetTour> @ref _tptz__RemovePresetTour

  - <tptz:RemovePresetTourResponse> @ref _tptz__RemovePresetTourResponse

  - <tptz:GetCompatibleConfigurations> @ref _tptz__GetCompatibleConfigurations

  - <tptz:GetCompatibleConfigurationsResponse> @ref _tptz__GetCompatibleConfigurationsResponse

*/

/**

@section trp Top-level root elements of schema "http://www.onvif.org/ver10/replay/wsdl"

  - <trp:GetServiceCapabilities> @ref _trp__GetServiceCapabilities

  - <trp:GetServiceCapabilitiesResponse> @ref _trp__GetServiceCapabilitiesResponse

  - <trp:Capabilities> (use wsdl2h option -g to auto-generate type _trp__Capabilities)

  - <trp:GetReplayUri> @ref _trp__GetReplayUri

  - <trp:GetReplayUriResponse> @ref _trp__GetReplayUriResponse

  - <trp:SetReplayConfiguration> @ref _trp__SetReplayConfiguration

  - <trp:SetReplayConfigurationResponse> @ref _trp__SetReplayConfigurationResponse

  - <trp:GetReplayConfiguration> @ref _trp__GetReplayConfiguration

  - <trp:GetReplayConfigurationResponse> @ref _trp__GetReplayConfigurationResponse

*/

/**

@section tds Top-level root elements of schema "http://www.onvif.org/ver10/device/wsdl"

  - <tds:GetServices> @ref _tds__GetServices

  - <tds:GetServicesResponse> @ref _tds__GetServicesResponse

  - <tds:GetServiceCapabilities> @ref _tds__GetServiceCapabilities

  - <tds:GetServiceCapabilitiesResponse> @ref _tds__GetServiceCapabilitiesResponse

  - <tds:Capabilities> (use wsdl2h option -g to auto-generate type _tds__Capabilities)

  - <tds:GetDeviceInformation> @ref _tds__GetDeviceInformation

  - <tds:GetDeviceInformationResponse> @ref _tds__GetDeviceInformationResponse

  - <tds:SetSystemDateAndTime> @ref _tds__SetSystemDateAndTime

  - <tds:SetSystemDateAndTimeResponse> @ref _tds__SetSystemDateAndTimeResponse

  - <tds:GetSystemDateAndTime> @ref _tds__GetSystemDateAndTime

  - <tds:GetSystemDateAndTimeResponse> @ref _tds__GetSystemDateAndTimeResponse

  - <tds:SetSystemFactoryDefault> @ref _tds__SetSystemFactoryDefault

  - <tds:SetSystemFactoryDefaultResponse> @ref _tds__SetSystemFactoryDefaultResponse

  - <tds:UpgradeSystemFirmware> @ref _tds__UpgradeSystemFirmware

  - <tds:UpgradeSystemFirmwareResponse> @ref _tds__UpgradeSystemFirmwareResponse

  - <tds:SystemReboot> @ref _tds__SystemReboot

  - <tds:SystemRebootResponse> @ref _tds__SystemRebootResponse

  - <tds:RestoreSystem> @ref _tds__RestoreSystem

  - <tds:RestoreSystemResponse> @ref _tds__RestoreSystemResponse

  - <tds:GetSystemBackup> @ref _tds__GetSystemBackup

  - <tds:GetSystemBackupResponse> @ref _tds__GetSystemBackupResponse

  - <tds:GetSystemSupportInformation> @ref _tds__GetSystemSupportInformation

  - <tds:GetSystemSupportInformationResponse> @ref _tds__GetSystemSupportInformationResponse

  - <tds:GetSystemLog> @ref _tds__GetSystemLog

  - <tds:GetSystemLogResponse> @ref _tds__GetSystemLogResponse

  - <tds:GetScopes> @ref _tds__GetScopes

  - <tds:GetScopesResponse> @ref _tds__GetScopesResponse

  - <tds:SetScopes> @ref _tds__SetScopes

  - <tds:SetScopesResponse> @ref _tds__SetScopesResponse

  - <tds:AddScopes> @ref _tds__AddScopes

  - <tds:AddScopesResponse> @ref _tds__AddScopesResponse

  - <tds:RemoveScopes> @ref _tds__RemoveScopes

  - <tds:RemoveScopesResponse> @ref _tds__RemoveScopesResponse

  - <tds:GetDiscoveryMode> @ref _tds__GetDiscoveryMode

  - <tds:GetDiscoveryModeResponse> @ref _tds__GetDiscoveryModeResponse

  - <tds:SetDiscoveryMode> @ref _tds__SetDiscoveryMode

  - <tds:SetDiscoveryModeResponse> @ref _tds__SetDiscoveryModeResponse

  - <tds:GetRemoteDiscoveryMode> @ref _tds__GetRemoteDiscoveryMode

  - <tds:GetRemoteDiscoveryModeResponse> @ref _tds__GetRemoteDiscoveryModeResponse

  - <tds:SetRemoteDiscoveryMode> @ref _tds__SetRemoteDiscoveryMode

  - <tds:SetRemoteDiscoveryModeResponse> @ref _tds__SetRemoteDiscoveryModeResponse

  - <tds:GetDPAddresses> @ref _tds__GetDPAddresses

  - <tds:GetDPAddressesResponse> @ref _tds__GetDPAddressesResponse

  - <tds:SetDPAddresses> @ref _tds__SetDPAddresses

  - <tds:SetDPAddressesResponse> @ref _tds__SetDPAddressesResponse

  - <tds:GetEndpointReference> @ref _tds__GetEndpointReference

  - <tds:GetEndpointReferenceResponse> @ref _tds__GetEndpointReferenceResponse

  - <tds:GetRemoteUser> @ref _tds__GetRemoteUser

  - <tds:GetRemoteUserResponse> @ref _tds__GetRemoteUserResponse

  - <tds:SetRemoteUser> @ref _tds__SetRemoteUser

  - <tds:SetRemoteUserResponse> @ref _tds__SetRemoteUserResponse

  - <tds:GetUsers> @ref _tds__GetUsers

  - <tds:GetUsersResponse> @ref _tds__GetUsersResponse

  - <tds:CreateUsers> @ref _tds__CreateUsers

  - <tds:CreateUsersResponse> @ref _tds__CreateUsersResponse

  - <tds:DeleteUsers> @ref _tds__DeleteUsers

  - <tds:DeleteUsersResponse> @ref _tds__DeleteUsersResponse

  - <tds:SetUser> @ref _tds__SetUser

  - <tds:SetUserResponse> @ref _tds__SetUserResponse

  - <tds:GetWsdlUrl> @ref _tds__GetWsdlUrl

  - <tds:GetWsdlUrlResponse> @ref _tds__GetWsdlUrlResponse

  - <tds:GetCapabilities> @ref _tds__GetCapabilities

  - <tds:GetCapabilitiesResponse> @ref _tds__GetCapabilitiesResponse

  - <tds:GetHostname> @ref _tds__GetHostname

  - <tds:GetHostnameResponse> @ref _tds__GetHostnameResponse

  - <tds:SetHostname> @ref _tds__SetHostname

  - <tds:SetHostnameResponse> @ref _tds__SetHostnameResponse

  - <tds:SetHostnameFromDHCP> @ref _tds__SetHostnameFromDHCP

  - <tds:SetHostnameFromDHCPResponse> @ref _tds__SetHostnameFromDHCPResponse

  - <tds:GetDNS> @ref _tds__GetDNS

  - <tds:GetDNSResponse> @ref _tds__GetDNSResponse

  - <tds:SetDNS> @ref _tds__SetDNS

  - <tds:SetDNSResponse> @ref _tds__SetDNSResponse

  - <tds:GetNTP> @ref _tds__GetNTP

  - <tds:GetNTPResponse> @ref _tds__GetNTPResponse

  - <tds:SetNTP> @ref _tds__SetNTP

  - <tds:SetNTPResponse> @ref _tds__SetNTPResponse

  - <tds:GetDynamicDNS> @ref _tds__GetDynamicDNS

  - <tds:GetDynamicDNSResponse> @ref _tds__GetDynamicDNSResponse

  - <tds:SetDynamicDNS> @ref _tds__SetDynamicDNS

  - <tds:SetDynamicDNSResponse> @ref _tds__SetDynamicDNSResponse

  - <tds:GetNetworkInterfaces> @ref _tds__GetNetworkInterfaces

  - <tds:GetNetworkInterfacesResponse> @ref _tds__GetNetworkInterfacesResponse

  - <tds:SetNetworkInterfaces> @ref _tds__SetNetworkInterfaces

  - <tds:SetNetworkInterfacesResponse> @ref _tds__SetNetworkInterfacesResponse

  - <tds:GetNetworkProtocols> @ref _tds__GetNetworkProtocols

  - <tds:GetNetworkProtocolsResponse> @ref _tds__GetNetworkProtocolsResponse

  - <tds:SetNetworkProtocols> @ref _tds__SetNetworkProtocols

  - <tds:SetNetworkProtocolsResponse> @ref _tds__SetNetworkProtocolsResponse

  - <tds:GetNetworkDefaultGateway> @ref _tds__GetNetworkDefaultGateway

  - <tds:GetNetworkDefaultGatewayResponse> @ref _tds__GetNetworkDefaultGatewayResponse

  - <tds:SetNetworkDefaultGateway> @ref _tds__SetNetworkDefaultGateway

  - <tds:SetNetworkDefaultGatewayResponse> @ref _tds__SetNetworkDefaultGatewayResponse

  - <tds:GetZeroConfiguration> @ref _tds__GetZeroConfiguration

  - <tds:GetZeroConfigurationResponse> @ref _tds__GetZeroConfigurationResponse

  - <tds:SetZeroConfiguration> @ref _tds__SetZeroConfiguration

  - <tds:SetZeroConfigurationResponse> @ref _tds__SetZeroConfigurationResponse

  - <tds:GetIPAddressFilter> @ref _tds__GetIPAddressFilter

  - <tds:GetIPAddressFilterResponse> @ref _tds__GetIPAddressFilterResponse

  - <tds:SetIPAddressFilter> @ref _tds__SetIPAddressFilter

  - <tds:SetIPAddressFilterResponse> @ref _tds__SetIPAddressFilterResponse

  - <tds:AddIPAddressFilter> @ref _tds__AddIPAddressFilter

  - <tds:AddIPAddressFilterResponse> @ref _tds__AddIPAddressFilterResponse

  - <tds:RemoveIPAddressFilter> @ref _tds__RemoveIPAddressFilter

  - <tds:RemoveIPAddressFilterResponse> @ref _tds__RemoveIPAddressFilterResponse

  - <tds:GetAccessPolicy> @ref _tds__GetAccessPolicy

  - <tds:GetAccessPolicyResponse> @ref _tds__GetAccessPolicyResponse

  - <tds:SetAccessPolicy> @ref _tds__SetAccessPolicy

  - <tds:SetAccessPolicyResponse> @ref _tds__SetAccessPolicyResponse

  - <tds:CreateCertificate> @ref _tds__CreateCertificate

  - <tds:CreateCertificateResponse> @ref _tds__CreateCertificateResponse

  - <tds:GetCertificates> @ref _tds__GetCertificates

  - <tds:GetCertificatesResponse> @ref _tds__GetCertificatesResponse

  - <tds:GetCertificatesStatus> @ref _tds__GetCertificatesStatus

  - <tds:GetCertificatesStatusResponse> @ref _tds__GetCertificatesStatusResponse

  - <tds:SetCertificatesStatus> @ref _tds__SetCertificatesStatus

  - <tds:SetCertificatesStatusResponse> @ref _tds__SetCertificatesStatusResponse

  - <tds:DeleteCertificates> @ref _tds__DeleteCertificates

  - <tds:DeleteCertificatesResponse> @ref _tds__DeleteCertificatesResponse

  - <tds:GetPkcs10Request> @ref _tds__GetPkcs10Request

  - <tds:GetPkcs10RequestResponse> @ref _tds__GetPkcs10RequestResponse

  - <tds:LoadCertificates> @ref _tds__LoadCertificates

  - <tds:LoadCertificatesResponse> @ref _tds__LoadCertificatesResponse

  - <tds:GetClientCertificateMode> @ref _tds__GetClientCertificateMode

  - <tds:GetClientCertificateModeResponse> @ref _tds__GetClientCertificateModeResponse

  - <tds:SetClientCertificateMode> @ref _tds__SetClientCertificateMode

  - <tds:SetClientCertificateModeResponse> @ref _tds__SetClientCertificateModeResponse

  - <tds:GetCACertificates> @ref _tds__GetCACertificates

  - <tds:GetCACertificatesResponse> @ref _tds__GetCACertificatesResponse

  - <tds:LoadCertificateWithPrivateKey> @ref _tds__LoadCertificateWithPrivateKey

  - <tds:LoadCertificateWithPrivateKeyResponse> @ref _tds__LoadCertificateWithPrivateKeyResponse

  - <tds:GetCertificateInformation> @ref _tds__GetCertificateInformation

  - <tds:GetCertificateInformationResponse> @ref _tds__GetCertificateInformationResponse

  - <tds:LoadCACertificates> @ref _tds__LoadCACertificates

  - <tds:LoadCACertificatesResponse> @ref _tds__LoadCACertificatesResponse

  - <tds:CreateDot1XConfiguration> @ref _tds__CreateDot1XConfiguration

  - <tds:CreateDot1XConfigurationResponse> @ref _tds__CreateDot1XConfigurationResponse

  - <tds:SetDot1XConfiguration> @ref _tds__SetDot1XConfiguration

  - <tds:SetDot1XConfigurationResponse> @ref _tds__SetDot1XConfigurationResponse

  - <tds:GetDot1XConfiguration> @ref _tds__GetDot1XConfiguration

  - <tds:GetDot1XConfigurationResponse> @ref _tds__GetDot1XConfigurationResponse

  - <tds:GetDot1XConfigurations> @ref _tds__GetDot1XConfigurations

  - <tds:GetDot1XConfigurationsResponse> @ref _tds__GetDot1XConfigurationsResponse

  - <tds:DeleteDot1XConfiguration> @ref _tds__DeleteDot1XConfiguration

  - <tds:DeleteDot1XConfigurationResponse> @ref _tds__DeleteDot1XConfigurationResponse

  - <tds:GetRelayOutputs> @ref _tds__GetRelayOutputs

  - <tds:GetRelayOutputsResponse> @ref _tds__GetRelayOutputsResponse

  - <tds:SetRelayOutputSettings> @ref _tds__SetRelayOutputSettings

  - <tds:SetRelayOutputSettingsResponse> @ref _tds__SetRelayOutputSettingsResponse

  - <tds:SetRelayOutputState> @ref _tds__SetRelayOutputState

  - <tds:SetRelayOutputStateResponse> @ref _tds__SetRelayOutputStateResponse

  - <tds:SendAuxiliaryCommand> @ref _tds__SendAuxiliaryCommand

  - <tds:SendAuxiliaryCommandResponse> @ref _tds__SendAuxiliaryCommandResponse

  - <tds:GetDot11Capabilities> @ref _tds__GetDot11Capabilities

  - <tds:GetDot11CapabilitiesResponse> @ref _tds__GetDot11CapabilitiesResponse

  - <tds:GetDot11Status> @ref _tds__GetDot11Status

  - <tds:GetDot11StatusResponse> @ref _tds__GetDot11StatusResponse

  - <tds:ScanAvailableDot11Networks> @ref _tds__ScanAvailableDot11Networks

  - <tds:ScanAvailableDot11NetworksResponse> @ref _tds__ScanAvailableDot11NetworksResponse

  - <tds:GetSystemUris> @ref _tds__GetSystemUris

  - <tds:GetSystemUrisResponse> @ref _tds__GetSystemUrisResponse

  - <tds:StartFirmwareUpgrade> @ref _tds__StartFirmwareUpgrade

  - <tds:StartFirmwareUpgradeResponse> @ref _tds__StartFirmwareUpgradeResponse

  - <tds:StartSystemRestore> @ref _tds__StartSystemRestore

  - <tds:StartSystemRestoreResponse> @ref _tds__StartSystemRestoreResponse

  - <tds:GetStorageConfigurations> @ref _tds__GetStorageConfigurations

  - <tds:GetStorageConfigurationsResponse> @ref _tds__GetStorageConfigurationsResponse

  - <tds:CreateStorageConfiguration> @ref _tds__CreateStorageConfiguration

  - <tds:CreateStorageConfigurationResponse> @ref _tds__CreateStorageConfigurationResponse

  - <tds:GetStorageConfiguration> @ref _tds__GetStorageConfiguration

  - <tds:GetStorageConfigurationResponse> @ref _tds__GetStorageConfigurationResponse

  - <tds:SetStorageConfiguration> @ref _tds__SetStorageConfiguration

  - <tds:SetStorageConfigurationResponse> @ref _tds__SetStorageConfigurationResponse

  - <tds:DeleteStorageConfiguration> @ref _tds__DeleteStorageConfiguration

  - <tds:DeleteStorageConfigurationResponse> @ref _tds__DeleteStorageConfigurationResponse

  - <tds:GetGeoLocation> @ref _tds__GetGeoLocation

  - <tds:GetGeoLocationResponse> @ref _tds__GetGeoLocationResponse

  - <tds:SetGeoLocation> @ref _tds__SetGeoLocation

  - <tds:SetGeoLocationResponse> @ref _tds__SetGeoLocationResponse

  - <tds:DeleteGeoLocation> @ref _tds__DeleteGeoLocation

  - <tds:DeleteGeoLocationResponse> @ref _tds__DeleteGeoLocationResponse

*/

/**

@section tmd Top-level root elements of schema "http://www.onvif.org/ver10/deviceIO/wsdl"

  - <tmd:GetServiceCapabilities> @ref _tmd__GetServiceCapabilities

  - <tmd:GetServiceCapabilitiesResponse> @ref _tmd__GetServiceCapabilitiesResponse

  - <tmd:Capabilities> (use wsdl2h option -g to auto-generate type _tmd__Capabilities)

  - <tmd:GetRelayOutputOptions> @ref _tmd__GetRelayOutputOptions

  - <tmd:GetRelayOutputOptionsResponse> @ref _tmd__GetRelayOutputOptionsResponse

  - <tmd:GetVideoSources> (use wsdl2h option -g to auto-generate type _tmd__GetVideoSources)

  - <tmd:GetVideoSourcesResponse> (use wsdl2h option -g to auto-generate type _tmd__GetVideoSourcesResponse)

  - <tmd:GetAudioSources> (use wsdl2h option -g to auto-generate type _tmd__GetAudioSources)

  - <tmd:GetAudioSourcesResponse> (use wsdl2h option -g to auto-generate type _tmd__GetAudioSourcesResponse)

  - <tmd:GetAudioOutputs> (use wsdl2h option -g to auto-generate type _tmd__GetAudioOutputs)

  - <tmd:GetAudioOutputsResponse> (use wsdl2h option -g to auto-generate type _tmd__GetAudioOutputsResponse)

  - <tmd:GetVideoOutputs> @ref _tmd__GetVideoOutputs

  - <tmd:GetVideoOutputsResponse> @ref _tmd__GetVideoOutputsResponse

  - <tmd:GetAudioSourceConfiguration> @ref _tmd__GetAudioSourceConfiguration

  - <tmd:GetAudioSourceConfigurationResponse> @ref _tmd__GetAudioSourceConfigurationResponse

  - <tmd:GetAudioOutputConfiguration> @ref _tmd__GetAudioOutputConfiguration

  - <tmd:GetAudioOutputConfigurationResponse> @ref _tmd__GetAudioOutputConfigurationResponse

  - <tmd:GetVideoSourceConfiguration> @ref _tmd__GetVideoSourceConfiguration

  - <tmd:GetVideoSourceConfigurationResponse> @ref _tmd__GetVideoSourceConfigurationResponse

  - <tmd:GetVideoOutputConfiguration> @ref _tmd__GetVideoOutputConfiguration

  - <tmd:GetVideoOutputConfigurationResponse> @ref _tmd__GetVideoOutputConfigurationResponse

  - <tmd:SetAudioSourceConfiguration> @ref _tmd__SetAudioSourceConfiguration

  - <tmd:SetAudioSourceConfigurationResponse> @ref _tmd__SetAudioSourceConfigurationResponse

  - <tmd:SetAudioOutputConfiguration> @ref _tmd__SetAudioOutputConfiguration

  - <tmd:SetAudioOutputConfigurationResponse> @ref _tmd__SetAudioOutputConfigurationResponse

  - <tmd:SetVideoSourceConfiguration> @ref _tmd__SetVideoSourceConfiguration

  - <tmd:SetVideoSourceConfigurationResponse> @ref _tmd__SetVideoSourceConfigurationResponse

  - <tmd:SetVideoOutputConfiguration> @ref _tmd__SetVideoOutputConfiguration

  - <tmd:SetVideoOutputConfigurationResponse> @ref _tmd__SetVideoOutputConfigurationResponse

  - <tmd:GetVideoSourceConfigurationOptions> @ref _tmd__GetVideoSourceConfigurationOptions

  - <tmd:GetVideoSourceConfigurationOptionsResponse> @ref _tmd__GetVideoSourceConfigurationOptionsResponse

  - <tmd:GetVideoOutputConfigurationOptions> @ref _tmd__GetVideoOutputConfigurationOptions

  - <tmd:GetVideoOutputConfigurationOptionsResponse> @ref _tmd__GetVideoOutputConfigurationOptionsResponse

  - <tmd:GetAudioSourceConfigurationOptions> @ref _tmd__GetAudioSourceConfigurationOptions

  - <tmd:GetAudioSourceConfigurationOptionsResponse> @ref _tmd__GetAudioSourceConfigurationOptionsResponse

  - <tmd:GetAudioOutputConfigurationOptions> @ref _tmd__GetAudioOutputConfigurationOptions

  - <tmd:GetAudioOutputConfigurationOptionsResponse> @ref _tmd__GetAudioOutputConfigurationOptionsResponse

  - <tmd:SetRelayOutputSettings> @ref _tmd__SetRelayOutputSettings

  - <tmd:SetRelayOutputSettingsResponse> @ref _tmd__SetRelayOutputSettingsResponse

  - <tmd:GetDigitalInputs> @ref _tmd__GetDigitalInputs

  - <tmd:GetDigitalInputsResponse> @ref _tmd__GetDigitalInputsResponse

  - <tmd:GetDigitalInputConfigurationOptions> @ref _tmd__GetDigitalInputConfigurationOptions

  - <tmd:GetDigitalInputConfigurationOptionsResponse> @ref _tmd__GetDigitalInputConfigurationOptionsResponse

  - <tmd:SetDigitalInputConfigurations> @ref _tmd__SetDigitalInputConfigurations

  - <tmd:SetDigitalInputConfigurationsResponse> @ref _tmd__SetDigitalInputConfigurationsResponse

  - <tmd:GetSerialPorts> @ref _tmd__GetSerialPorts

  - <tmd:GetSerialPortsResponse> @ref _tmd__GetSerialPortsResponse

  - <tmd:GetSerialPortConfiguration> @ref _tmd__GetSerialPortConfiguration

  - <tmd:GetSerialPortConfigurationResponse> @ref _tmd__GetSerialPortConfigurationResponse

  - <tmd:SetSerialPortConfiguration> @ref _tmd__SetSerialPortConfiguration

  - <tmd:SetSerialPortConfigurationResponse> @ref _tmd__SetSerialPortConfigurationResponse

  - <tmd:GetSerialPortConfigurationOptions> @ref _tmd__GetSerialPortConfigurationOptions

  - <tmd:GetSerialPortConfigurationOptionsResponse> @ref _tmd__GetSerialPortConfigurationOptionsResponse

  - <tmd:SendReceiveSerialCommand> @ref _tmd__SendReceiveSerialCommand

  - <tmd:SendReceiveSerialCommandResponse> @ref _tmd__SendReceiveSerialCommandResponse

*/

/**

@section tev Top-level root elements of schema "http://www.onvif.org/ver10/events/wsdl"

  - <tev:GetServiceCapabilities> @ref _tev__GetServiceCapabilities

  - <tev:GetServiceCapabilitiesResponse> @ref _tev__GetServiceCapabilitiesResponse

  - <tev:Capabilities> (use wsdl2h option -g to auto-generate type _tev__Capabilities)

  - <tev:CreatePullPointSubscription> @ref _tev__CreatePullPointSubscription

  - <tev:CreatePullPointSubscriptionResponse> @ref _tev__CreatePullPointSubscriptionResponse

  - <tev:PullMessages> @ref _tev__PullMessages

  - <tev:PullMessagesResponse> @ref _tev__PullMessagesResponse

  - <tev:PullMessagesFaultResponse> @ref _tev__PullMessagesFaultResponse

  - <tev:Seek> @ref _tev__Seek

  - <tev:SeekResponse> @ref _tev__SeekResponse

  - <tev:SetSynchronizationPoint> @ref _tev__SetSynchronizationPoint

  - <tev:SetSynchronizationPointResponse> @ref _tev__SetSynchronizationPointResponse

  - <tev:GetEventProperties> @ref _tev__GetEventProperties

  - <tev:GetEventPropertiesResponse> @ref _tev__GetEventPropertiesResponse

*/

/**

@section trv Top-level root elements of schema "http://www.onvif.org/ver10/receiver/wsdl"

  - <trv:GetServiceCapabilities> @ref _trv__GetServiceCapabilities

  - <trv:GetServiceCapabilitiesResponse> @ref _trv__GetServiceCapabilitiesResponse

  - <trv:Capabilities> (use wsdl2h option -g to auto-generate type _trv__Capabilities)

  - <trv:GetReceivers> @ref _trv__GetReceivers

  - <trv:GetReceiversResponse> @ref _trv__GetReceiversResponse

  - <trv:GetReceiver> @ref _trv__GetReceiver

  - <trv:GetReceiverResponse> @ref _trv__GetReceiverResponse

  - <trv:CreateReceiver> @ref _trv__CreateReceiver

  - <trv:CreateReceiverResponse> @ref _trv__CreateReceiverResponse

  - <trv:DeleteReceiver> @ref _trv__DeleteReceiver

  - <trv:DeleteReceiverResponse> @ref _trv__DeleteReceiverResponse

  - <trv:ConfigureReceiver> @ref _trv__ConfigureReceiver

  - <trv:ConfigureReceiverResponse> @ref _trv__ConfigureReceiverResponse

  - <trv:SetReceiverMode> @ref _trv__SetReceiverMode

  - <trv:SetReceiverModeResponse> @ref _trv__SetReceiverModeResponse

  - <trv:GetReceiverState> @ref _trv__GetReceiverState

  - <trv:GetReceiverStateResponse> @ref _trv__GetReceiverStateResponse

*/

/**

@section wstop Top-level root elements of schema "http://docs.oasis-open.org/wsn/t-1"

  - <wstop:TopicNamespace> (use wsdl2h option -g to auto-generate type _wstop__TopicNamespace)

  - <wstop:TopicSet> (use wsdl2h option -g to auto-generate type _wstop__TopicSet)

*/

/**

@section xop Top-level root elements of schema "http://www.w3.org/2004/08/xop/include"

  - <xop:Include> (use wsdl2h option -g to auto-generate type _xop__Include)

*/

/**

@section trc Top-level root elements of schema "http://www.onvif.org/ver10/recording/wsdl"

  - <trc:GetServiceCapabilities> @ref _trc__GetServiceCapabilities

  - <trc:GetServiceCapabilitiesResponse> @ref _trc__GetServiceCapabilitiesResponse

  - <trc:Capabilities> (use wsdl2h option -g to auto-generate type _trc__Capabilities)

  - <trc:CreateRecording> @ref _trc__CreateRecording

  - <trc:CreateRecordingResponse> @ref _trc__CreateRecordingResponse

  - <trc:DeleteRecording> @ref _trc__DeleteRecording

  - <trc:DeleteRecordingResponse> @ref _trc__DeleteRecordingResponse

  - <trc:GetRecordings> @ref _trc__GetRecordings

  - <trc:GetRecordingsResponse> @ref _trc__GetRecordingsResponse

  - <trc:SetRecordingConfiguration> @ref _trc__SetRecordingConfiguration

  - <trc:SetRecordingConfigurationResponse> @ref _trc__SetRecordingConfigurationResponse

  - <trc:GetRecordingConfiguration> @ref _trc__GetRecordingConfiguration

  - <trc:GetRecordingConfigurationResponse> @ref _trc__GetRecordingConfigurationResponse

  - <trc:CreateTrack> @ref _trc__CreateTrack

  - <trc:CreateTrackResponse> @ref _trc__CreateTrackResponse

  - <trc:DeleteTrack> @ref _trc__DeleteTrack

  - <trc:DeleteTrackResponse> @ref _trc__DeleteTrackResponse

  - <trc:GetTrackConfiguration> @ref _trc__GetTrackConfiguration

  - <trc:GetTrackConfigurationResponse> @ref _trc__GetTrackConfigurationResponse

  - <trc:SetTrackConfiguration> @ref _trc__SetTrackConfiguration

  - <trc:SetTrackConfigurationResponse> @ref _trc__SetTrackConfigurationResponse

  - <trc:CreateRecordingJob> @ref _trc__CreateRecordingJob

  - <trc:CreateRecordingJobResponse> @ref _trc__CreateRecordingJobResponse

  - <trc:DeleteRecordingJob> @ref _trc__DeleteRecordingJob

  - <trc:DeleteRecordingJobResponse> @ref _trc__DeleteRecordingJobResponse

  - <trc:GetRecordingJobs> @ref _trc__GetRecordingJobs

  - <trc:GetRecordingJobsResponse> @ref _trc__GetRecordingJobsResponse

  - <trc:SetRecordingJobConfiguration> @ref _trc__SetRecordingJobConfiguration

  - <trc:SetRecordingJobConfigurationResponse> @ref _trc__SetRecordingJobConfigurationResponse

  - <trc:GetRecordingJobConfiguration> @ref _trc__GetRecordingJobConfiguration

  - <trc:GetRecordingJobConfigurationResponse> @ref _trc__GetRecordingJobConfigurationResponse

  - <trc:SetRecordingJobMode> @ref _trc__SetRecordingJobMode

  - <trc:SetRecordingJobModeResponse> @ref _trc__SetRecordingJobModeResponse

  - <trc:GetRecordingJobState> @ref _trc__GetRecordingJobState

  - <trc:GetRecordingJobStateResponse> @ref _trc__GetRecordingJobStateResponse

  - <trc:GetRecordingOptions> @ref _trc__GetRecordingOptions

  - <trc:GetRecordingOptionsResponse> @ref _trc__GetRecordingOptionsResponse

  - <trc:ExportRecordedData> @ref _trc__ExportRecordedData

  - <trc:ExportRecordedDataResponse> @ref _trc__ExportRecordedDataResponse

  - <trc:StopExportRecordedData> @ref _trc__StopExportRecordedData

  - <trc:StopExportRecordedDataResponse> @ref _trc__StopExportRecordedDataResponse

  - <trc:GetExportRecordedDataState> @ref _trc__GetExportRecordedDataState

  - <trc:GetExportRecordedDataStateResponse> @ref _trc__GetExportRecordedDataStateResponse

*/

/**

@section tt Top-level root elements of schema "http://www.onvif.org/ver10/schema"

  - <tt:Polygon> (use wsdl2h option -g to auto-generate type _tt__Polygon)

  - <tt:StringItems> @ref _tt__StringItems

  - <tt:StringList> (use wsdl2h option -g to auto-generate type _tt__StringList)

  - <tt:IntRange> (use wsdl2h option -g to auto-generate type _tt__IntRange)

  - <tt:IntList> (use wsdl2h option -g to auto-generate type _tt__IntList)

  - <tt:FloatRange> (use wsdl2h option -g to auto-generate type _tt__FloatRange)

  - <tt:FloatList> (use wsdl2h option -g to auto-generate type _tt__FloatList)

  - <tt:DurationRange> (use wsdl2h option -g to auto-generate type _tt__DurationRange)

  - <tt:IntRectangleRange> (use wsdl2h option -g to auto-generate type _tt__IntRectangleRange)

  - <tt:VideoSourceConfiguration> (use wsdl2h option -g to auto-generate type _tt__VideoSourceConfiguration)

  - <tt:AudioSourceConfiguration> (use wsdl2h option -g to auto-generate type _tt__AudioSourceConfiguration)

  - <tt:VideoEncoderConfiguration> (use wsdl2h option -g to auto-generate type _tt__VideoEncoderConfiguration)

  - <tt:AudioEncoderConfiguration> (use wsdl2h option -g to auto-generate type _tt__AudioEncoderConfiguration)

  - <tt:VideoAnalyticsConfiguration> (use wsdl2h option -g to auto-generate type _tt__VideoAnalyticsConfiguration)

  - <tt:PTZConfiguration> (use wsdl2h option -g to auto-generate type _tt__PTZConfiguration)

  - <tt:MetadataConfiguration> (use wsdl2h option -g to auto-generate type _tt__MetadataConfiguration)

  - <tt:AudioOutputConfiguration> (use wsdl2h option -g to auto-generate type _tt__AudioOutputConfiguration)

  - <tt:AudioDecoderConfiguration> (use wsdl2h option -g to auto-generate type _tt__AudioDecoderConfiguration)

  - <tt:Message> @ref _tt__Message

  - <tt:Polyline> (use wsdl2h option -g to auto-generate type _tt__Polyline)

  - <tt:PolygonOptions> (use wsdl2h option -g to auto-generate type _tt__PolygonOptions)

*/

/**

@section trt Top-level root elements of schema "http://www.onvif.org/ver10/media/wsdl"

  - <trt:GetServiceCapabilities> @ref _trt__GetServiceCapabilities

  - <trt:GetServiceCapabilitiesResponse> @ref _trt__GetServiceCapabilitiesResponse

  - <trt:Capabilities> (use wsdl2h option -g to auto-generate type _trt__Capabilities)

  - <trt:GetVideoSources> @ref _trt__GetVideoSources

  - <trt:GetVideoSourcesResponse> @ref _trt__GetVideoSourcesResponse

  - <trt:GetAudioSources> @ref _trt__GetAudioSources

  - <trt:GetAudioSourcesResponse> @ref _trt__GetAudioSourcesResponse

  - <trt:GetAudioOutputs> @ref _trt__GetAudioOutputs

  - <trt:GetAudioOutputsResponse> @ref _trt__GetAudioOutputsResponse

  - <trt:CreateProfile> @ref _trt__CreateProfile

  - <trt:CreateProfileResponse> @ref _trt__CreateProfileResponse

  - <trt:GetProfile> @ref _trt__GetProfile

  - <trt:GetProfileResponse> @ref _trt__GetProfileResponse

  - <trt:GetProfiles> @ref _trt__GetProfiles

  - <trt:GetProfilesResponse> @ref _trt__GetProfilesResponse

  - <trt:AddVideoEncoderConfiguration> @ref _trt__AddVideoEncoderConfiguration

  - <trt:AddVideoEncoderConfigurationResponse> @ref _trt__AddVideoEncoderConfigurationResponse

  - <trt:RemoveVideoEncoderConfiguration> @ref _trt__RemoveVideoEncoderConfiguration

  - <trt:RemoveVideoEncoderConfigurationResponse> @ref _trt__RemoveVideoEncoderConfigurationResponse

  - <trt:AddVideoSourceConfiguration> @ref _trt__AddVideoSourceConfiguration

  - <trt:AddVideoSourceConfigurationResponse> @ref _trt__AddVideoSourceConfigurationResponse

  - <trt:RemoveVideoSourceConfiguration> @ref _trt__RemoveVideoSourceConfiguration

  - <trt:RemoveVideoSourceConfigurationResponse> @ref _trt__RemoveVideoSourceConfigurationResponse

  - <trt:AddAudioEncoderConfiguration> @ref _trt__AddAudioEncoderConfiguration

  - <trt:AddAudioEncoderConfigurationResponse> @ref _trt__AddAudioEncoderConfigurationResponse

  - <trt:RemoveAudioEncoderConfiguration> @ref _trt__RemoveAudioEncoderConfiguration

  - <trt:RemoveAudioEncoderConfigurationResponse> @ref _trt__RemoveAudioEncoderConfigurationResponse

  - <trt:AddAudioSourceConfiguration> @ref _trt__AddAudioSourceConfiguration

  - <trt:AddAudioSourceConfigurationResponse> @ref _trt__AddAudioSourceConfigurationResponse

  - <trt:RemoveAudioSourceConfiguration> @ref _trt__RemoveAudioSourceConfiguration

  - <trt:RemoveAudioSourceConfigurationResponse> @ref _trt__RemoveAudioSourceConfigurationResponse

  - <trt:AddPTZConfiguration> @ref _trt__AddPTZConfiguration

  - <trt:AddPTZConfigurationResponse> @ref _trt__AddPTZConfigurationResponse

  - <trt:RemovePTZConfiguration> @ref _trt__RemovePTZConfiguration

  - <trt:RemovePTZConfigurationResponse> @ref _trt__RemovePTZConfigurationResponse

  - <trt:AddVideoAnalyticsConfiguration> @ref _trt__AddVideoAnalyticsConfiguration

  - <trt:AddVideoAnalyticsConfigurationResponse> @ref _trt__AddVideoAnalyticsConfigurationResponse

  - <trt:RemoveVideoAnalyticsConfiguration> @ref _trt__RemoveVideoAnalyticsConfiguration

  - <trt:RemoveVideoAnalyticsConfigurationResponse> @ref _trt__RemoveVideoAnalyticsConfigurationResponse

  - <trt:AddMetadataConfiguration> @ref _trt__AddMetadataConfiguration

  - <trt:AddMetadataConfigurationResponse> @ref _trt__AddMetadataConfigurationResponse

  - <trt:RemoveMetadataConfiguration> @ref _trt__RemoveMetadataConfiguration

  - <trt:RemoveMetadataConfigurationResponse> @ref _trt__RemoveMetadataConfigurationResponse

  - <trt:AddAudioOutputConfiguration> @ref _trt__AddAudioOutputConfiguration

  - <trt:AddAudioOutputConfigurationResponse> @ref _trt__AddAudioOutputConfigurationResponse

  - <trt:RemoveAudioOutputConfiguration> @ref _trt__RemoveAudioOutputConfiguration

  - <trt:RemoveAudioOutputConfigurationResponse> @ref _trt__RemoveAudioOutputConfigurationResponse

  - <trt:AddAudioDecoderConfiguration> @ref _trt__AddAudioDecoderConfiguration

  - <trt:AddAudioDecoderConfigurationResponse> @ref _trt__AddAudioDecoderConfigurationResponse

  - <trt:RemoveAudioDecoderConfiguration> @ref _trt__RemoveAudioDecoderConfiguration

  - <trt:RemoveAudioDecoderConfigurationResponse> @ref _trt__RemoveAudioDecoderConfigurationResponse

  - <trt:DeleteProfile> @ref _trt__DeleteProfile

  - <trt:DeleteProfileResponse> @ref _trt__DeleteProfileResponse

  - <trt:GetVideoEncoderConfigurations> @ref _trt__GetVideoEncoderConfigurations

  - <trt:GetVideoEncoderConfigurationsResponse> @ref _trt__GetVideoEncoderConfigurationsResponse

  - <trt:GetVideoSourceConfigurations> @ref _trt__GetVideoSourceConfigurations

  - <trt:GetVideoSourceConfigurationsResponse> @ref _trt__GetVideoSourceConfigurationsResponse

  - <trt:GetAudioEncoderConfigurations> @ref _trt__GetAudioEncoderConfigurations

  - <trt:GetAudioEncoderConfigurationsResponse> @ref _trt__GetAudioEncoderConfigurationsResponse

  - <trt:GetAudioSourceConfigurations> @ref _trt__GetAudioSourceConfigurations

  - <trt:GetAudioSourceConfigurationsResponse> @ref _trt__GetAudioSourceConfigurationsResponse

  - <trt:GetVideoAnalyticsConfigurations> @ref _trt__GetVideoAnalyticsConfigurations

  - <trt:GetVideoAnalyticsConfigurationsResponse> @ref _trt__GetVideoAnalyticsConfigurationsResponse

  - <trt:GetMetadataConfigurations> @ref _trt__GetMetadataConfigurations

  - <trt:GetMetadataConfigurationsResponse> @ref _trt__GetMetadataConfigurationsResponse

  - <trt:GetAudioOutputConfigurations> @ref _trt__GetAudioOutputConfigurations

  - <trt:GetAudioOutputConfigurationsResponse> @ref _trt__GetAudioOutputConfigurationsResponse

  - <trt:GetAudioDecoderConfigurations> @ref _trt__GetAudioDecoderConfigurations

  - <trt:GetAudioDecoderConfigurationsResponse> @ref _trt__GetAudioDecoderConfigurationsResponse

  - <trt:GetVideoSourceConfiguration> @ref _trt__GetVideoSourceConfiguration

  - <trt:GetVideoSourceConfigurationResponse> @ref _trt__GetVideoSourceConfigurationResponse

  - <trt:GetVideoEncoderConfiguration> @ref _trt__GetVideoEncoderConfiguration

  - <trt:GetVideoEncoderConfigurationResponse> @ref _trt__GetVideoEncoderConfigurationResponse

  - <trt:GetAudioSourceConfiguration> @ref _trt__GetAudioSourceConfiguration

  - <trt:GetAudioSourceConfigurationResponse> @ref _trt__GetAudioSourceConfigurationResponse

  - <trt:GetAudioEncoderConfiguration> @ref _trt__GetAudioEncoderConfiguration

  - <trt:GetAudioEncoderConfigurationResponse> @ref _trt__GetAudioEncoderConfigurationResponse

  - <trt:GetVideoAnalyticsConfiguration> @ref _trt__GetVideoAnalyticsConfiguration

  - <trt:GetVideoAnalyticsConfigurationResponse> @ref _trt__GetVideoAnalyticsConfigurationResponse

  - <trt:GetMetadataConfiguration> @ref _trt__GetMetadataConfiguration

  - <trt:GetMetadataConfigurationResponse> @ref _trt__GetMetadataConfigurationResponse

  - <trt:GetAudioOutputConfiguration> @ref _trt__GetAudioOutputConfiguration

  - <trt:GetAudioOutputConfigurationResponse> @ref _trt__GetAudioOutputConfigurationResponse

  - <trt:GetAudioDecoderConfiguration> @ref _trt__GetAudioDecoderConfiguration

  - <trt:GetAudioDecoderConfigurationResponse> @ref _trt__GetAudioDecoderConfigurationResponse

  - <trt:GetCompatibleVideoEncoderConfigurations> @ref _trt__GetCompatibleVideoEncoderConfigurations

  - <trt:GetCompatibleVideoEncoderConfigurationsResponse> @ref _trt__GetCompatibleVideoEncoderConfigurationsResponse

  - <trt:GetCompatibleVideoSourceConfigurations> @ref _trt__GetCompatibleVideoSourceConfigurations

  - <trt:GetCompatibleVideoSourceConfigurationsResponse> @ref _trt__GetCompatibleVideoSourceConfigurationsResponse

  - <trt:GetCompatibleAudioEncoderConfigurations> @ref _trt__GetCompatibleAudioEncoderConfigurations

  - <trt:GetCompatibleAudioEncoderConfigurationsResponse> @ref _trt__GetCompatibleAudioEncoderConfigurationsResponse

  - <trt:GetCompatibleAudioSourceConfigurations> @ref _trt__GetCompatibleAudioSourceConfigurations

  - <trt:GetCompatibleAudioSourceConfigurationsResponse> @ref _trt__GetCompatibleAudioSourceConfigurationsResponse

  - <trt:GetCompatibleVideoAnalyticsConfigurations> @ref _trt__GetCompatibleVideoAnalyticsConfigurations

  - <trt:GetCompatibleVideoAnalyticsConfigurationsResponse> @ref _trt__GetCompatibleVideoAnalyticsConfigurationsResponse

  - <trt:GetCompatibleMetadataConfigurations> @ref _trt__GetCompatibleMetadataConfigurations

  - <trt:GetCompatibleMetadataConfigurationsResponse> @ref _trt__GetCompatibleMetadataConfigurationsResponse

  - <trt:GetCompatibleAudioOutputConfigurations> @ref _trt__GetCompatibleAudioOutputConfigurations

  - <trt:GetCompatibleAudioOutputConfigurationsResponse> @ref _trt__GetCompatibleAudioOutputConfigurationsResponse

  - <trt:GetCompatibleAudioDecoderConfigurations> @ref _trt__GetCompatibleAudioDecoderConfigurations

  - <trt:GetCompatibleAudioDecoderConfigurationsResponse> @ref _trt__GetCompatibleAudioDecoderConfigurationsResponse

  - <trt:SetVideoEncoderConfiguration> @ref _trt__SetVideoEncoderConfiguration

  - <trt:SetVideoEncoderConfigurationResponse> @ref _trt__SetVideoEncoderConfigurationResponse

  - <trt:SetVideoSourceConfiguration> @ref _trt__SetVideoSourceConfiguration

  - <trt:SetVideoSourceConfigurationResponse> @ref _trt__SetVideoSourceConfigurationResponse

  - <trt:SetAudioEncoderConfiguration> @ref _trt__SetAudioEncoderConfiguration

  - <trt:SetAudioEncoderConfigurationResponse> @ref _trt__SetAudioEncoderConfigurationResponse

  - <trt:SetAudioSourceConfiguration> @ref _trt__SetAudioSourceConfiguration

  - <trt:SetAudioSourceConfigurationResponse> @ref _trt__SetAudioSourceConfigurationResponse

  - <trt:SetVideoAnalyticsConfiguration> @ref _trt__SetVideoAnalyticsConfiguration

  - <trt:SetVideoAnalyticsConfigurationResponse> @ref _trt__SetVideoAnalyticsConfigurationResponse

  - <trt:SetMetadataConfiguration> @ref _trt__SetMetadataConfiguration

  - <trt:SetMetadataConfigurationResponse> @ref _trt__SetMetadataConfigurationResponse

  - <trt:SetAudioOutputConfiguration> @ref _trt__SetAudioOutputConfiguration

  - <trt:SetAudioOutputConfigurationResponse> @ref _trt__SetAudioOutputConfigurationResponse

  - <trt:SetAudioDecoderConfiguration> @ref _trt__SetAudioDecoderConfiguration

  - <trt:SetAudioDecoderConfigurationResponse> @ref _trt__SetAudioDecoderConfigurationResponse

  - <trt:GetVideoSourceConfigurationOptions> @ref _trt__GetVideoSourceConfigurationOptions

  - <trt:GetVideoSourceConfigurationOptionsResponse> @ref _trt__GetVideoSourceConfigurationOptionsResponse

  - <trt:GetVideoEncoderConfigurationOptions> @ref _trt__GetVideoEncoderConfigurationOptions

  - <trt:GetVideoEncoderConfigurationOptionsResponse> @ref _trt__GetVideoEncoderConfigurationOptionsResponse

  - <trt:GetAudioSourceConfigurationOptions> @ref _trt__GetAudioSourceConfigurationOptions

  - <trt:GetAudioSourceConfigurationOptionsResponse> @ref _trt__GetAudioSourceConfigurationOptionsResponse

  - <trt:GetAudioEncoderConfigurationOptions> @ref _trt__GetAudioEncoderConfigurationOptions

  - <trt:GetAudioEncoderConfigurationOptionsResponse> @ref _trt__GetAudioEncoderConfigurationOptionsResponse

  - <trt:GetMetadataConfigurationOptions> @ref _trt__GetMetadataConfigurationOptions

  - <trt:GetMetadataConfigurationOptionsResponse> @ref _trt__GetMetadataConfigurationOptionsResponse

  - <trt:GetAudioOutputConfigurationOptions> @ref _trt__GetAudioOutputConfigurationOptions

  - <trt:GetAudioOutputConfigurationOptionsResponse> @ref _trt__GetAudioOutputConfigurationOptionsResponse

  - <trt:GetAudioDecoderConfigurationOptions> @ref _trt__GetAudioDecoderConfigurationOptions

  - <trt:GetAudioDecoderConfigurationOptionsResponse> @ref _trt__GetAudioDecoderConfigurationOptionsResponse

  - <trt:GetGuaranteedNumberOfVideoEncoderInstances> @ref _trt__GetGuaranteedNumberOfVideoEncoderInstances

  - <trt:GetGuaranteedNumberOfVideoEncoderInstancesResponse> @ref _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse

  - <trt:GetStreamUri> @ref _trt__GetStreamUri

  - <trt:GetStreamUriResponse> @ref _trt__GetStreamUriResponse

  - <trt:StartMulticastStreaming> @ref _trt__StartMulticastStreaming

  - <trt:StartMulticastStreamingResponse> @ref _trt__StartMulticastStreamingResponse

  - <trt:StopMulticastStreaming> @ref _trt__StopMulticastStreaming

  - <trt:StopMulticastStreamingResponse> @ref _trt__StopMulticastStreamingResponse

  - <trt:SetSynchronizationPoint> @ref _trt__SetSynchronizationPoint

  - <trt:SetSynchronizationPointResponse> @ref _trt__SetSynchronizationPointResponse

  - <trt:GetSnapshotUri> @ref _trt__GetSnapshotUri

  - <trt:GetSnapshotUriResponse> @ref _trt__GetSnapshotUriResponse

  - <trt:GetVideoSourceModes> @ref _trt__GetVideoSourceModes

  - <trt:GetVideoSourceModesResponse> @ref _trt__GetVideoSourceModesResponse

  - <trt:SetVideoSourceMode> @ref _trt__SetVideoSourceMode

  - <trt:SetVideoSourceModeResponse> @ref _trt__SetVideoSourceModeResponse

  - <trt:GetOSDs> @ref _trt__GetOSDs

  - <trt:GetOSDsResponse> @ref _trt__GetOSDsResponse

  - <trt:GetOSD> @ref _trt__GetOSD

  - <trt:GetOSDResponse> @ref _trt__GetOSDResponse

  - <trt:SetOSD> @ref _trt__SetOSD

  - <trt:SetOSDResponse> @ref _trt__SetOSDResponse

  - <trt:GetOSDOptions> @ref _trt__GetOSDOptions

  - <trt:GetOSDOptionsResponse> @ref _trt__GetOSDOptionsResponse

  - <trt:CreateOSD> @ref _trt__CreateOSD

  - <trt:CreateOSDResponse> @ref _trt__CreateOSDResponse

  - <trt:DeleteOSD> @ref _trt__DeleteOSD

  - <trt:DeleteOSDResponse> @ref _trt__DeleteOSDResponse

*/

/**

@section tse Top-level root elements of schema "http://www.onvif.org/ver10/search/wsdl"

  - <tse:GetServiceCapabilities> @ref _tse__GetServiceCapabilities

  - <tse:GetServiceCapabilitiesResponse> @ref _tse__GetServiceCapabilitiesResponse

  - <tse:Capabilities> (use wsdl2h option -g to auto-generate type _tse__Capabilities)

  - <tse:GetRecordingSummary> @ref _tse__GetRecordingSummary

  - <tse:GetRecordingSummaryResponse> @ref _tse__GetRecordingSummaryResponse

  - <tse:GetRecordingInformation> @ref _tse__GetRecordingInformation

  - <tse:GetRecordingInformationResponse> @ref _tse__GetRecordingInformationResponse

  - <tse:GetMediaAttributes> @ref _tse__GetMediaAttributes

  - <tse:GetMediaAttributesResponse> @ref _tse__GetMediaAttributesResponse

  - <tse:FindRecordings> @ref _tse__FindRecordings

  - <tse:FindRecordingsResponse> @ref _tse__FindRecordingsResponse

  - <tse:GetRecordingSearchResults> @ref _tse__GetRecordingSearchResults

  - <tse:GetRecordingSearchResultsResponse> @ref _tse__GetRecordingSearchResultsResponse

  - <tse:FindEvents> @ref _tse__FindEvents

  - <tse:FindEventsResponse> @ref _tse__FindEventsResponse

  - <tse:GetEventSearchResults> @ref _tse__GetEventSearchResults

  - <tse:GetEventSearchResultsResponse> @ref _tse__GetEventSearchResultsResponse

  - <tse:FindPTZPosition> @ref _tse__FindPTZPosition

  - <tse:FindPTZPositionResponse> @ref _tse__FindPTZPositionResponse

  - <tse:GetPTZPositionSearchResults> @ref _tse__GetPTZPositionSearchResults

  - <tse:GetPTZPositionSearchResultsResponse> @ref _tse__GetPTZPositionSearchResultsResponse

  - <tse:FindMetadata> @ref _tse__FindMetadata

  - <tse:FindMetadataResponse> @ref _tse__FindMetadataResponse

  - <tse:GetMetadataSearchResults> @ref _tse__GetMetadataSearchResults

  - <tse:GetMetadataSearchResultsResponse> @ref _tse__GetMetadataSearchResultsResponse

  - <tse:GetSearchState> @ref _tse__GetSearchState

  - <tse:GetSearchStateResponse> @ref _tse__GetSearchStateResponse

  - <tse:EndSearch> @ref _tse__EndSearch

  - <tse:EndSearchResponse> @ref _tse__EndSearchResponse

*/

/**

@section timg Top-level root elements of schema "http://www.onvif.org/ver20/imaging/wsdl"

  - <timg:GetServiceCapabilities> @ref _timg__GetServiceCapabilities

  - <timg:GetServiceCapabilitiesResponse> @ref _timg__GetServiceCapabilitiesResponse

  - <timg:Capabilities> (use wsdl2h option -g to auto-generate type _timg__Capabilities)

  - <timg:GetImagingSettings> @ref _timg__GetImagingSettings

  - <timg:GetImagingSettingsResponse> @ref _timg__GetImagingSettingsResponse

  - <timg:SetImagingSettings> @ref _timg__SetImagingSettings

  - <timg:SetImagingSettingsResponse> @ref _timg__SetImagingSettingsResponse

  - <timg:GetOptions> @ref _timg__GetOptions

  - <timg:GetOptionsResponse> @ref _timg__GetOptionsResponse

  - <timg:Move> @ref _timg__Move

  - <timg:MoveResponse> @ref _timg__MoveResponse

  - <timg:GetMoveOptions> @ref _timg__GetMoveOptions

  - <timg:GetMoveOptionsResponse> @ref _timg__GetMoveOptionsResponse

  - <timg:Stop> @ref _timg__Stop

  - <timg:StopResponse> @ref _timg__StopResponse

  - <timg:GetStatus> @ref _timg__GetStatus

  - <timg:GetStatusResponse> @ref _timg__GetStatusResponse

  - <timg:GetPresets> @ref _timg__GetPresets

  - <timg:GetPresetsResponse> @ref _timg__GetPresetsResponse

  - <timg:GetCurrentPreset> @ref _timg__GetCurrentPreset

  - <timg:GetCurrentPresetResponse> @ref _timg__GetCurrentPresetResponse

  - <timg:SetCurrentPreset> @ref _timg__SetCurrentPreset

  - <timg:SetCurrentPresetResponse> @ref _timg__SetCurrentPresetResponse

*/

/**

@section wsrfbf Top-level root elements of schema "http://docs.oasis-open.org/wsrf/bf-2"

  - <wsrfbf:BaseFault> (use wsdl2h option -g to auto-generate type _wsrfbf__BaseFault)

*/

/* End of gen/onvif.h */
